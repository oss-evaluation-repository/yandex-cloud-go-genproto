// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/compute/v1/instancegroup/instance_group.proto

package instancegroup

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IpVersion int32

const (
	IpVersion_IP_VERSION_UNSPECIFIED IpVersion = 0
	// IPv4 address, for example 192.168.0.0.
	IpVersion_IPV4 IpVersion = 1
	// IPv6 address, not available yet.
	IpVersion_IPV6 IpVersion = 2
)

var IpVersion_name = map[int32]string{
	0: "IP_VERSION_UNSPECIFIED",
	1: "IPV4",
	2: "IPV6",
}

var IpVersion_value = map[string]int32{
	"IP_VERSION_UNSPECIFIED": 0,
	"IPV4":                   1,
	"IPV6":                   2,
}

func (x IpVersion) String() string {
	return proto.EnumName(IpVersion_name, int32(x))
}

func (IpVersion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{0}
}

type InstanceGroup_Status int32

const (
	InstanceGroup_STATUS_UNSPECIFIED InstanceGroup_Status = 0
	// Instance group is being started and will become active soon.
	InstanceGroup_STARTING InstanceGroup_Status = 1
	// Instance group is active.
	// In this state the group manages its instances and monitors their health,
	// creating, deleting, stopping, updating and starting instances as needed.
	// To stop the instance group, call [yandex.cloud.compute.v1.instancegroup.InstanceGroupService.Stop].
	InstanceGroup_ACTIVE InstanceGroup_Status = 2
	// Instance group is being stopped.
	// Group's instances stop receiving traffic from the load balancer (if any) and are then stopped.
	InstanceGroup_STOPPING InstanceGroup_Status = 3
	// Instance group is stopped.
	// In this state the group cannot be updated and does not react to any changes made to its instances.
	// To start the instance group, call [yandex.cloud.compute.v1.instancegroup.InstanceGroupService.Start].
	InstanceGroup_STOPPED InstanceGroup_Status = 4
	// Instance group is being deleted.
	InstanceGroup_DELETING InstanceGroup_Status = 5
)

var InstanceGroup_Status_name = map[int32]string{
	0: "STATUS_UNSPECIFIED",
	1: "STARTING",
	2: "ACTIVE",
	3: "STOPPING",
	4: "STOPPED",
	5: "DELETING",
}

var InstanceGroup_Status_value = map[string]int32{
	"STATUS_UNSPECIFIED": 0,
	"STARTING":           1,
	"ACTIVE":             2,
	"STOPPING":           3,
	"STOPPED":            4,
	"DELETING":           5,
}

func (x InstanceGroup_Status) String() string {
	return proto.EnumName(InstanceGroup_Status_name, int32(x))
}

func (InstanceGroup_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{0, 0}
}

type ScalePolicy_CustomRule_RuleType int32

const (
	ScalePolicy_CustomRule_RULE_TYPE_UNSPECIFIED ScalePolicy_CustomRule_RuleType = 0
	// This type means that the metric applies to one instance.
	// First, Instance Groups calculates the average metric value for each instance,
	// then averages the values for instances in one availability zone.
	// This type of metric must have the `instance_id` label.
	ScalePolicy_CustomRule_UTILIZATION ScalePolicy_CustomRule_RuleType = 1
	// This type means that the metric applies to instances in one availability zone.
	// This type of metric must have the `zone_id` label.
	ScalePolicy_CustomRule_WORKLOAD ScalePolicy_CustomRule_RuleType = 2
)

var ScalePolicy_CustomRule_RuleType_name = map[int32]string{
	0: "RULE_TYPE_UNSPECIFIED",
	1: "UTILIZATION",
	2: "WORKLOAD",
}

var ScalePolicy_CustomRule_RuleType_value = map[string]int32{
	"RULE_TYPE_UNSPECIFIED": 0,
	"UTILIZATION":           1,
	"WORKLOAD":              2,
}

func (x ScalePolicy_CustomRule_RuleType) String() string {
	return proto.EnumName(ScalePolicy_CustomRule_RuleType_name, int32(x))
}

func (ScalePolicy_CustomRule_RuleType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{3, 2, 0}
}

type ScalePolicy_CustomRule_MetricType int32

const (
	ScalePolicy_CustomRule_METRIC_TYPE_UNSPECIFIED ScalePolicy_CustomRule_MetricType = 0
	// This type is used for metrics that show the metric value at a certain point in time,
	// such as requests per second to the server on an instance.
	//
	// Instance Groups calculates the average metric value for the period
	// specified in the [AutoScale.measurement_duration] field.
	ScalePolicy_CustomRule_GAUGE ScalePolicy_CustomRule_MetricType = 1
	// This type is used for metrics that monotonically increase over time,
	// such as the total number of requests to the server on an instance.
	//
	// Instance Groups calculates the average value increase for the period
	// specified in the [AutoScale.measurement_duration] field.
	ScalePolicy_CustomRule_COUNTER ScalePolicy_CustomRule_MetricType = 2
)

var ScalePolicy_CustomRule_MetricType_name = map[int32]string{
	0: "METRIC_TYPE_UNSPECIFIED",
	1: "GAUGE",
	2: "COUNTER",
}

var ScalePolicy_CustomRule_MetricType_value = map[string]int32{
	"METRIC_TYPE_UNSPECIFIED": 0,
	"GAUGE":                   1,
	"COUNTER":                 2,
}

func (x ScalePolicy_CustomRule_MetricType) String() string {
	return proto.EnumName(ScalePolicy_CustomRule_MetricType_name, int32(x))
}

func (ScalePolicy_CustomRule_MetricType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{3, 2, 1}
}

type AttachedDiskSpec_Mode int32

const (
	AttachedDiskSpec_MODE_UNSPECIFIED AttachedDiskSpec_Mode = 0
	// Read-only access.
	AttachedDiskSpec_READ_ONLY AttachedDiskSpec_Mode = 1
	// Read/Write access.
	AttachedDiskSpec_READ_WRITE AttachedDiskSpec_Mode = 2
)

var AttachedDiskSpec_Mode_name = map[int32]string{
	0: "MODE_UNSPECIFIED",
	1: "READ_ONLY",
	2: "READ_WRITE",
}

var AttachedDiskSpec_Mode_value = map[string]int32{
	"MODE_UNSPECIFIED": 0,
	"READ_ONLY":        1,
	"READ_WRITE":       2,
}

func (x AttachedDiskSpec_Mode) String() string {
	return proto.EnumName(AttachedDiskSpec_Mode_name, int32(x))
}

func (AttachedDiskSpec_Mode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{8, 0}
}

type ManagedInstance_Status int32

const (
	ManagedInstance_STATUS_UNSPECIFIED ManagedInstance_Status = 0
	// Instance is being created.
	ManagedInstance_CREATING_INSTANCE ManagedInstance_Status = 11
	// Instance is being updated.
	ManagedInstance_UPDATING_INSTANCE ManagedInstance_Status = 12
	// Instance is being deleted.
	ManagedInstance_DELETING_INSTANCE ManagedInstance_Status = 13
	// Instance is being started.
	ManagedInstance_STARTING_INSTANCE ManagedInstance_Status = 14
	// Instance is being stopped.
	ManagedInstance_STOPPING_INSTANCE ManagedInstance_Status = 15
	// Instance has been created successfully, but startup duration has not elapsed yet.
	ManagedInstance_AWAITING_STARTUP_DURATION ManagedInstance_Status = 16
	// Instance has been created successfully and startup duration has elapsed, but health checks have not passed yet and the managed instance is not ready to receive traffic.
	ManagedInstance_CHECKING_HEALTH ManagedInstance_Status = 17
	// Instance Groups is initiating health checks and routing traffic to the instances.
	ManagedInstance_OPENING_TRAFFIC ManagedInstance_Status = 18
	// Instance is now receiving traffic, but warmup duration has not elapsed yet.
	ManagedInstance_AWAITING_WARMUP_DURATION ManagedInstance_Status = 19
	// Instance Groups has initiated the process of stopping routing traffic to the instances.
	ManagedInstance_CLOSING_TRAFFIC ManagedInstance_Status = 20
	// Instance is running normally and its attributes match the current InstanceTemplate.
	ManagedInstance_RUNNING_ACTUAL ManagedInstance_Status = 21
	// Instance is running normally, but its attributes do not match the current InstanceTemplate.
	// It will be updated, recreated or deleted shortly.
	ManagedInstance_RUNNING_OUTDATED ManagedInstance_Status = 22
	// Instance was stopped.
	ManagedInstance_STOPPED ManagedInstance_Status = 23
	// Instance was deleted.
	ManagedInstance_DELETED ManagedInstance_Status = 24
)

var ManagedInstance_Status_name = map[int32]string{
	0:  "STATUS_UNSPECIFIED",
	11: "CREATING_INSTANCE",
	12: "UPDATING_INSTANCE",
	13: "DELETING_INSTANCE",
	14: "STARTING_INSTANCE",
	15: "STOPPING_INSTANCE",
	16: "AWAITING_STARTUP_DURATION",
	17: "CHECKING_HEALTH",
	18: "OPENING_TRAFFIC",
	19: "AWAITING_WARMUP_DURATION",
	20: "CLOSING_TRAFFIC",
	21: "RUNNING_ACTUAL",
	22: "RUNNING_OUTDATED",
	23: "STOPPED",
	24: "DELETED",
}

var ManagedInstance_Status_value = map[string]int32{
	"STATUS_UNSPECIFIED":        0,
	"CREATING_INSTANCE":         11,
	"UPDATING_INSTANCE":         12,
	"DELETING_INSTANCE":         13,
	"STARTING_INSTANCE":         14,
	"STOPPING_INSTANCE":         15,
	"AWAITING_STARTUP_DURATION": 16,
	"CHECKING_HEALTH":           17,
	"OPENING_TRAFFIC":           18,
	"AWAITING_WARMUP_DURATION":  19,
	"CLOSING_TRAFFIC":           20,
	"RUNNING_ACTUAL":            21,
	"RUNNING_OUTDATED":          22,
	"STOPPED":                   23,
	"DELETED":                   24,
}

func (x ManagedInstance_Status) String() string {
	return proto.EnumName(ManagedInstance_Status_name, int32(x))
}

func (ManagedInstance_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{17, 0}
}

type InstanceGroup struct {
	// ID of the instance group.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the folder that the instance group belongs to.
	FolderId string `protobuf:"bytes,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Name of the instance group.
	// The name is unique within the folder.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the instance group.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Resource labels as `key:value` pairs.
	Labels map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Instance template for creating the instance group.
	// For more information, see [Instance Templates](/docs/compute/concepts/ig-instance-templates).
	InstanceTemplate *InstanceTemplate `protobuf:"bytes,7,opt,name=instance_template,json=instanceTemplate,proto3" json:"instance_template,omitempty"`
	// [Scaling policy](/docs/compute/concepts/instance-groups/scale) of the instance group.
	ScalePolicy *ScalePolicy `protobuf:"bytes,8,opt,name=scale_policy,json=scalePolicy,proto3" json:"scale_policy,omitempty"`
	// Deployment policy of the instance group.
	DeployPolicy *DeployPolicy `protobuf:"bytes,9,opt,name=deploy_policy,json=deployPolicy,proto3" json:"deploy_policy,omitempty"`
	// Allocation policy of the instance group by zones and regions.
	AllocationPolicy *AllocationPolicy `protobuf:"bytes,10,opt,name=allocation_policy,json=allocationPolicy,proto3" json:"allocation_policy,omitempty"`
	// Information that indicates which entities can be related to this load balancer.
	LoadBalancerState *LoadBalancerState `protobuf:"bytes,11,opt,name=load_balancer_state,json=loadBalancerState,proto3" json:"load_balancer_state,omitempty"`
	// States of instances for this instance group.
	ManagedInstancesState *ManagedInstancesState `protobuf:"bytes,12,opt,name=managed_instances_state,json=managedInstancesState,proto3" json:"managed_instances_state,omitempty"`
	// Load balancing specification.
	LoadBalancerSpec *LoadBalancerSpec `protobuf:"bytes,14,opt,name=load_balancer_spec,json=loadBalancerSpec,proto3" json:"load_balancer_spec,omitempty"`
	// Health checking specification. For more information, see [Health check](/docs/load-balancer/concepts/health-check).
	HealthChecksSpec *HealthChecksSpec `protobuf:"bytes,15,opt,name=health_checks_spec,json=healthChecksSpec,proto3" json:"health_checks_spec,omitempty"`
	// ID of the service account. The service account will be used for all API calls
	// made by the Instance Groups component on behalf of the user (for example, creating instances, adding them to load balancer target group, etc.). For more information, see [Service accounts](/docs/iam/concepts/users/service-accounts).
	// To get the service account ID, use a [yandex.cloud.iam.v1.ServiceAccountService.List] request.
	ServiceAccountId string `protobuf:"bytes,16,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Status of the instance group.
	Status               InstanceGroup_Status `protobuf:"varint,17,opt,name=status,proto3,enum=yandex.cloud.compute.v1.instancegroup.InstanceGroup_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *InstanceGroup) Reset()         { *m = InstanceGroup{} }
func (m *InstanceGroup) String() string { return proto.CompactTextString(m) }
func (*InstanceGroup) ProtoMessage()    {}
func (*InstanceGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{0}
}

func (m *InstanceGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceGroup.Unmarshal(m, b)
}
func (m *InstanceGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceGroup.Marshal(b, m, deterministic)
}
func (m *InstanceGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceGroup.Merge(m, src)
}
func (m *InstanceGroup) XXX_Size() int {
	return xxx_messageInfo_InstanceGroup.Size(m)
}
func (m *InstanceGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceGroup.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceGroup proto.InternalMessageInfo

func (m *InstanceGroup) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InstanceGroup) GetFolderId() string {
	if m != nil {
		return m.FolderId
	}
	return ""
}

func (m *InstanceGroup) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *InstanceGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InstanceGroup) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *InstanceGroup) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *InstanceGroup) GetInstanceTemplate() *InstanceTemplate {
	if m != nil {
		return m.InstanceTemplate
	}
	return nil
}

func (m *InstanceGroup) GetScalePolicy() *ScalePolicy {
	if m != nil {
		return m.ScalePolicy
	}
	return nil
}

func (m *InstanceGroup) GetDeployPolicy() *DeployPolicy {
	if m != nil {
		return m.DeployPolicy
	}
	return nil
}

func (m *InstanceGroup) GetAllocationPolicy() *AllocationPolicy {
	if m != nil {
		return m.AllocationPolicy
	}
	return nil
}

func (m *InstanceGroup) GetLoadBalancerState() *LoadBalancerState {
	if m != nil {
		return m.LoadBalancerState
	}
	return nil
}

func (m *InstanceGroup) GetManagedInstancesState() *ManagedInstancesState {
	if m != nil {
		return m.ManagedInstancesState
	}
	return nil
}

func (m *InstanceGroup) GetLoadBalancerSpec() *LoadBalancerSpec {
	if m != nil {
		return m.LoadBalancerSpec
	}
	return nil
}

func (m *InstanceGroup) GetHealthChecksSpec() *HealthChecksSpec {
	if m != nil {
		return m.HealthChecksSpec
	}
	return nil
}

func (m *InstanceGroup) GetServiceAccountId() string {
	if m != nil {
		return m.ServiceAccountId
	}
	return ""
}

func (m *InstanceGroup) GetStatus() InstanceGroup_Status {
	if m != nil {
		return m.Status
	}
	return InstanceGroup_STATUS_UNSPECIFIED
}

type LoadBalancerState struct {
	// ID of the target group used for load balancing.
	TargetGroupId string `protobuf:"bytes,1,opt,name=target_group_id,json=targetGroupId,proto3" json:"target_group_id,omitempty"`
	// Status message of the target group.
	StatusMessage        string   `protobuf:"bytes,2,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadBalancerState) Reset()         { *m = LoadBalancerState{} }
func (m *LoadBalancerState) String() string { return proto.CompactTextString(m) }
func (*LoadBalancerState) ProtoMessage()    {}
func (*LoadBalancerState) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{1}
}

func (m *LoadBalancerState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadBalancerState.Unmarshal(m, b)
}
func (m *LoadBalancerState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadBalancerState.Marshal(b, m, deterministic)
}
func (m *LoadBalancerState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadBalancerState.Merge(m, src)
}
func (m *LoadBalancerState) XXX_Size() int {
	return xxx_messageInfo_LoadBalancerState.Size(m)
}
func (m *LoadBalancerState) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadBalancerState.DiscardUnknown(m)
}

var xxx_messageInfo_LoadBalancerState proto.InternalMessageInfo

func (m *LoadBalancerState) GetTargetGroupId() string {
	if m != nil {
		return m.TargetGroupId
	}
	return ""
}

func (m *LoadBalancerState) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

type ManagedInstancesState struct {
	// Target number of instances for this instance group.
	TargetSize int64 `protobuf:"varint,1,opt,name=target_size,json=targetSize,proto3" json:"target_size,omitempty"`
	// The number of running instances that match the current instance template. For more information, see [ManagedInstance.Status.RUNNING_ACTUAL].
	RunningActualCount int64 `protobuf:"varint,4,opt,name=running_actual_count,json=runningActualCount,proto3" json:"running_actual_count,omitempty"`
	// The number of running instances that does not match the current instance template. For more information, see [ManagedInstance.Status.RUNNING_OUTDATED].
	RunningOutdatedCount int64 `protobuf:"varint,5,opt,name=running_outdated_count,json=runningOutdatedCount,proto3" json:"running_outdated_count,omitempty"`
	// The number of instances in flight (for example, updating, starting, deleting). For more information, see [ManagedInstance.Status].
	ProcessingCount      int64    `protobuf:"varint,6,opt,name=processing_count,json=processingCount,proto3" json:"processing_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ManagedInstancesState) Reset()         { *m = ManagedInstancesState{} }
func (m *ManagedInstancesState) String() string { return proto.CompactTextString(m) }
func (*ManagedInstancesState) ProtoMessage()    {}
func (*ManagedInstancesState) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{2}
}

func (m *ManagedInstancesState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ManagedInstancesState.Unmarshal(m, b)
}
func (m *ManagedInstancesState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ManagedInstancesState.Marshal(b, m, deterministic)
}
func (m *ManagedInstancesState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedInstancesState.Merge(m, src)
}
func (m *ManagedInstancesState) XXX_Size() int {
	return xxx_messageInfo_ManagedInstancesState.Size(m)
}
func (m *ManagedInstancesState) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedInstancesState.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedInstancesState proto.InternalMessageInfo

func (m *ManagedInstancesState) GetTargetSize() int64 {
	if m != nil {
		return m.TargetSize
	}
	return 0
}

func (m *ManagedInstancesState) GetRunningActualCount() int64 {
	if m != nil {
		return m.RunningActualCount
	}
	return 0
}

func (m *ManagedInstancesState) GetRunningOutdatedCount() int64 {
	if m != nil {
		return m.RunningOutdatedCount
	}
	return 0
}

func (m *ManagedInstancesState) GetProcessingCount() int64 {
	if m != nil {
		return m.ProcessingCount
	}
	return 0
}

type ManagedInstancesState_Statuses struct {
	// Instance is being created.
	Creating int64 `protobuf:"varint,1,opt,name=creating,proto3" json:"creating,omitempty"`
	// Instance is being started.
	Starting int64 `protobuf:"varint,2,opt,name=starting,proto3" json:"starting,omitempty"`
	// Instance is being opened to receive traffic.
	Opening int64 `protobuf:"varint,3,opt,name=opening,proto3" json:"opening,omitempty"`
	// Instance is being warmed.
	Warming int64 `protobuf:"varint,4,opt,name=warming,proto3" json:"warming,omitempty"`
	// Instance is running normally.
	Running int64 `protobuf:"varint,5,opt,name=running,proto3" json:"running,omitempty"`
	// Instance is being closed to traffic.
	Closing int64 `protobuf:"varint,6,opt,name=closing,proto3" json:"closing,omitempty"`
	// Instance is being stopped.
	Stopping int64 `protobuf:"varint,7,opt,name=stopping,proto3" json:"stopping,omitempty"`
	// Instance is being updated.
	Updating int64 `protobuf:"varint,8,opt,name=updating,proto3" json:"updating,omitempty"`
	// Instance is being deleted.
	Deleting int64 `protobuf:"varint,9,opt,name=deleting,proto3" json:"deleting,omitempty"`
	// Instance failed and needs to be recreated.
	Failed               int64    `protobuf:"varint,10,opt,name=failed,proto3" json:"failed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ManagedInstancesState_Statuses) Reset()         { *m = ManagedInstancesState_Statuses{} }
func (m *ManagedInstancesState_Statuses) String() string { return proto.CompactTextString(m) }
func (*ManagedInstancesState_Statuses) ProtoMessage()    {}
func (*ManagedInstancesState_Statuses) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{2, 0}
}

func (m *ManagedInstancesState_Statuses) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ManagedInstancesState_Statuses.Unmarshal(m, b)
}
func (m *ManagedInstancesState_Statuses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ManagedInstancesState_Statuses.Marshal(b, m, deterministic)
}
func (m *ManagedInstancesState_Statuses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedInstancesState_Statuses.Merge(m, src)
}
func (m *ManagedInstancesState_Statuses) XXX_Size() int {
	return xxx_messageInfo_ManagedInstancesState_Statuses.Size(m)
}
func (m *ManagedInstancesState_Statuses) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedInstancesState_Statuses.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedInstancesState_Statuses proto.InternalMessageInfo

func (m *ManagedInstancesState_Statuses) GetCreating() int64 {
	if m != nil {
		return m.Creating
	}
	return 0
}

func (m *ManagedInstancesState_Statuses) GetStarting() int64 {
	if m != nil {
		return m.Starting
	}
	return 0
}

func (m *ManagedInstancesState_Statuses) GetOpening() int64 {
	if m != nil {
		return m.Opening
	}
	return 0
}

func (m *ManagedInstancesState_Statuses) GetWarming() int64 {
	if m != nil {
		return m.Warming
	}
	return 0
}

func (m *ManagedInstancesState_Statuses) GetRunning() int64 {
	if m != nil {
		return m.Running
	}
	return 0
}

func (m *ManagedInstancesState_Statuses) GetClosing() int64 {
	if m != nil {
		return m.Closing
	}
	return 0
}

func (m *ManagedInstancesState_Statuses) GetStopping() int64 {
	if m != nil {
		return m.Stopping
	}
	return 0
}

func (m *ManagedInstancesState_Statuses) GetUpdating() int64 {
	if m != nil {
		return m.Updating
	}
	return 0
}

func (m *ManagedInstancesState_Statuses) GetDeleting() int64 {
	if m != nil {
		return m.Deleting
	}
	return 0
}

func (m *ManagedInstancesState_Statuses) GetFailed() int64 {
	if m != nil {
		return m.Failed
	}
	return 0
}

type ScalePolicy struct {
	// Types that are valid to be assigned to ScaleType:
	//	*ScalePolicy_FixedScale_
	//	*ScalePolicy_AutoScale_
	ScaleType            isScalePolicy_ScaleType `protobuf_oneof:"scale_type"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ScalePolicy) Reset()         { *m = ScalePolicy{} }
func (m *ScalePolicy) String() string { return proto.CompactTextString(m) }
func (*ScalePolicy) ProtoMessage()    {}
func (*ScalePolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{3}
}

func (m *ScalePolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScalePolicy.Unmarshal(m, b)
}
func (m *ScalePolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScalePolicy.Marshal(b, m, deterministic)
}
func (m *ScalePolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScalePolicy.Merge(m, src)
}
func (m *ScalePolicy) XXX_Size() int {
	return xxx_messageInfo_ScalePolicy.Size(m)
}
func (m *ScalePolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_ScalePolicy.DiscardUnknown(m)
}

var xxx_messageInfo_ScalePolicy proto.InternalMessageInfo

type isScalePolicy_ScaleType interface {
	isScalePolicy_ScaleType()
}

type ScalePolicy_FixedScale_ struct {
	FixedScale *ScalePolicy_FixedScale `protobuf:"bytes,1,opt,name=fixed_scale,json=fixedScale,proto3,oneof"`
}

type ScalePolicy_AutoScale_ struct {
	AutoScale *ScalePolicy_AutoScale `protobuf:"bytes,2,opt,name=auto_scale,json=autoScale,proto3,oneof"`
}

func (*ScalePolicy_FixedScale_) isScalePolicy_ScaleType() {}

func (*ScalePolicy_AutoScale_) isScalePolicy_ScaleType() {}

func (m *ScalePolicy) GetScaleType() isScalePolicy_ScaleType {
	if m != nil {
		return m.ScaleType
	}
	return nil
}

func (m *ScalePolicy) GetFixedScale() *ScalePolicy_FixedScale {
	if x, ok := m.GetScaleType().(*ScalePolicy_FixedScale_); ok {
		return x.FixedScale
	}
	return nil
}

func (m *ScalePolicy) GetAutoScale() *ScalePolicy_AutoScale {
	if x, ok := m.GetScaleType().(*ScalePolicy_AutoScale_); ok {
		return x.AutoScale
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ScalePolicy) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ScalePolicy_FixedScale_)(nil),
		(*ScalePolicy_AutoScale_)(nil),
	}
}

type ScalePolicy_AutoScale struct {
	// Lower limit for instance count in each zone.
	MinZoneSize int64 `protobuf:"varint,1,opt,name=min_zone_size,json=minZoneSize,proto3" json:"min_zone_size,omitempty"`
	// Upper limit for total instance count (across all zones).
	// 0 means maximum limit = 100.
	MaxSize int64 `protobuf:"varint,2,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`
	// Time in seconds allotted for averaging metrics.
	MeasurementDuration *duration.Duration `protobuf:"bytes,3,opt,name=measurement_duration,json=measurementDuration,proto3" json:"measurement_duration,omitempty"`
	// The warmup time of the instance in seconds. During this time,
	// traffic is sent to the instance, but instance metrics are not collected.
	WarmupDuration *duration.Duration `protobuf:"bytes,4,opt,name=warmup_duration,json=warmupDuration,proto3" json:"warmup_duration,omitempty"`
	// Minimum amount of time in seconds allotted for monitoring before
	// Instance Groups can reduce the number of instances in the group.
	// During this time, the group size doesn't decrease, even if the new metric values
	// indicate that it should.
	StabilizationDuration *duration.Duration `protobuf:"bytes,5,opt,name=stabilization_duration,json=stabilizationDuration,proto3" json:"stabilization_duration,omitempty"`
	// Target group size.
	InitialSize int64 `protobuf:"varint,6,opt,name=initial_size,json=initialSize,proto3" json:"initial_size,omitempty"`
	// Defines an autoscaling rule based on the average CPU utilization of the instance group.
	CpuUtilizationRule *ScalePolicy_CpuUtilizationRule `protobuf:"bytes,7,opt,name=cpu_utilization_rule,json=cpuUtilizationRule,proto3" json:"cpu_utilization_rule,omitempty"`
	// Defines an autoscaling rule based on a [custom metric](/docs/monitoring/operations/metric/add) from Yandex Monitoring.
	CustomRules          []*ScalePolicy_CustomRule `protobuf:"bytes,8,rep,name=custom_rules,json=customRules,proto3" json:"custom_rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ScalePolicy_AutoScale) Reset()         { *m = ScalePolicy_AutoScale{} }
func (m *ScalePolicy_AutoScale) String() string { return proto.CompactTextString(m) }
func (*ScalePolicy_AutoScale) ProtoMessage()    {}
func (*ScalePolicy_AutoScale) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{3, 0}
}

func (m *ScalePolicy_AutoScale) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScalePolicy_AutoScale.Unmarshal(m, b)
}
func (m *ScalePolicy_AutoScale) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScalePolicy_AutoScale.Marshal(b, m, deterministic)
}
func (m *ScalePolicy_AutoScale) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScalePolicy_AutoScale.Merge(m, src)
}
func (m *ScalePolicy_AutoScale) XXX_Size() int {
	return xxx_messageInfo_ScalePolicy_AutoScale.Size(m)
}
func (m *ScalePolicy_AutoScale) XXX_DiscardUnknown() {
	xxx_messageInfo_ScalePolicy_AutoScale.DiscardUnknown(m)
}

var xxx_messageInfo_ScalePolicy_AutoScale proto.InternalMessageInfo

func (m *ScalePolicy_AutoScale) GetMinZoneSize() int64 {
	if m != nil {
		return m.MinZoneSize
	}
	return 0
}

func (m *ScalePolicy_AutoScale) GetMaxSize() int64 {
	if m != nil {
		return m.MaxSize
	}
	return 0
}

func (m *ScalePolicy_AutoScale) GetMeasurementDuration() *duration.Duration {
	if m != nil {
		return m.MeasurementDuration
	}
	return nil
}

func (m *ScalePolicy_AutoScale) GetWarmupDuration() *duration.Duration {
	if m != nil {
		return m.WarmupDuration
	}
	return nil
}

func (m *ScalePolicy_AutoScale) GetStabilizationDuration() *duration.Duration {
	if m != nil {
		return m.StabilizationDuration
	}
	return nil
}

func (m *ScalePolicy_AutoScale) GetInitialSize() int64 {
	if m != nil {
		return m.InitialSize
	}
	return 0
}

func (m *ScalePolicy_AutoScale) GetCpuUtilizationRule() *ScalePolicy_CpuUtilizationRule {
	if m != nil {
		return m.CpuUtilizationRule
	}
	return nil
}

func (m *ScalePolicy_AutoScale) GetCustomRules() []*ScalePolicy_CustomRule {
	if m != nil {
		return m.CustomRules
	}
	return nil
}

type ScalePolicy_CpuUtilizationRule struct {
	// Target CPU utilization level. Instance Groups maintains this level for each availability zone.
	UtilizationTarget    float64  `protobuf:"fixed64,1,opt,name=utilization_target,json=utilizationTarget,proto3" json:"utilization_target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScalePolicy_CpuUtilizationRule) Reset()         { *m = ScalePolicy_CpuUtilizationRule{} }
func (m *ScalePolicy_CpuUtilizationRule) String() string { return proto.CompactTextString(m) }
func (*ScalePolicy_CpuUtilizationRule) ProtoMessage()    {}
func (*ScalePolicy_CpuUtilizationRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{3, 1}
}

func (m *ScalePolicy_CpuUtilizationRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScalePolicy_CpuUtilizationRule.Unmarshal(m, b)
}
func (m *ScalePolicy_CpuUtilizationRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScalePolicy_CpuUtilizationRule.Marshal(b, m, deterministic)
}
func (m *ScalePolicy_CpuUtilizationRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScalePolicy_CpuUtilizationRule.Merge(m, src)
}
func (m *ScalePolicy_CpuUtilizationRule) XXX_Size() int {
	return xxx_messageInfo_ScalePolicy_CpuUtilizationRule.Size(m)
}
func (m *ScalePolicy_CpuUtilizationRule) XXX_DiscardUnknown() {
	xxx_messageInfo_ScalePolicy_CpuUtilizationRule.DiscardUnknown(m)
}

var xxx_messageInfo_ScalePolicy_CpuUtilizationRule proto.InternalMessageInfo

func (m *ScalePolicy_CpuUtilizationRule) GetUtilizationTarget() float64 {
	if m != nil {
		return m.UtilizationTarget
	}
	return 0
}

type ScalePolicy_CustomRule struct {
	// Custom metric rule type. This field affects which label from
	// the custom metric should be used: `zone_id` or `instance_id`.
	RuleType ScalePolicy_CustomRule_RuleType `protobuf:"varint,1,opt,name=rule_type,json=ruleType,proto3,enum=yandex.cloud.compute.v1.instancegroup.ScalePolicy_CustomRule_RuleType" json:"rule_type,omitempty"`
	// Type of custom metric. This field affects how Instance Groups calculates the average metric value.
	MetricType ScalePolicy_CustomRule_MetricType `protobuf:"varint,2,opt,name=metric_type,json=metricType,proto3,enum=yandex.cloud.compute.v1.instancegroup.ScalePolicy_CustomRule_MetricType" json:"metric_type,omitempty"`
	// Name of custom metric in Yandex Monitoring that should be used for scaling.
	MetricName string `protobuf:"bytes,3,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
	// Target value for the custom metric. Instance Groups maintains this level for each availability zone.
	Target               float64  `protobuf:"fixed64,4,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScalePolicy_CustomRule) Reset()         { *m = ScalePolicy_CustomRule{} }
func (m *ScalePolicy_CustomRule) String() string { return proto.CompactTextString(m) }
func (*ScalePolicy_CustomRule) ProtoMessage()    {}
func (*ScalePolicy_CustomRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{3, 2}
}

func (m *ScalePolicy_CustomRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScalePolicy_CustomRule.Unmarshal(m, b)
}
func (m *ScalePolicy_CustomRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScalePolicy_CustomRule.Marshal(b, m, deterministic)
}
func (m *ScalePolicy_CustomRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScalePolicy_CustomRule.Merge(m, src)
}
func (m *ScalePolicy_CustomRule) XXX_Size() int {
	return xxx_messageInfo_ScalePolicy_CustomRule.Size(m)
}
func (m *ScalePolicy_CustomRule) XXX_DiscardUnknown() {
	xxx_messageInfo_ScalePolicy_CustomRule.DiscardUnknown(m)
}

var xxx_messageInfo_ScalePolicy_CustomRule proto.InternalMessageInfo

func (m *ScalePolicy_CustomRule) GetRuleType() ScalePolicy_CustomRule_RuleType {
	if m != nil {
		return m.RuleType
	}
	return ScalePolicy_CustomRule_RULE_TYPE_UNSPECIFIED
}

func (m *ScalePolicy_CustomRule) GetMetricType() ScalePolicy_CustomRule_MetricType {
	if m != nil {
		return m.MetricType
	}
	return ScalePolicy_CustomRule_METRIC_TYPE_UNSPECIFIED
}

func (m *ScalePolicy_CustomRule) GetMetricName() string {
	if m != nil {
		return m.MetricName
	}
	return ""
}

func (m *ScalePolicy_CustomRule) GetTarget() float64 {
	if m != nil {
		return m.Target
	}
	return 0
}

type ScalePolicy_FixedScale struct {
	// Number of instances in the instance group.
	Size                 int64    `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScalePolicy_FixedScale) Reset()         { *m = ScalePolicy_FixedScale{} }
func (m *ScalePolicy_FixedScale) String() string { return proto.CompactTextString(m) }
func (*ScalePolicy_FixedScale) ProtoMessage()    {}
func (*ScalePolicy_FixedScale) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{3, 3}
}

func (m *ScalePolicy_FixedScale) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScalePolicy_FixedScale.Unmarshal(m, b)
}
func (m *ScalePolicy_FixedScale) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScalePolicy_FixedScale.Marshal(b, m, deterministic)
}
func (m *ScalePolicy_FixedScale) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScalePolicy_FixedScale.Merge(m, src)
}
func (m *ScalePolicy_FixedScale) XXX_Size() int {
	return xxx_messageInfo_ScalePolicy_FixedScale.Size(m)
}
func (m *ScalePolicy_FixedScale) XXX_DiscardUnknown() {
	xxx_messageInfo_ScalePolicy_FixedScale.DiscardUnknown(m)
}

var xxx_messageInfo_ScalePolicy_FixedScale proto.InternalMessageInfo

func (m *ScalePolicy_FixedScale) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type DeployPolicy struct {
	// The maximum number of running instances that can be taken offline (i.e., stopped or deleted) at the same time
	// during the update process.
	// If [max_expansion] is not specified or set to zero, [max_unavailable] must be set to a non-zero value.
	MaxUnavailable int64 `protobuf:"varint,1,opt,name=max_unavailable,json=maxUnavailable,proto3" json:"max_unavailable,omitempty"`
	// The maximum number of instances that can be deleted at the same time.
	MaxDeleting int64 `protobuf:"varint,2,opt,name=max_deleting,json=maxDeleting,proto3" json:"max_deleting,omitempty"`
	// The maximum number of instances that can be created at the same time.
	MaxCreating int64 `protobuf:"varint,3,opt,name=max_creating,json=maxCreating,proto3" json:"max_creating,omitempty"`
	// The maximum number of instances that can be temporarily allocated above the group's target size
	// during the update process.
	// If [max_unavailable] is not specified or set to zero, [max_expansion] must be set to a non-zero value.
	MaxExpansion int64 `protobuf:"varint,6,opt,name=max_expansion,json=maxExpansion,proto3" json:"max_expansion,omitempty"`
	// Instance startup duration.
	// Instance will be considered up and running (and start receiving traffic) only after startup_duration
	// has elapsed and all health checks are passed.
	// See [yandex.cloud.compute.v1.instancegroup.ManagedInstance.Status] for more information.
	StartupDuration      *duration.Duration `protobuf:"bytes,7,opt,name=startup_duration,json=startupDuration,proto3" json:"startup_duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DeployPolicy) Reset()         { *m = DeployPolicy{} }
func (m *DeployPolicy) String() string { return proto.CompactTextString(m) }
func (*DeployPolicy) ProtoMessage()    {}
func (*DeployPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{4}
}

func (m *DeployPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployPolicy.Unmarshal(m, b)
}
func (m *DeployPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployPolicy.Marshal(b, m, deterministic)
}
func (m *DeployPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployPolicy.Merge(m, src)
}
func (m *DeployPolicy) XXX_Size() int {
	return xxx_messageInfo_DeployPolicy.Size(m)
}
func (m *DeployPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_DeployPolicy proto.InternalMessageInfo

func (m *DeployPolicy) GetMaxUnavailable() int64 {
	if m != nil {
		return m.MaxUnavailable
	}
	return 0
}

func (m *DeployPolicy) GetMaxDeleting() int64 {
	if m != nil {
		return m.MaxDeleting
	}
	return 0
}

func (m *DeployPolicy) GetMaxCreating() int64 {
	if m != nil {
		return m.MaxCreating
	}
	return 0
}

func (m *DeployPolicy) GetMaxExpansion() int64 {
	if m != nil {
		return m.MaxExpansion
	}
	return 0
}

func (m *DeployPolicy) GetStartupDuration() *duration.Duration {
	if m != nil {
		return m.StartupDuration
	}
	return nil
}

type AllocationPolicy struct {
	// List of availability zones.
	Zones                []*AllocationPolicy_Zone `protobuf:"bytes,1,rep,name=zones,proto3" json:"zones,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *AllocationPolicy) Reset()         { *m = AllocationPolicy{} }
func (m *AllocationPolicy) String() string { return proto.CompactTextString(m) }
func (*AllocationPolicy) ProtoMessage()    {}
func (*AllocationPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{5}
}

func (m *AllocationPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllocationPolicy.Unmarshal(m, b)
}
func (m *AllocationPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllocationPolicy.Marshal(b, m, deterministic)
}
func (m *AllocationPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllocationPolicy.Merge(m, src)
}
func (m *AllocationPolicy) XXX_Size() int {
	return xxx_messageInfo_AllocationPolicy.Size(m)
}
func (m *AllocationPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_AllocationPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_AllocationPolicy proto.InternalMessageInfo

func (m *AllocationPolicy) GetZones() []*AllocationPolicy_Zone {
	if m != nil {
		return m.Zones
	}
	return nil
}

type AllocationPolicy_Zone struct {
	// ID of the availability zone where the instance resides.
	ZoneId               string   `protobuf:"bytes,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllocationPolicy_Zone) Reset()         { *m = AllocationPolicy_Zone{} }
func (m *AllocationPolicy_Zone) String() string { return proto.CompactTextString(m) }
func (*AllocationPolicy_Zone) ProtoMessage()    {}
func (*AllocationPolicy_Zone) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{5, 0}
}

func (m *AllocationPolicy_Zone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllocationPolicy_Zone.Unmarshal(m, b)
}
func (m *AllocationPolicy_Zone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllocationPolicy_Zone.Marshal(b, m, deterministic)
}
func (m *AllocationPolicy_Zone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllocationPolicy_Zone.Merge(m, src)
}
func (m *AllocationPolicy_Zone) XXX_Size() int {
	return xxx_messageInfo_AllocationPolicy_Zone.Size(m)
}
func (m *AllocationPolicy_Zone) XXX_DiscardUnknown() {
	xxx_messageInfo_AllocationPolicy_Zone.DiscardUnknown(m)
}

var xxx_messageInfo_AllocationPolicy_Zone proto.InternalMessageInfo

func (m *AllocationPolicy_Zone) GetZoneId() string {
	if m != nil {
		return m.ZoneId
	}
	return ""
}

type InstanceTemplate struct {
	// Description of the instance template.
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// Resource labels as `key:value` pairs.
	Labels map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// ID of the hardware platform configuration for the instance.
	// Platforms allows you to create various types of instances: with a large amount of memory,
	// with a large number of cores, with a burstable performance.
	// For more information, see [Platforms](/docs/compute/concepts/vm-platforms).
	PlatformId string `protobuf:"bytes,3,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	// Computing resources of the instance such as the amount of memory and number of cores.
	ResourcesSpec *ResourcesSpec `protobuf:"bytes,4,opt,name=resources_spec,json=resourcesSpec,proto3" json:"resources_spec,omitempty"`
	// The metadata `key:value` pairs assigned to this instance template. This includes custom metadata and predefined keys.
	//
	// For example, you may use the metadata in order to provide your public SSH key to the instance.
	// For more information, see [Metadata](/docs/compute/concepts/vm-metadata).
	Metadata map[string]string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Boot disk specification that will be attached to the instance.
	BootDiskSpec *AttachedDiskSpec `protobuf:"bytes,6,opt,name=boot_disk_spec,json=bootDiskSpec,proto3" json:"boot_disk_spec,omitempty"`
	// Array of secondary disks that will be attached to the instance.
	SecondaryDiskSpecs []*AttachedDiskSpec `protobuf:"bytes,7,rep,name=secondary_disk_specs,json=secondaryDiskSpecs,proto3" json:"secondary_disk_specs,omitempty"`
	// Array of network interfaces that will be attached to the instance.
	NetworkInterfaceSpecs []*NetworkInterfaceSpec `protobuf:"bytes,8,rep,name=network_interface_specs,json=networkInterfaceSpecs,proto3" json:"network_interface_specs,omitempty"`
	// Scheduling policy for the instance.
	SchedulingPolicy *SchedulingPolicy `protobuf:"bytes,9,opt,name=scheduling_policy,json=schedulingPolicy,proto3" json:"scheduling_policy,omitempty"`
	// Service account ID for the instance.
	ServiceAccountId     string   `protobuf:"bytes,10,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstanceTemplate) Reset()         { *m = InstanceTemplate{} }
func (m *InstanceTemplate) String() string { return proto.CompactTextString(m) }
func (*InstanceTemplate) ProtoMessage()    {}
func (*InstanceTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{6}
}

func (m *InstanceTemplate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceTemplate.Unmarshal(m, b)
}
func (m *InstanceTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceTemplate.Marshal(b, m, deterministic)
}
func (m *InstanceTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceTemplate.Merge(m, src)
}
func (m *InstanceTemplate) XXX_Size() int {
	return xxx_messageInfo_InstanceTemplate.Size(m)
}
func (m *InstanceTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceTemplate proto.InternalMessageInfo

func (m *InstanceTemplate) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *InstanceTemplate) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *InstanceTemplate) GetPlatformId() string {
	if m != nil {
		return m.PlatformId
	}
	return ""
}

func (m *InstanceTemplate) GetResourcesSpec() *ResourcesSpec {
	if m != nil {
		return m.ResourcesSpec
	}
	return nil
}

func (m *InstanceTemplate) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *InstanceTemplate) GetBootDiskSpec() *AttachedDiskSpec {
	if m != nil {
		return m.BootDiskSpec
	}
	return nil
}

func (m *InstanceTemplate) GetSecondaryDiskSpecs() []*AttachedDiskSpec {
	if m != nil {
		return m.SecondaryDiskSpecs
	}
	return nil
}

func (m *InstanceTemplate) GetNetworkInterfaceSpecs() []*NetworkInterfaceSpec {
	if m != nil {
		return m.NetworkInterfaceSpecs
	}
	return nil
}

func (m *InstanceTemplate) GetSchedulingPolicy() *SchedulingPolicy {
	if m != nil {
		return m.SchedulingPolicy
	}
	return nil
}

func (m *InstanceTemplate) GetServiceAccountId() string {
	if m != nil {
		return m.ServiceAccountId
	}
	return ""
}

type ResourcesSpec struct {
	// The amount of memory available to the instance, specified in bytes.
	Memory int64 `protobuf:"varint,1,opt,name=memory,proto3" json:"memory,omitempty"`
	// The number of cores available to the instance.
	Cores int64 `protobuf:"varint,2,opt,name=cores,proto3" json:"cores,omitempty"`
	// Baseline level of CPU performance with the ability to burst performance above that baseline level.
	// This field sets baseline performance for each core.
	CoreFraction int64 `protobuf:"varint,3,opt,name=core_fraction,json=coreFraction,proto3" json:"core_fraction,omitempty"`
	// The number of GPUs available to the instance.
	Gpus                 int64    `protobuf:"varint,4,opt,name=gpus,proto3" json:"gpus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourcesSpec) Reset()         { *m = ResourcesSpec{} }
func (m *ResourcesSpec) String() string { return proto.CompactTextString(m) }
func (*ResourcesSpec) ProtoMessage()    {}
func (*ResourcesSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{7}
}

func (m *ResourcesSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcesSpec.Unmarshal(m, b)
}
func (m *ResourcesSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcesSpec.Marshal(b, m, deterministic)
}
func (m *ResourcesSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcesSpec.Merge(m, src)
}
func (m *ResourcesSpec) XXX_Size() int {
	return xxx_messageInfo_ResourcesSpec.Size(m)
}
func (m *ResourcesSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcesSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcesSpec proto.InternalMessageInfo

func (m *ResourcesSpec) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *ResourcesSpec) GetCores() int64 {
	if m != nil {
		return m.Cores
	}
	return 0
}

func (m *ResourcesSpec) GetCoreFraction() int64 {
	if m != nil {
		return m.CoreFraction
	}
	return 0
}

func (m *ResourcesSpec) GetGpus() int64 {
	if m != nil {
		return m.Gpus
	}
	return 0
}

type AttachedDiskSpec struct {
	// Access mode to the Disk resource.
	Mode AttachedDiskSpec_Mode `protobuf:"varint,1,opt,name=mode,proto3,enum=yandex.cloud.compute.v1.instancegroup.AttachedDiskSpec_Mode" json:"mode,omitempty"`
	// Serial number that is reflected in the /dev/disk/by-id/ tree
	// of a Linux operating system running within the instance.
	//
	// This value can be used to reference the device for mounting, resizing, and so on, from within the instance.
	DeviceName string `protobuf:"bytes,2,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	// Disk specification that is attached to the instance. For more information, see [Disks](/docs/compute/concepts/disk).
	DiskSpec             *AttachedDiskSpec_DiskSpec `protobuf:"bytes,3,opt,name=disk_spec,json=diskSpec,proto3" json:"disk_spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *AttachedDiskSpec) Reset()         { *m = AttachedDiskSpec{} }
func (m *AttachedDiskSpec) String() string { return proto.CompactTextString(m) }
func (*AttachedDiskSpec) ProtoMessage()    {}
func (*AttachedDiskSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{8}
}

func (m *AttachedDiskSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachedDiskSpec.Unmarshal(m, b)
}
func (m *AttachedDiskSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachedDiskSpec.Marshal(b, m, deterministic)
}
func (m *AttachedDiskSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachedDiskSpec.Merge(m, src)
}
func (m *AttachedDiskSpec) XXX_Size() int {
	return xxx_messageInfo_AttachedDiskSpec.Size(m)
}
func (m *AttachedDiskSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachedDiskSpec.DiscardUnknown(m)
}

var xxx_messageInfo_AttachedDiskSpec proto.InternalMessageInfo

func (m *AttachedDiskSpec) GetMode() AttachedDiskSpec_Mode {
	if m != nil {
		return m.Mode
	}
	return AttachedDiskSpec_MODE_UNSPECIFIED
}

func (m *AttachedDiskSpec) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

func (m *AttachedDiskSpec) GetDiskSpec() *AttachedDiskSpec_DiskSpec {
	if m != nil {
		return m.DiskSpec
	}
	return nil
}

type AttachedDiskSpec_DiskSpec struct {
	// Description of the disk.
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// ID of the disk type.
	TypeId string `protobuf:"bytes,2,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	// Size of the disk, specified in bytes.
	Size int64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	// Types that are valid to be assigned to SourceOneof:
	//	*AttachedDiskSpec_DiskSpec_ImageId
	//	*AttachedDiskSpec_DiskSpec_SnapshotId
	SourceOneof          isAttachedDiskSpec_DiskSpec_SourceOneof `protobuf_oneof:"source_oneof"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *AttachedDiskSpec_DiskSpec) Reset()         { *m = AttachedDiskSpec_DiskSpec{} }
func (m *AttachedDiskSpec_DiskSpec) String() string { return proto.CompactTextString(m) }
func (*AttachedDiskSpec_DiskSpec) ProtoMessage()    {}
func (*AttachedDiskSpec_DiskSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{8, 0}
}

func (m *AttachedDiskSpec_DiskSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachedDiskSpec_DiskSpec.Unmarshal(m, b)
}
func (m *AttachedDiskSpec_DiskSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachedDiskSpec_DiskSpec.Marshal(b, m, deterministic)
}
func (m *AttachedDiskSpec_DiskSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachedDiskSpec_DiskSpec.Merge(m, src)
}
func (m *AttachedDiskSpec_DiskSpec) XXX_Size() int {
	return xxx_messageInfo_AttachedDiskSpec_DiskSpec.Size(m)
}
func (m *AttachedDiskSpec_DiskSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachedDiskSpec_DiskSpec.DiscardUnknown(m)
}

var xxx_messageInfo_AttachedDiskSpec_DiskSpec proto.InternalMessageInfo

func (m *AttachedDiskSpec_DiskSpec) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AttachedDiskSpec_DiskSpec) GetTypeId() string {
	if m != nil {
		return m.TypeId
	}
	return ""
}

func (m *AttachedDiskSpec_DiskSpec) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type isAttachedDiskSpec_DiskSpec_SourceOneof interface {
	isAttachedDiskSpec_DiskSpec_SourceOneof()
}

type AttachedDiskSpec_DiskSpec_ImageId struct {
	ImageId string `protobuf:"bytes,4,opt,name=image_id,json=imageId,proto3,oneof"`
}

type AttachedDiskSpec_DiskSpec_SnapshotId struct {
	SnapshotId string `protobuf:"bytes,5,opt,name=snapshot_id,json=snapshotId,proto3,oneof"`
}

func (*AttachedDiskSpec_DiskSpec_ImageId) isAttachedDiskSpec_DiskSpec_SourceOneof() {}

func (*AttachedDiskSpec_DiskSpec_SnapshotId) isAttachedDiskSpec_DiskSpec_SourceOneof() {}

func (m *AttachedDiskSpec_DiskSpec) GetSourceOneof() isAttachedDiskSpec_DiskSpec_SourceOneof {
	if m != nil {
		return m.SourceOneof
	}
	return nil
}

func (m *AttachedDiskSpec_DiskSpec) GetImageId() string {
	if x, ok := m.GetSourceOneof().(*AttachedDiskSpec_DiskSpec_ImageId); ok {
		return x.ImageId
	}
	return ""
}

func (m *AttachedDiskSpec_DiskSpec) GetSnapshotId() string {
	if x, ok := m.GetSourceOneof().(*AttachedDiskSpec_DiskSpec_SnapshotId); ok {
		return x.SnapshotId
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AttachedDiskSpec_DiskSpec) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AttachedDiskSpec_DiskSpec_ImageId)(nil),
		(*AttachedDiskSpec_DiskSpec_SnapshotId)(nil),
	}
}

type NetworkInterfaceSpec struct {
	// ID of the network.
	NetworkId string `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// IDs of the subnets.
	SubnetIds []string `protobuf:"bytes,2,rep,name=subnet_ids,json=subnetIds,proto3" json:"subnet_ids,omitempty"`
	// Primary IPv4 address that is assigned to the instance for this network interface.
	PrimaryV4AddressSpec *PrimaryAddressSpec `protobuf:"bytes,3,opt,name=primary_v4_address_spec,json=primaryV4AddressSpec,proto3" json:"primary_v4_address_spec,omitempty"`
	// Primary IPv6 address that is assigned to the instance for this network interface. IPv6 not available yet.
	PrimaryV6AddressSpec *PrimaryAddressSpec `protobuf:"bytes,4,opt,name=primary_v6_address_spec,json=primaryV6AddressSpec,proto3" json:"primary_v6_address_spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *NetworkInterfaceSpec) Reset()         { *m = NetworkInterfaceSpec{} }
func (m *NetworkInterfaceSpec) String() string { return proto.CompactTextString(m) }
func (*NetworkInterfaceSpec) ProtoMessage()    {}
func (*NetworkInterfaceSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{9}
}

func (m *NetworkInterfaceSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkInterfaceSpec.Unmarshal(m, b)
}
func (m *NetworkInterfaceSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkInterfaceSpec.Marshal(b, m, deterministic)
}
func (m *NetworkInterfaceSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInterfaceSpec.Merge(m, src)
}
func (m *NetworkInterfaceSpec) XXX_Size() int {
	return xxx_messageInfo_NetworkInterfaceSpec.Size(m)
}
func (m *NetworkInterfaceSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInterfaceSpec.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInterfaceSpec proto.InternalMessageInfo

func (m *NetworkInterfaceSpec) GetNetworkId() string {
	if m != nil {
		return m.NetworkId
	}
	return ""
}

func (m *NetworkInterfaceSpec) GetSubnetIds() []string {
	if m != nil {
		return m.SubnetIds
	}
	return nil
}

func (m *NetworkInterfaceSpec) GetPrimaryV4AddressSpec() *PrimaryAddressSpec {
	if m != nil {
		return m.PrimaryV4AddressSpec
	}
	return nil
}

func (m *NetworkInterfaceSpec) GetPrimaryV6AddressSpec() *PrimaryAddressSpec {
	if m != nil {
		return m.PrimaryV6AddressSpec
	}
	return nil
}

type PrimaryAddressSpec struct {
	// An external IP address configuration.
	// If not specified, then this managed instance will have no external internet access.
	OneToOneNatSpec      *OneToOneNatSpec `protobuf:"bytes,1,opt,name=one_to_one_nat_spec,json=oneToOneNatSpec,proto3" json:"one_to_one_nat_spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PrimaryAddressSpec) Reset()         { *m = PrimaryAddressSpec{} }
func (m *PrimaryAddressSpec) String() string { return proto.CompactTextString(m) }
func (*PrimaryAddressSpec) ProtoMessage()    {}
func (*PrimaryAddressSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{10}
}

func (m *PrimaryAddressSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimaryAddressSpec.Unmarshal(m, b)
}
func (m *PrimaryAddressSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimaryAddressSpec.Marshal(b, m, deterministic)
}
func (m *PrimaryAddressSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimaryAddressSpec.Merge(m, src)
}
func (m *PrimaryAddressSpec) XXX_Size() int {
	return xxx_messageInfo_PrimaryAddressSpec.Size(m)
}
func (m *PrimaryAddressSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimaryAddressSpec.DiscardUnknown(m)
}

var xxx_messageInfo_PrimaryAddressSpec proto.InternalMessageInfo

func (m *PrimaryAddressSpec) GetOneToOneNatSpec() *OneToOneNatSpec {
	if m != nil {
		return m.OneToOneNatSpec
	}
	return nil
}

type OneToOneNatSpec struct {
	// IP version for the public IP address.
	IpVersion            IpVersion `protobuf:"varint,1,opt,name=ip_version,json=ipVersion,proto3,enum=yandex.cloud.compute.v1.instancegroup.IpVersion" json:"ip_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *OneToOneNatSpec) Reset()         { *m = OneToOneNatSpec{} }
func (m *OneToOneNatSpec) String() string { return proto.CompactTextString(m) }
func (*OneToOneNatSpec) ProtoMessage()    {}
func (*OneToOneNatSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{11}
}

func (m *OneToOneNatSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OneToOneNatSpec.Unmarshal(m, b)
}
func (m *OneToOneNatSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OneToOneNatSpec.Marshal(b, m, deterministic)
}
func (m *OneToOneNatSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneToOneNatSpec.Merge(m, src)
}
func (m *OneToOneNatSpec) XXX_Size() int {
	return xxx_messageInfo_OneToOneNatSpec.Size(m)
}
func (m *OneToOneNatSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_OneToOneNatSpec.DiscardUnknown(m)
}

var xxx_messageInfo_OneToOneNatSpec proto.InternalMessageInfo

func (m *OneToOneNatSpec) GetIpVersion() IpVersion {
	if m != nil {
		return m.IpVersion
	}
	return IpVersion_IP_VERSION_UNSPECIFIED
}

type SchedulingPolicy struct {
	// Preemptible instances are stopped at least once every 24 hours, and can be stopped at any time
	// if their resources are needed by Compute.
	// For more information, see [Preemptible Virtual Machines](/docs/compute/concepts/preemptible-vm).
	Preemptible          bool     `protobuf:"varint,1,opt,name=preemptible,proto3" json:"preemptible,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SchedulingPolicy) Reset()         { *m = SchedulingPolicy{} }
func (m *SchedulingPolicy) String() string { return proto.CompactTextString(m) }
func (*SchedulingPolicy) ProtoMessage()    {}
func (*SchedulingPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{12}
}

func (m *SchedulingPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SchedulingPolicy.Unmarshal(m, b)
}
func (m *SchedulingPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SchedulingPolicy.Marshal(b, m, deterministic)
}
func (m *SchedulingPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchedulingPolicy.Merge(m, src)
}
func (m *SchedulingPolicy) XXX_Size() int {
	return xxx_messageInfo_SchedulingPolicy.Size(m)
}
func (m *SchedulingPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_SchedulingPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_SchedulingPolicy proto.InternalMessageInfo

func (m *SchedulingPolicy) GetPreemptible() bool {
	if m != nil {
		return m.Preemptible
	}
	return false
}

type LoadBalancerSpec struct {
	// Specification of the target group that the instance group will be added to. For more information, see [Target groups and resources](/docs/load-balancer/target-resources).
	TargetGroupSpec      *TargetGroupSpec `protobuf:"bytes,1,opt,name=target_group_spec,json=targetGroupSpec,proto3" json:"target_group_spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *LoadBalancerSpec) Reset()         { *m = LoadBalancerSpec{} }
func (m *LoadBalancerSpec) String() string { return proto.CompactTextString(m) }
func (*LoadBalancerSpec) ProtoMessage()    {}
func (*LoadBalancerSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{13}
}

func (m *LoadBalancerSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadBalancerSpec.Unmarshal(m, b)
}
func (m *LoadBalancerSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadBalancerSpec.Marshal(b, m, deterministic)
}
func (m *LoadBalancerSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadBalancerSpec.Merge(m, src)
}
func (m *LoadBalancerSpec) XXX_Size() int {
	return xxx_messageInfo_LoadBalancerSpec.Size(m)
}
func (m *LoadBalancerSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadBalancerSpec.DiscardUnknown(m)
}

var xxx_messageInfo_LoadBalancerSpec proto.InternalMessageInfo

func (m *LoadBalancerSpec) GetTargetGroupSpec() *TargetGroupSpec {
	if m != nil {
		return m.TargetGroupSpec
	}
	return nil
}

type TargetGroupSpec struct {
	// Name of the target group.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the target group.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Resource labels as `key:value` pairs.
	Labels               map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TargetGroupSpec) Reset()         { *m = TargetGroupSpec{} }
func (m *TargetGroupSpec) String() string { return proto.CompactTextString(m) }
func (*TargetGroupSpec) ProtoMessage()    {}
func (*TargetGroupSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{14}
}

func (m *TargetGroupSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetGroupSpec.Unmarshal(m, b)
}
func (m *TargetGroupSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetGroupSpec.Marshal(b, m, deterministic)
}
func (m *TargetGroupSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetGroupSpec.Merge(m, src)
}
func (m *TargetGroupSpec) XXX_Size() int {
	return xxx_messageInfo_TargetGroupSpec.Size(m)
}
func (m *TargetGroupSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetGroupSpec.DiscardUnknown(m)
}

var xxx_messageInfo_TargetGroupSpec proto.InternalMessageInfo

func (m *TargetGroupSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TargetGroupSpec) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TargetGroupSpec) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type HealthChecksSpec struct {
	// Health checking specification. For more information, see [Health check](/docs/load-balancer/concepts/health-check).
	HealthCheckSpecs     []*HealthCheckSpec `protobuf:"bytes,1,rep,name=health_check_specs,json=healthCheckSpecs,proto3" json:"health_check_specs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *HealthChecksSpec) Reset()         { *m = HealthChecksSpec{} }
func (m *HealthChecksSpec) String() string { return proto.CompactTextString(m) }
func (*HealthChecksSpec) ProtoMessage()    {}
func (*HealthChecksSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{15}
}

func (m *HealthChecksSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthChecksSpec.Unmarshal(m, b)
}
func (m *HealthChecksSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthChecksSpec.Marshal(b, m, deterministic)
}
func (m *HealthChecksSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthChecksSpec.Merge(m, src)
}
func (m *HealthChecksSpec) XXX_Size() int {
	return xxx_messageInfo_HealthChecksSpec.Size(m)
}
func (m *HealthChecksSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthChecksSpec.DiscardUnknown(m)
}

var xxx_messageInfo_HealthChecksSpec proto.InternalMessageInfo

func (m *HealthChecksSpec) GetHealthCheckSpecs() []*HealthCheckSpec {
	if m != nil {
		return m.HealthCheckSpecs
	}
	return nil
}

type HealthCheckSpec struct {
	// The interval between health checks. The default is 2 seconds.
	Interval *duration.Duration `protobuf:"bytes,1,opt,name=interval,proto3" json:"interval,omitempty"`
	// Timeout for the managed instance to return a response for the health check. The default is 1 second.
	Timeout *duration.Duration `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// The number of failed health checks for the managed instance to be considered unhealthy. The default (0) is 2.
	UnhealthyThreshold int64 `protobuf:"varint,3,opt,name=unhealthy_threshold,json=unhealthyThreshold,proto3" json:"unhealthy_threshold,omitempty"`
	// The number of successful health checks required in order for the managed instance to be considered healthy. The default (0) is 2.
	HealthyThreshold int64 `protobuf:"varint,4,opt,name=healthy_threshold,json=healthyThreshold,proto3" json:"healthy_threshold,omitempty"`
	// Types that are valid to be assigned to HealthCheckOptions:
	//	*HealthCheckSpec_TcpOptions_
	//	*HealthCheckSpec_HttpOptions_
	HealthCheckOptions   isHealthCheckSpec_HealthCheckOptions `protobuf_oneof:"health_check_options"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *HealthCheckSpec) Reset()         { *m = HealthCheckSpec{} }
func (m *HealthCheckSpec) String() string { return proto.CompactTextString(m) }
func (*HealthCheckSpec) ProtoMessage()    {}
func (*HealthCheckSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{16}
}

func (m *HealthCheckSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckSpec.Unmarshal(m, b)
}
func (m *HealthCheckSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckSpec.Marshal(b, m, deterministic)
}
func (m *HealthCheckSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckSpec.Merge(m, src)
}
func (m *HealthCheckSpec) XXX_Size() int {
	return xxx_messageInfo_HealthCheckSpec.Size(m)
}
func (m *HealthCheckSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckSpec.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckSpec proto.InternalMessageInfo

func (m *HealthCheckSpec) GetInterval() *duration.Duration {
	if m != nil {
		return m.Interval
	}
	return nil
}

func (m *HealthCheckSpec) GetTimeout() *duration.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

func (m *HealthCheckSpec) GetUnhealthyThreshold() int64 {
	if m != nil {
		return m.UnhealthyThreshold
	}
	return 0
}

func (m *HealthCheckSpec) GetHealthyThreshold() int64 {
	if m != nil {
		return m.HealthyThreshold
	}
	return 0
}

type isHealthCheckSpec_HealthCheckOptions interface {
	isHealthCheckSpec_HealthCheckOptions()
}

type HealthCheckSpec_TcpOptions_ struct {
	TcpOptions *HealthCheckSpec_TcpOptions `protobuf:"bytes,5,opt,name=tcp_options,json=tcpOptions,proto3,oneof"`
}

type HealthCheckSpec_HttpOptions_ struct {
	HttpOptions *HealthCheckSpec_HttpOptions `protobuf:"bytes,6,opt,name=http_options,json=httpOptions,proto3,oneof"`
}

func (*HealthCheckSpec_TcpOptions_) isHealthCheckSpec_HealthCheckOptions() {}

func (*HealthCheckSpec_HttpOptions_) isHealthCheckSpec_HealthCheckOptions() {}

func (m *HealthCheckSpec) GetHealthCheckOptions() isHealthCheckSpec_HealthCheckOptions {
	if m != nil {
		return m.HealthCheckOptions
	}
	return nil
}

func (m *HealthCheckSpec) GetTcpOptions() *HealthCheckSpec_TcpOptions {
	if x, ok := m.GetHealthCheckOptions().(*HealthCheckSpec_TcpOptions_); ok {
		return x.TcpOptions
	}
	return nil
}

func (m *HealthCheckSpec) GetHttpOptions() *HealthCheckSpec_HttpOptions {
	if x, ok := m.GetHealthCheckOptions().(*HealthCheckSpec_HttpOptions_); ok {
		return x.HttpOptions
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*HealthCheckSpec) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*HealthCheckSpec_TcpOptions_)(nil),
		(*HealthCheckSpec_HttpOptions_)(nil),
	}
}

type HealthCheckSpec_TcpOptions struct {
	// Port to use for TCP health checks.
	Port                 int64    `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthCheckSpec_TcpOptions) Reset()         { *m = HealthCheckSpec_TcpOptions{} }
func (m *HealthCheckSpec_TcpOptions) String() string { return proto.CompactTextString(m) }
func (*HealthCheckSpec_TcpOptions) ProtoMessage()    {}
func (*HealthCheckSpec_TcpOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{16, 0}
}

func (m *HealthCheckSpec_TcpOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckSpec_TcpOptions.Unmarshal(m, b)
}
func (m *HealthCheckSpec_TcpOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckSpec_TcpOptions.Marshal(b, m, deterministic)
}
func (m *HealthCheckSpec_TcpOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckSpec_TcpOptions.Merge(m, src)
}
func (m *HealthCheckSpec_TcpOptions) XXX_Size() int {
	return xxx_messageInfo_HealthCheckSpec_TcpOptions.Size(m)
}
func (m *HealthCheckSpec_TcpOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckSpec_TcpOptions.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckSpec_TcpOptions proto.InternalMessageInfo

func (m *HealthCheckSpec_TcpOptions) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

type HealthCheckSpec_HttpOptions struct {
	// Port to use for HTTP health checks.
	Port int64 `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	// URL path to set for health checking requests.
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthCheckSpec_HttpOptions) Reset()         { *m = HealthCheckSpec_HttpOptions{} }
func (m *HealthCheckSpec_HttpOptions) String() string { return proto.CompactTextString(m) }
func (*HealthCheckSpec_HttpOptions) ProtoMessage()    {}
func (*HealthCheckSpec_HttpOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{16, 1}
}

func (m *HealthCheckSpec_HttpOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckSpec_HttpOptions.Unmarshal(m, b)
}
func (m *HealthCheckSpec_HttpOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckSpec_HttpOptions.Marshal(b, m, deterministic)
}
func (m *HealthCheckSpec_HttpOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckSpec_HttpOptions.Merge(m, src)
}
func (m *HealthCheckSpec_HttpOptions) XXX_Size() int {
	return xxx_messageInfo_HealthCheckSpec_HttpOptions.Size(m)
}
func (m *HealthCheckSpec_HttpOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckSpec_HttpOptions.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckSpec_HttpOptions proto.InternalMessageInfo

func (m *HealthCheckSpec_HttpOptions) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *HealthCheckSpec_HttpOptions) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

// A ManagedInstance resource. For more information, see [Instance Groups Concepts](/docs/compute/concepts/instance-groups/).
type ManagedInstance struct {
	// ID of the managed instance.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Status of the managed instance.
	Status ManagedInstance_Status `protobuf:"varint,2,opt,name=status,proto3,enum=yandex.cloud.compute.v1.instancegroup.ManagedInstance_Status" json:"status,omitempty"`
	// ID of the instance.
	InstanceId string `protobuf:"bytes,3,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// Fully Qualified Domain Name.
	Fqdn string `protobuf:"bytes,4,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	// The name of the managed instance.
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// Status message for the managed instance.
	StatusMessage string `protobuf:"bytes,6,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
	// ID of the availability zone where the instance resides.
	ZoneId string `protobuf:"bytes,7,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// Array of network interfaces that are attached to the managed instance.
	NetworkInterfaces []*NetworkInterface `protobuf:"bytes,8,rep,name=network_interfaces,json=networkInterfaces,proto3" json:"network_interfaces,omitempty"`
	// The timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format when the status of the managed instance was last changed.
	StatusChangedAt      *timestamp.Timestamp `protobuf:"bytes,9,opt,name=status_changed_at,json=statusChangedAt,proto3" json:"status_changed_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ManagedInstance) Reset()         { *m = ManagedInstance{} }
func (m *ManagedInstance) String() string { return proto.CompactTextString(m) }
func (*ManagedInstance) ProtoMessage()    {}
func (*ManagedInstance) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{17}
}

func (m *ManagedInstance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ManagedInstance.Unmarshal(m, b)
}
func (m *ManagedInstance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ManagedInstance.Marshal(b, m, deterministic)
}
func (m *ManagedInstance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedInstance.Merge(m, src)
}
func (m *ManagedInstance) XXX_Size() int {
	return xxx_messageInfo_ManagedInstance.Size(m)
}
func (m *ManagedInstance) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedInstance.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedInstance proto.InternalMessageInfo

func (m *ManagedInstance) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ManagedInstance) GetStatus() ManagedInstance_Status {
	if m != nil {
		return m.Status
	}
	return ManagedInstance_STATUS_UNSPECIFIED
}

func (m *ManagedInstance) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *ManagedInstance) GetFqdn() string {
	if m != nil {
		return m.Fqdn
	}
	return ""
}

func (m *ManagedInstance) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ManagedInstance) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

func (m *ManagedInstance) GetZoneId() string {
	if m != nil {
		return m.ZoneId
	}
	return ""
}

func (m *ManagedInstance) GetNetworkInterfaces() []*NetworkInterface {
	if m != nil {
		return m.NetworkInterfaces
	}
	return nil
}

func (m *ManagedInstance) GetStatusChangedAt() *timestamp.Timestamp {
	if m != nil {
		return m.StatusChangedAt
	}
	return nil
}

type NetworkInterface struct {
	// The index of the network interface, generated by the server, 0,1,2... etc.
	// Currently only one network interface is supported per instance.
	Index string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	// MAC address that is assigned to the network interface.
	MacAddress string `protobuf:"bytes,2,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	// ID of the subnet.
	SubnetId string `protobuf:"bytes,3,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	// Primary IPv4 address that is assigned to the instance for this network interface.
	PrimaryV4Address *PrimaryAddress `protobuf:"bytes,4,opt,name=primary_v4_address,json=primaryV4Address,proto3" json:"primary_v4_address,omitempty"`
	// Primary IPv6 address that is assigned to the instance for this network interface. IPv6 is not available yet.
	PrimaryV6Address     *PrimaryAddress `protobuf:"bytes,5,opt,name=primary_v6_address,json=primaryV6Address,proto3" json:"primary_v6_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *NetworkInterface) Reset()         { *m = NetworkInterface{} }
func (m *NetworkInterface) String() string { return proto.CompactTextString(m) }
func (*NetworkInterface) ProtoMessage()    {}
func (*NetworkInterface) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{18}
}

func (m *NetworkInterface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkInterface.Unmarshal(m, b)
}
func (m *NetworkInterface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkInterface.Marshal(b, m, deterministic)
}
func (m *NetworkInterface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInterface.Merge(m, src)
}
func (m *NetworkInterface) XXX_Size() int {
	return xxx_messageInfo_NetworkInterface.Size(m)
}
func (m *NetworkInterface) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInterface.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInterface proto.InternalMessageInfo

func (m *NetworkInterface) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *NetworkInterface) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *NetworkInterface) GetSubnetId() string {
	if m != nil {
		return m.SubnetId
	}
	return ""
}

func (m *NetworkInterface) GetPrimaryV4Address() *PrimaryAddress {
	if m != nil {
		return m.PrimaryV4Address
	}
	return nil
}

func (m *NetworkInterface) GetPrimaryV6Address() *PrimaryAddress {
	if m != nil {
		return m.PrimaryV6Address
	}
	return nil
}

type PrimaryAddress struct {
	// An IPv4 internal network address that is assigned to the managed instance for this network interface.
	// If not specified by the user, an unused internal IP is assigned by the system.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// One-to-one NAT configuration. If missing, NAT has not been set up.
	OneToOneNat          *OneToOneNat `protobuf:"bytes,2,opt,name=one_to_one_nat,json=oneToOneNat,proto3" json:"one_to_one_nat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PrimaryAddress) Reset()         { *m = PrimaryAddress{} }
func (m *PrimaryAddress) String() string { return proto.CompactTextString(m) }
func (*PrimaryAddress) ProtoMessage()    {}
func (*PrimaryAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{19}
}

func (m *PrimaryAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimaryAddress.Unmarshal(m, b)
}
func (m *PrimaryAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimaryAddress.Marshal(b, m, deterministic)
}
func (m *PrimaryAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimaryAddress.Merge(m, src)
}
func (m *PrimaryAddress) XXX_Size() int {
	return xxx_messageInfo_PrimaryAddress.Size(m)
}
func (m *PrimaryAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimaryAddress.DiscardUnknown(m)
}

var xxx_messageInfo_PrimaryAddress proto.InternalMessageInfo

func (m *PrimaryAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *PrimaryAddress) GetOneToOneNat() *OneToOneNat {
	if m != nil {
		return m.OneToOneNat
	}
	return nil
}

type OneToOneNat struct {
	// An IPv4 external network address that is assigned to the managed instance for this network interface.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// External IP address version.
	IpVersion            IpVersion `protobuf:"varint,2,opt,name=ip_version,json=ipVersion,proto3,enum=yandex.cloud.compute.v1.instancegroup.IpVersion" json:"ip_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *OneToOneNat) Reset()         { *m = OneToOneNat{} }
func (m *OneToOneNat) String() string { return proto.CompactTextString(m) }
func (*OneToOneNat) ProtoMessage()    {}
func (*OneToOneNat) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{20}
}

func (m *OneToOneNat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OneToOneNat.Unmarshal(m, b)
}
func (m *OneToOneNat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OneToOneNat.Marshal(b, m, deterministic)
}
func (m *OneToOneNat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneToOneNat.Merge(m, src)
}
func (m *OneToOneNat) XXX_Size() int {
	return xxx_messageInfo_OneToOneNat.Size(m)
}
func (m *OneToOneNat) XXX_DiscardUnknown() {
	xxx_messageInfo_OneToOneNat.DiscardUnknown(m)
}

var xxx_messageInfo_OneToOneNat proto.InternalMessageInfo

func (m *OneToOneNat) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *OneToOneNat) GetIpVersion() IpVersion {
	if m != nil {
		return m.IpVersion
	}
	return IpVersion_IP_VERSION_UNSPECIFIED
}

type LogRecord struct {
	// Log timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
	Timestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The log message.
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogRecord) Reset()         { *m = LogRecord{} }
func (m *LogRecord) String() string { return proto.CompactTextString(m) }
func (*LogRecord) ProtoMessage()    {}
func (*LogRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_993454707bf70b9b, []int{21}
}

func (m *LogRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogRecord.Unmarshal(m, b)
}
func (m *LogRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogRecord.Marshal(b, m, deterministic)
}
func (m *LogRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogRecord.Merge(m, src)
}
func (m *LogRecord) XXX_Size() int {
	return xxx_messageInfo_LogRecord.Size(m)
}
func (m *LogRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_LogRecord.DiscardUnknown(m)
}

var xxx_messageInfo_LogRecord proto.InternalMessageInfo

func (m *LogRecord) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *LogRecord) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterEnum("yandex.cloud.compute.v1.instancegroup.IpVersion", IpVersion_name, IpVersion_value)
	proto.RegisterEnum("yandex.cloud.compute.v1.instancegroup.InstanceGroup_Status", InstanceGroup_Status_name, InstanceGroup_Status_value)
	proto.RegisterEnum("yandex.cloud.compute.v1.instancegroup.ScalePolicy_CustomRule_RuleType", ScalePolicy_CustomRule_RuleType_name, ScalePolicy_CustomRule_RuleType_value)
	proto.RegisterEnum("yandex.cloud.compute.v1.instancegroup.ScalePolicy_CustomRule_MetricType", ScalePolicy_CustomRule_MetricType_name, ScalePolicy_CustomRule_MetricType_value)
	proto.RegisterEnum("yandex.cloud.compute.v1.instancegroup.AttachedDiskSpec_Mode", AttachedDiskSpec_Mode_name, AttachedDiskSpec_Mode_value)
	proto.RegisterEnum("yandex.cloud.compute.v1.instancegroup.ManagedInstance_Status", ManagedInstance_Status_name, ManagedInstance_Status_value)
	proto.RegisterType((*InstanceGroup)(nil), "yandex.cloud.compute.v1.instancegroup.InstanceGroup")
	proto.RegisterMapType((map[string]string)(nil), "yandex.cloud.compute.v1.instancegroup.InstanceGroup.LabelsEntry")
	proto.RegisterType((*LoadBalancerState)(nil), "yandex.cloud.compute.v1.instancegroup.LoadBalancerState")
	proto.RegisterType((*ManagedInstancesState)(nil), "yandex.cloud.compute.v1.instancegroup.ManagedInstancesState")
	proto.RegisterType((*ManagedInstancesState_Statuses)(nil), "yandex.cloud.compute.v1.instancegroup.ManagedInstancesState.Statuses")
	proto.RegisterType((*ScalePolicy)(nil), "yandex.cloud.compute.v1.instancegroup.ScalePolicy")
	proto.RegisterType((*ScalePolicy_AutoScale)(nil), "yandex.cloud.compute.v1.instancegroup.ScalePolicy.AutoScale")
	proto.RegisterType((*ScalePolicy_CpuUtilizationRule)(nil), "yandex.cloud.compute.v1.instancegroup.ScalePolicy.CpuUtilizationRule")
	proto.RegisterType((*ScalePolicy_CustomRule)(nil), "yandex.cloud.compute.v1.instancegroup.ScalePolicy.CustomRule")
	proto.RegisterType((*ScalePolicy_FixedScale)(nil), "yandex.cloud.compute.v1.instancegroup.ScalePolicy.FixedScale")
	proto.RegisterType((*DeployPolicy)(nil), "yandex.cloud.compute.v1.instancegroup.DeployPolicy")
	proto.RegisterType((*AllocationPolicy)(nil), "yandex.cloud.compute.v1.instancegroup.AllocationPolicy")
	proto.RegisterType((*AllocationPolicy_Zone)(nil), "yandex.cloud.compute.v1.instancegroup.AllocationPolicy.Zone")
	proto.RegisterType((*InstanceTemplate)(nil), "yandex.cloud.compute.v1.instancegroup.InstanceTemplate")
	proto.RegisterMapType((map[string]string)(nil), "yandex.cloud.compute.v1.instancegroup.InstanceTemplate.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "yandex.cloud.compute.v1.instancegroup.InstanceTemplate.MetadataEntry")
	proto.RegisterType((*ResourcesSpec)(nil), "yandex.cloud.compute.v1.instancegroup.ResourcesSpec")
	proto.RegisterType((*AttachedDiskSpec)(nil), "yandex.cloud.compute.v1.instancegroup.AttachedDiskSpec")
	proto.RegisterType((*AttachedDiskSpec_DiskSpec)(nil), "yandex.cloud.compute.v1.instancegroup.AttachedDiskSpec.DiskSpec")
	proto.RegisterType((*NetworkInterfaceSpec)(nil), "yandex.cloud.compute.v1.instancegroup.NetworkInterfaceSpec")
	proto.RegisterType((*PrimaryAddressSpec)(nil), "yandex.cloud.compute.v1.instancegroup.PrimaryAddressSpec")
	proto.RegisterType((*OneToOneNatSpec)(nil), "yandex.cloud.compute.v1.instancegroup.OneToOneNatSpec")
	proto.RegisterType((*SchedulingPolicy)(nil), "yandex.cloud.compute.v1.instancegroup.SchedulingPolicy")
	proto.RegisterType((*LoadBalancerSpec)(nil), "yandex.cloud.compute.v1.instancegroup.LoadBalancerSpec")
	proto.RegisterType((*TargetGroupSpec)(nil), "yandex.cloud.compute.v1.instancegroup.TargetGroupSpec")
	proto.RegisterMapType((map[string]string)(nil), "yandex.cloud.compute.v1.instancegroup.TargetGroupSpec.LabelsEntry")
	proto.RegisterType((*HealthChecksSpec)(nil), "yandex.cloud.compute.v1.instancegroup.HealthChecksSpec")
	proto.RegisterType((*HealthCheckSpec)(nil), "yandex.cloud.compute.v1.instancegroup.HealthCheckSpec")
	proto.RegisterType((*HealthCheckSpec_TcpOptions)(nil), "yandex.cloud.compute.v1.instancegroup.HealthCheckSpec.TcpOptions")
	proto.RegisterType((*HealthCheckSpec_HttpOptions)(nil), "yandex.cloud.compute.v1.instancegroup.HealthCheckSpec.HttpOptions")
	proto.RegisterType((*ManagedInstance)(nil), "yandex.cloud.compute.v1.instancegroup.ManagedInstance")
	proto.RegisterType((*NetworkInterface)(nil), "yandex.cloud.compute.v1.instancegroup.NetworkInterface")
	proto.RegisterType((*PrimaryAddress)(nil), "yandex.cloud.compute.v1.instancegroup.PrimaryAddress")
	proto.RegisterType((*OneToOneNat)(nil), "yandex.cloud.compute.v1.instancegroup.OneToOneNat")
	proto.RegisterType((*LogRecord)(nil), "yandex.cloud.compute.v1.instancegroup.LogRecord")
}

func init() {
	proto.RegisterFile("yandex/cloud/compute/v1/instancegroup/instance_group.proto", fileDescriptor_993454707bf70b9b)
}

var fileDescriptor_993454707bf70b9b = []byte{
	// 3377 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x5a, 0xcd, 0x6f, 0x1b, 0x67,
	0x7a, 0x0f, 0x29, 0x8a, 0x22, 0x1f, 0x4a, 0xd4, 0xe8, 0xb5, 0x6c, 0x33, 0xcc, 0x7a, 0xe3, 0x12,
	0x4d, 0xe1, 0x64, 0x87, 0x14, 0x87, 0xa2, 0x28, 0x29, 0x96, 0xb3, 0x21, 0x29, 0xda, 0x22, 0x56,
	0x12, 0x85, 0x11, 0x69, 0xef, 0xc6, 0x31, 0xa6, 0xa3, 0x99, 0x57, 0xd4, 0xc0, 0x9c, 0x8f, 0xce,
	0x0c, 0x15, 0xcb, 0xdb, 0x1c, 0x9a, 0x16, 0x68, 0x91, 0x3f, 0x60, 0x51, 0xa0, 0x05, 0xfa, 0x2f,
	0x14, 0x05, 0x0a, 0xf4, 0xd8, 0x9e, 0xe4, 0x53, 0x7b, 0x28, 0x7a, 0xed, 0xa9, 0x87, 0xf6, 0xd2,
	0x43, 0x4e, 0x85, 0x7a, 0x29, 0xde, 0x8f, 0x19, 0x92, 0x23, 0x6d, 0x24, 0xd1, 0xdd, 0x8b, 0xcd,
	0xe7, 0xeb, 0xf7, 0xbc, 0x5f, 0xf3, 0x7c, 0xbc, 0xaf, 0xe0, 0xf3, 0x33, 0xd5, 0xd2, 0xf1, 0x9b,
	0x15, 0x6d, 0x60, 0x0f, 0xf5, 0x15, 0xcd, 0x36, 0x9d, 0xa1, 0x8f, 0x57, 0x4e, 0xa5, 0x15, 0xc3,
	0xf2, 0x7c, 0xd5, 0xd2, 0x70, 0xdf, 0xb5, 0x87, 0x4e, 0x48, 0x29, 0x94, 0x2c, 0x39, 0xae, 0xed,
	0xdb, 0xe8, 0x13, 0x66, 0x5b, 0xa2, 0xb6, 0x25, 0x6e, 0x5b, 0x3a, 0x95, 0x4a, 0x13, 0xb6, 0xf9,
	0x07, 0x13, 0x2e, 0x4e, 0xd5, 0x81, 0xa1, 0xab, 0xbe, 0x61, 0x5b, 0x0c, 0x25, 0xff, 0x71, 0xdf,
	0xb6, 0xfb, 0x03, 0xbc, 0x42, 0xa9, 0xa3, 0xe1, 0xf1, 0x8a, 0x6f, 0x98, 0xd8, 0xf3, 0x55, 0x93,
	0xbb, 0xc9, 0xff, 0x34, 0xaa, 0xa0, 0x0f, 0xdd, 0x31, 0x80, 0xc2, 0xbf, 0x01, 0x2c, 0xb4, 0xb9,
	0xc7, 0x67, 0xc4, 0x23, 0xca, 0x42, 0xdc, 0xd0, 0x73, 0xb1, 0x87, 0xb1, 0x47, 0x69, 0x39, 0x6e,
	0xe8, 0xe8, 0x23, 0x48, 0x1f, 0xdb, 0x03, 0x1d, 0xbb, 0x8a, 0xa1, 0xe7, 0xe2, 0x94, 0x9d, 0x62,
	0x8c, 0xb6, 0x8e, 0x36, 0x01, 0x34, 0x17, 0xab, 0x3e, 0xd6, 0x15, 0xd5, 0xcf, 0xcd, 0x3c, 0x8c,
	0x3d, 0xca, 0x54, 0xf2, 0x25, 0xe6, 0xb3, 0x14, 0xf8, 0x2c, 0x75, 0x83, 0x41, 0xc9, 0x69, 0xae,
	0x5d, 0xf7, 0x11, 0x82, 0x84, 0xa5, 0x9a, 0x38, 0x97, 0xa0, 0x90, 0xf4, 0x37, 0x7a, 0x08, 0x19,
	0x1d, 0x7b, 0x9a, 0x6b, 0x38, 0x64, 0x88, 0xb9, 0x59, 0x2a, 0x1a, 0x67, 0xa1, 0x5f, 0x42, 0x72,
	0xa0, 0x1e, 0xe1, 0x81, 0x97, 0x4b, 0x3e, 0x9c, 0x79, 0x94, 0xa9, 0x7c, 0x59, 0xba, 0xd1, 0x3a,
	0x96, 0x26, 0xe6, 0x58, 0xda, 0xa5, 0x10, 0x2d, 0xcb, 0x77, 0xcf, 0x64, 0x8e, 0x87, 0x74, 0x58,
	0x0a, 0x37, 0xca, 0xc7, 0xa6, 0x33, 0x50, 0x7d, 0x9c, 0x9b, 0xa3, 0x33, 0x5a, 0xbf, 0xa5, 0x93,
	0x2e, 0x37, 0x97, 0x05, 0x23, 0xc2, 0x41, 0x3d, 0x98, 0xf7, 0x34, 0x75, 0x80, 0x15, 0xc7, 0x1e,
	0x18, 0xda, 0x59, 0x2e, 0x45, 0x1d, 0x54, 0x6e, 0xe8, 0xe0, 0x90, 0x98, 0x1e, 0x50, 0x4b, 0x39,
	0xe3, 0x8d, 0x08, 0xf4, 0x4b, 0x58, 0xd0, 0xb1, 0x33, 0xb0, 0xcf, 0x02, 0xdc, 0x34, 0xc5, 0x5d,
	0xbd, 0x21, 0xee, 0x36, 0xb5, 0xe5, 0xc0, 0xf3, 0xfa, 0x18, 0x45, 0x96, 0x45, 0x1d, 0x0c, 0x6c,
	0x8d, 0x1e, 0x9a, 0x00, 0x1d, 0x6e, 0xb5, 0x2c, 0xf5, 0xd0, 0x9e, 0x7b, 0x10, 0xd4, 0x08, 0x07,
	0x9d, 0xc0, 0x9d, 0x81, 0xad, 0xea, 0xca, 0x91, 0x3a, 0x20, 0x76, 0xae, 0xe2, 0xf9, 0x64, 0xf9,
	0x33, 0xd4, 0xcf, 0xc6, 0x0d, 0xfd, 0xec, 0xda, 0xaa, 0xde, 0xe0, 0x00, 0x87, 0xc4, 0x5e, 0x5e,
	0x1a, 0x44, 0x59, 0xc8, 0x87, 0xfb, 0xa6, 0x6a, 0xa9, 0x7d, 0xac, 0x2b, 0x81, 0xb5, 0xc7, 0xbd,
	0xcd, 0x53, 0x6f, 0x5b, 0x37, 0xf4, 0xb6, 0xc7, 0x50, 0x82, 0x3d, 0xf7, 0x98, 0xc7, 0xbb, 0xe6,
	0x55, 0x6c, 0x84, 0x01, 0x45, 0xe6, 0xe7, 0x60, 0x2d, 0x97, 0xbd, 0xd5, 0x32, 0x4e, 0x4c, 0xcf,
	0xc1, 0x9a, 0x2c, 0x0c, 0x22, 0x1c, 0xe2, 0xe6, 0x04, 0xab, 0x03, 0xff, 0x44, 0xd1, 0x4e, 0xb0,
	0xf6, 0xda, 0x63, 0x6e, 0x16, 0x6f, 0xe5, 0x66, 0x87, 0x02, 0x34, 0xa9, 0x3d, 0x73, 0x73, 0x12,
	0xe1, 0x20, 0x11, 0x90, 0x87, 0xdd, 0x53, 0x43, 0xc3, 0x8a, 0xaa, 0x69, 0xf6, 0xd0, 0xf2, 0x49,
	0x6c, 0x10, 0xe8, 0xd7, 0x2a, 0x70, 0x49, 0x9d, 0x09, 0xda, 0x3a, 0x3a, 0x84, 0x24, 0x59, 0xdf,
	0xa1, 0x97, 0x5b, 0x7a, 0x18, 0x7b, 0x94, 0xad, 0x3c, 0x9e, 0xea, 0x93, 0x3d, 0xa4, 0x10, 0x32,
	0x87, 0xca, 0x6f, 0x42, 0x66, 0xec, 0x23, 0x46, 0x02, 0xcc, 0xbc, 0xc6, 0x67, 0x3c, 0x6a, 0x91,
	0x9f, 0x68, 0x19, 0x66, 0x4f, 0xd5, 0xc1, 0x10, 0xf3, 0x90, 0xc5, 0x88, 0xcf, 0xe3, 0x1b, 0xb1,
	0x82, 0x06, 0x49, 0x06, 0x86, 0xee, 0x01, 0x3a, 0xec, 0xd6, 0xbb, 0xbd, 0x43, 0xa5, 0xb7, 0x7f,
	0x78, 0xd0, 0x6a, 0xb6, 0x9f, 0xb6, 0x5b, 0xdb, 0xc2, 0x07, 0x68, 0x1e, 0x52, 0x87, 0xdd, 0xba,
	0xdc, 0x6d, 0xef, 0x3f, 0x13, 0x62, 0x08, 0x20, 0x59, 0x6f, 0x76, 0xdb, 0xcf, 0x5b, 0x42, 0x9c,
	0x49, 0x3a, 0x07, 0x07, 0x44, 0x32, 0x83, 0x32, 0x30, 0x47, 0xa9, 0xd6, 0xb6, 0x90, 0x20, 0xa2,
	0xed, 0xd6, 0x6e, 0x8b, 0x1a, 0xcd, 0x16, 0x8e, 0x60, 0xe9, 0xd2, 0x71, 0x44, 0x7f, 0x00, 0x8b,
	0xbe, 0xea, 0xf6, 0xb1, 0xcf, 0x32, 0x81, 0x12, 0xc6, 0xd9, 0x05, 0xc6, 0xa6, 0x33, 0x6d, 0xeb,
	0xe8, 0x13, 0xc8, 0xb2, 0x69, 0x2a, 0x26, 0xf6, 0x3c, 0xb5, 0x1f, 0x4c, 0x62, 0x81, 0x71, 0xf7,
	0x18, 0xb3, 0xf0, 0x1f, 0x33, 0x70, 0xf7, 0xca, 0x53, 0x88, 0x3e, 0x86, 0x0c, 0x77, 0xe4, 0x19,
	0x6f, 0x31, 0x75, 0x32, 0x23, 0x03, 0x63, 0x1d, 0x1a, 0x6f, 0x31, 0x2a, 0xc3, 0xb2, 0x3b, 0xb4,
	0x2c, 0xc3, 0xea, 0x2b, 0xaa, 0xe6, 0x0f, 0xd5, 0x81, 0x42, 0x77, 0x8b, 0x06, 0xe3, 0x19, 0x19,
	0x71, 0x59, 0x9d, 0x8a, 0x9a, 0x44, 0x82, 0xaa, 0x70, 0x2f, 0xb0, 0xb0, 0x87, 0xbe, 0x4e, 0x43,
	0x3e, 0xb3, 0x99, 0xa5, 0x36, 0x01, 0x5e, 0x87, 0x0b, 0x99, 0xd5, 0xa7, 0x20, 0x38, 0xae, 0xad,
	0x61, 0xcf, 0x23, 0x86, 0x4c, 0x3f, 0x49, 0xf5, 0x17, 0x47, 0x7c, 0xaa, 0x9a, 0xff, 0x4d, 0x1c,
	0x52, 0x6c, 0x5f, 0xb0, 0x87, 0xf2, 0x90, 0xa2, 0x99, 0xc2, 0xb0, 0xfa, 0x7c, 0xf4, 0x21, 0x4d,
	0x64, 0x9e, 0xaf, 0xba, 0x54, 0x16, 0x67, 0xb2, 0x80, 0x46, 0x39, 0x98, 0xb3, 0x1d, 0x4c, 0xc6,
	0x41, 0x93, 0xd1, 0x8c, 0x1c, 0x90, 0x44, 0xf2, 0x8d, 0xea, 0x9a, 0x44, 0xc2, 0x26, 0x19, 0x90,
	0x44, 0xc2, 0xc7, 0xce, 0xa7, 0x12, 0x90, 0x44, 0xa2, 0x0d, 0x6c, 0x32, 0x44, 0x3e, 0xe8, 0x80,
	0x64, 0x63, 0xb0, 0x1d, 0x87, 0x88, 0xe6, 0x82, 0x31, 0x30, 0x9a, 0xc8, 0x86, 0x8e, 0xce, 0xc6,
	0x9e, 0x62, 0xb2, 0x80, 0x26, 0x32, 0x1d, 0x0f, 0x30, 0x95, 0xa5, 0x99, 0x2c, 0xa0, 0xd1, 0x3d,
	0x48, 0x1e, 0xab, 0xc6, 0x00, 0xeb, 0x34, 0xbc, 0xce, 0xc8, 0x9c, 0x2a, 0xfc, 0x4b, 0x06, 0x32,
	0x63, 0x81, 0x1f, 0xfd, 0x21, 0x64, 0x8e, 0x8d, 0x37, 0x58, 0x57, 0x68, 0x02, 0xa0, 0xcb, 0x93,
	0xa9, 0x3c, 0xb9, 0x7d, 0x06, 0x29, 0x3d, 0x25, 0x28, 0x94, 0xb1, 0xf3, 0x81, 0x0c, 0xc7, 0x21,
	0x85, 0x5e, 0x01, 0xa8, 0x43, 0xdf, 0xe6, 0x0e, 0xe2, 0xb7, 0x0a, 0x8b, 0xe3, 0x0e, 0xea, 0x43,
	0xdf, 0x0e, 0xf0, 0xd3, 0x6a, 0x40, 0xe4, 0xff, 0x37, 0x01, 0xe9, 0x50, 0x84, 0x8a, 0xb0, 0x60,
	0x1a, 0x96, 0xf2, 0xd6, 0xb6, 0xf0, 0xd8, 0x69, 0x6d, 0xa4, 0x2f, 0xce, 0xa5, 0xd9, 0x72, 0x51,
	0x2a, 0x97, 0xe5, 0x8c, 0x69, 0x58, 0x5f, 0xd9, 0x16, 0xa6, 0x27, 0xf7, 0xf7, 0x21, 0x65, 0xaa,
	0x6f, 0x98, 0x66, 0x3c, 0xaa, 0x39, 0x67, 0xaa, 0x6f, 0xa8, 0xd6, 0xd7, 0xb0, 0x6c, 0x62, 0xd5,
	0x1b, 0xba, 0xd8, 0xc4, 0x96, 0xaf, 0x04, 0x45, 0x0f, 0xaf, 0x50, 0x3e, 0xbc, 0x54, 0xa1, 0x6c,
	0x73, 0x85, 0x46, 0xf6, 0x3f, 0xcf, 0xa5, 0xd8, 0xc5, 0xb9, 0x94, 0x94, 0xcc, 0xa2, 0x54, 0x36,
	0xe5, 0x3b, 0x63, 0x30, 0x81, 0x12, 0xda, 0x83, 0x45, 0x72, 0x78, 0x86, 0xce, 0x08, 0x38, 0x71,
	0x1d, 0x30, 0x1d, 0xe5, 0xd6, 0x13, 0x82, 0x99, 0x65, 0xc6, 0x21, 0xdc, 0xd7, 0x70, 0xcf, 0xf3,
	0xd5, 0x23, 0x63, 0x60, 0xbc, 0x65, 0x59, 0x36, 0x44, 0x9d, 0xbd, 0x0e, 0x15, 0xf8, 0x50, 0x57,
	0xcb, 0xa6, 0x7c, 0x77, 0x02, 0x24, 0x44, 0xff, 0x0c, 0xe6, 0x0d, 0xcb, 0xf0, 0x0d, 0x75, 0xc0,
	0x16, 0x8d, 0x9e, 0xe4, 0xc6, 0xdc, 0xc5, 0xb9, 0x34, 0xf3, 0xc5, 0x13, 0x49, 0xce, 0x70, 0x21,
	0x5d, 0xb6, 0x6f, 0x60, 0x59, 0x73, 0x86, 0xca, 0xd0, 0x1f, 0x8d, 0xc5, 0x1d, 0x0e, 0x82, 0x32,
	0xa8, 0x35, 0xc5, 0x11, 0x68, 0x3a, 0xc3, 0xde, 0x08, 0x4d, 0x1e, 0x0e, 0xb0, 0x8c, 0xb4, 0x4b,
	0x3c, 0x64, 0xc0, 0xbc, 0x36, 0xf4, 0x7c, 0xdb, 0xa4, 0xfe, 0xbc, 0x5c, 0x8a, 0x16, 0x77, 0xd3,
	0x1c, 0xea, 0x26, 0x85, 0x21, 0xa0, 0x8d, 0xb9, 0xef, 0xde, 0x49, 0x33, 0x5b, 0x64, 0x8e, 0x5a,
	0xc8, 0xf4, 0xf2, 0x1d, 0x40, 0x97, 0x07, 0x85, 0x36, 0x01, 0x8d, 0xcf, 0x9a, 0x85, 0x4a, 0x7a,
	0x14, 0x63, 0x7c, 0x91, 0xd9, 0x09, 0x5b, 0x1a, 0xd3, 0xea, 0x52, 0xa5, 0xfc, 0x7f, 0xcf, 0x00,
	0x8c, 0xbc, 0x22, 0x03, 0xd2, 0x64, 0x0e, 0x8a, 0x7f, 0xe6, 0xb0, 0xb3, 0x9c, 0xad, 0x3c, 0x7d,
	0xaf, 0x79, 0x94, 0xc8, 0x3f, 0xdd, 0x33, 0x07, 0x37, 0x12, 0xe4, 0x70, 0xca, 0x29, 0x97, 0xd3,
	0xc8, 0x86, 0x8c, 0x89, 0x7d, 0xd7, 0xd0, 0x98, 0xb3, 0x38, 0x75, 0xb6, 0xf3, 0x7e, 0xce, 0xf6,
	0x28, 0xe0, 0x98, 0x3b, 0x30, 0x43, 0x0e, 0x7a, 0x19, 0x3a, 0xa4, 0xa5, 0x3b, 0xf9, 0x9a, 0xd2,
	0x8d, 0xcf, 0x89, 0xda, 0x0f, 0xe7, 0x52, 0xe5, 0xa5, 0x5a, 0x7c, 0x5b, 0x2f, 0x7e, 0x55, 0x2e,
	0x6e, 0x96, 0x56, 0xbe, 0x54, 0x5e, 0xbd, 0x7c, 0x58, 0x2e, 0x6e, 0x32, 0x16, 0xa1, 0xc5, 0xcf,
	0x1f, 0x3f, 0xfa, 0xf4, 0xeb, 0x97, 0x5f, 0xbf, 0xda, 0xfa, 0xa2, 0xf8, 0xea, 0xd7, 0x65, 0x51,
	0xda, 0xdc, 0xf8, 0x36, 0x00, 0xdf, 0x27, 0xc5, 0xff, 0x4f, 0x21, 0xc9, 0x97, 0x3d, 0x41, 0x97,
	0x3d, 0x79, 0x71, 0x2e, 0xc5, 0xbf, 0x28, 0xcb, 0x9c, 0x5b, 0xd8, 0x86, 0x54, 0xb0, 0x12, 0xe8,
	0x43, 0xb8, 0x2b, 0xf7, 0x76, 0x5b, 0x4a, 0xf7, 0x57, 0x07, 0xad, 0x48, 0xf2, 0x5e, 0x84, 0x4c,
	0xaf, 0xdb, 0xde, 0x6d, 0x7f, 0x55, 0xef, 0xb6, 0x3b, 0xfb, 0x42, 0x8c, 0x24, 0xe6, 0x17, 0x1d,
	0xf9, 0x17, 0xbb, 0x9d, 0xfa, 0xb6, 0x10, 0x2f, 0xd4, 0x01, 0x46, 0x53, 0x44, 0x1f, 0xc1, 0xfd,
	0xbd, 0x56, 0x57, 0x6e, 0x37, 0xaf, 0x42, 0x4a, 0xc3, 0xec, 0xb3, 0x7a, 0xef, 0x59, 0x4b, 0x88,
	0x91, 0x4c, 0xdf, 0xec, 0xf4, 0xf6, 0xbb, 0x2d, 0x59, 0x88, 0xe7, 0x7f, 0x06, 0x30, 0x0a, 0x9d,
	0xe8, 0x01, 0x24, 0xa2, 0x61, 0x4b, 0xa2, 0x47, 0x85, 0xb2, 0x1b, 0x08, 0x80, 0x15, 0xfc, 0x64,
	0x8b, 0x50, 0xe2, 0x1f, 0xff, 0x49, 0x8a, 0x15, 0xfe, 0x26, 0x0e, 0xf3, 0xe3, 0x25, 0x37, 0xaa,
	0xc0, 0x22, 0x09, 0x6a, 0x43, 0x4b, 0x3d, 0x55, 0x8d, 0x81, 0x7a, 0x34, 0xb8, 0x22, 0x0a, 0x66,
	0x4d, 0xf5, 0x4d, 0x6f, 0xa4, 0x80, 0x44, 0x98, 0x27, 0x36, 0x61, 0x3a, 0x89, 0x5f, 0x0e, 0x9b,
	0xea, 0x9b, 0xed, 0x20, 0xb9, 0x70, 0xed, 0x30, 0xa9, 0xce, 0x5c, 0xa5, 0xdd, 0x0c, 0x52, 0x6c,
	0x09, 0x16, 0x88, 0x36, 0x7e, 0xe3, 0xa8, 0x96, 0x47, 0x02, 0x51, 0x32, 0xaa, 0x4e, 0xd0, 0x5a,
	0x81, 0x18, 0x75, 0x40, 0xa0, 0x29, 0x78, 0x3c, 0x22, 0xce, 0xdd, 0x28, 0x22, 0x96, 0xcd, 0xa2,
	0x74, 0x22, 0x2f, 0x72, 0xeb, 0x40, 0x56, 0xf8, 0x4d, 0x0c, 0x84, 0x68, 0xdb, 0x80, 0x5e, 0xc2,
	0x2c, 0xc9, 0x12, 0x5e, 0x2e, 0x46, 0xa3, 0xc3, 0xd6, 0x94, 0xed, 0x47, 0x89, 0xe4, 0x12, 0x16,
	0x1c, 0x48, 0x00, 0x64, 0x98, 0xf9, 0x4f, 0x20, 0x41, 0xf8, 0xe8, 0x01, 0xcc, 0xd1, 0x54, 0x14,
	0xd4, 0x66, 0xfc, 0x2b, 0x48, 0x12, 0x66, 0x5b, 0x2f, 0xfc, 0x7b, 0x0a, 0x84, 0x68, 0x9b, 0x87,
	0x7e, 0x36, 0xd9, 0xb6, 0x32, 0xbb, 0xf4, 0xf7, 0xef, 0x48, 0xc0, 0xaf, 0xac, 0xd5, 0x26, 0x3b,
	0xd8, 0xbf, 0x8e, 0x85, 0x2d, 0x6c, 0x9c, 0xce, 0xa3, 0x39, 0x65, 0x77, 0x39, 0xde, 0xc5, 0x36,
	0x7e, 0xfe, 0xc3, 0xb9, 0x94, 0x79, 0x59, 0x54, 0xd8, 0x27, 0xf7, 0xea, 0xb3, 0xef, 0xde, 0x49,
	0x89, 0xad, 0x27, 0xb5, 0xea, 0xf7, 0xec, 0xff, 0xd5, 0xbf, 0x7b, 0x27, 0x25, 0xf3, 0x09, 0xa9,
	0x48, 0x7f, 0x21, 0x24, 0x90, 0x6f, 0xf5, 0xd5, 0x98, 0x7e, 0xd8, 0x06, 0x7f, 0x0c, 0x19, 0x82,
	0x7e, 0x6c, 0xbb, 0x26, 0x59, 0x03, 0xfa, 0x89, 0xcb, 0x10, 0xb0, 0xda, 0x3a, 0x52, 0x21, 0xeb,
	0x62, 0xcf, 0x1e, 0xba, 0xb4, 0x71, 0x22, 0xfd, 0x05, 0xcb, 0x7d, 0xd5, 0x1b, 0x4e, 0x43, 0x0e,
	0x8c, 0x49, 0x2b, 0xc1, 0x57, 0x77, 0xc1, 0x1d, 0x67, 0xa2, 0xbf, 0x8c, 0x41, 0xca, 0xc4, 0xbe,
	0xaa, 0xab, 0xbe, 0x9a, 0x9b, 0xa5, 0x8b, 0xd4, 0x9a, 0x76, 0x91, 0xf6, 0x38, 0x0e, 0x5b, 0xa6,
	0xb5, 0xef, 0xe8, 0xa6, 0x48, 0x95, 0x8d, 0xef, 0xdf, 0x49, 0xa9, 0xad, 0x27, 0x95, 0x5a, 0x45,
	0xaa, 0x56, 0xaf, 0x5d, 0x9c, 0x70, 0x34, 0x48, 0x83, 0xec, 0x91, 0x6d, 0xfb, 0x8a, 0x6e, 0x78,
	0xaf, 0xd9, 0xec, 0x93, 0xb7, 0xeb, 0x85, 0x7d, 0x5f, 0xd5, 0x4e, 0xb0, 0xbe, 0x6d, 0x78, 0xaf,
	0xc7, 0x16, 0x60, 0x9e, 0x80, 0x06, 0x3c, 0xe4, 0xc2, 0xb2, 0x87, 0x35, 0xdb, 0xd2, 0x55, 0xf7,
	0x6c, 0xe4, 0xc9, 0xcb, 0xcd, 0xd1, 0xa5, 0x98, 0xda, 0x15, 0xcf, 0x87, 0xab, 0x32, 0x0a, 0xd1,
	0x03, 0x99, 0x87, 0xde, 0xc2, 0x7d, 0x0b, 0xfb, 0xdf, 0xd8, 0xee, 0x6b, 0xc5, 0xb0, 0x7c, 0xec,
	0x1e, 0xab, 0x1a, 0xe6, 0x6e, 0x59, 0x32, 0xbe, 0x69, 0xdb, 0xb6, 0xcf, 0x50, 0xda, 0x01, 0x08,
	0x75, 0x3d, 0xfb, 0xdd, 0x3b, 0x29, 0x26, 0xc9, 0x77, 0xad, 0x2b, 0x84, 0xf4, 0xea, 0xc5, 0x23,
	0x23, 0x1d, 0x0e, 0x48, 0x97, 0x30, 0x71, 0x83, 0xb1, 0x7e, 0xe3, 0x6c, 0x16, 0xd8, 0x07, 0x77,
	0x0c, 0x5e, 0x84, 0xf3, 0x5b, 0xba, 0x56, 0xb8, 0xba, 0x6b, 0x7d, 0x8f, 0x06, 0x33, 0xff, 0x18,
	0x16, 0x26, 0x4e, 0xdd, 0xad, 0xba, 0xd3, 0xff, 0x89, 0xc1, 0xc2, 0xc4, 0x27, 0x82, 0x3e, 0x83,
	0xa4, 0x89, 0x4d, 0xdb, 0x3d, 0xe3, 0x39, 0x01, 0x5d, 0x9c, 0x4b, 0xd9, 0xad, 0x27, 0x95, 0xf5,
	0xea, 0xc6, 0xfa, 0xfa, 0x66, 0xb9, 0xb6, 0x59, 0xad, 0xca, 0x5c, 0x03, 0x1d, 0xc1, 0xac, 0x66,
	0xbb, 0xd8, 0xe3, 0xd9, 0x60, 0xf7, 0xe2, 0x5c, 0xda, 0x91, 0xc4, 0x8a, 0x58, 0x15, 0x6b, 0xe2,
	0x86, 0x28, 0x95, 0x45, 0xa9, 0x22, 0x4a, 0x55, 0x51, 0xaa, 0x89, 0xd2, 0x86, 0x58, 0x29, 0x8b,
	0x95, 0x8a, 0x58, 0xa9, 0x8a, 0x95, 0x9a, 0x58, 0xd9, 0x10, 0x57, 0xcb, 0xe2, 0x6a, 0x45, 0x5c,
	0xad, 0x8a, 0xab, 0x35, 0xb1, 0x5a, 0x16, 0xab, 0x55, 0xb1, 0xba, 0x21, 0xae, 0x55, 0xc4, 0xb5,
	0x9a, 0x58, 0x2b, 0x8b, 0xb5, 0xaa, 0xcc, 0xa0, 0x51, 0x0d, 0x16, 0xc8, 0x0f, 0xe5, 0xd8, 0x55,
	0xb5, 0xb0, 0xa8, 0x9e, 0x69, 0x2c, 0x5d, 0x9c, 0x4b, 0x0b, 0x65, 0x71, 0x8d, 0xc0, 0xae, 0x95,
	0x45, 0x9a, 0x24, 0x88, 0xde, 0x53, 0xae, 0x86, 0x3e, 0x86, 0x44, 0xdf, 0x19, 0x7a, 0xac, 0xfd,
	0x6a, 0x64, 0x2e, 0xce, 0xa5, 0xb9, 0xb2, 0x48, 0x07, 0x27, 0x53, 0x41, 0xe1, 0xef, 0x13, 0x20,
	0x44, 0x0f, 0x2d, 0x7a, 0x0e, 0x09, 0xd3, 0xd6, 0x83, 0x4a, 0x6a, 0x6b, 0xca, 0xb3, 0x5f, 0xda,
	0xb3, 0xf5, 0xa0, 0xa0, 0xa1, 0x78, 0xe8, 0x31, 0x89, 0xd9, 0xf4, 0x30, 0xd0, 0x52, 0x86, 0xee,
	0x43, 0x23, 0xff, 0xc3, 0xb9, 0x74, 0xef, 0x8f, 0x23, 0x9f, 0x3f, 0xad, 0x55, 0xbe, 0x95, 0x81,
	0xa9, 0xd3, 0x52, 0x45, 0x83, 0xf4, 0x28, 0x00, 0xb0, 0x9e, 0xe2, 0xcb, 0x69, 0x47, 0x16, 0x89,
	0x04, 0x29, 0x9d, 0xd3, 0xf9, 0xff, 0x8a, 0x41, 0x2a, 0x5c, 0x86, 0x5b, 0xa5, 0x98, 0x07, 0x30,
	0x47, 0xaa, 0x8d, 0xf0, 0xc2, 0x36, 0xc8, 0x61, 0x84, 0xd9, 0xd6, 0x51, 0x91, 0x57, 0x2c, 0x6c,
	0xdf, 0x3e, 0xbc, 0x38, 0x97, 0xee, 0x56, 0xa5, 0xcd, 0xea, 0x6a, 0xb9, 0x5a, 0xac, 0xae, 0x6e,
	0x6e, 0x94, 0xab, 0xb5, 0x35, 0x49, 0x92, 0xca, 0x55, 0x56, 0xc1, 0xa0, 0x4f, 0x20, 0x65, 0x98,
	0x6a, 0x9f, 0xc2, 0xd1, 0xcb, 0xda, 0x46, 0x8a, 0x65, 0x95, 0xb5, 0xf2, 0xce, 0x07, 0xf2, 0x1c,
	0x95, 0xb5, 0x75, 0x32, 0x42, 0xcf, 0x52, 0x1d, 0xef, 0xc4, 0xa6, 0xdf, 0xd5, 0xec, 0x25, 0x4d,
	0x08, 0xc4, 0x6d, 0xbd, 0x91, 0x85, 0x79, 0x76, 0xc4, 0x15, 0xdb, 0xc2, 0xf6, 0x71, 0xe1, 0x31,
	0x24, 0xc8, 0x0e, 0xa1, 0x65, 0x10, 0xf6, 0x3a, 0xdb, 0xd1, 0x42, 0x6c, 0x01, 0xd2, 0x72, 0xab,
	0xbe, 0xad, 0x74, 0xf6, 0x77, 0x7f, 0x25, 0xc4, 0x50, 0x16, 0x80, 0x92, 0x2f, 0xe4, 0x76, 0xb7,
	0x25, 0xc4, 0x0b, 0xff, 0x10, 0x87, 0xe5, 0xab, 0xa2, 0x0e, 0x7a, 0x00, 0x10, 0xc6, 0xb4, 0xe0,
	0xaa, 0x25, 0x1d, 0x84, 0x20, 0x9d, 0x88, 0xbd, 0xe1, 0x91, 0x85, 0xc9, 0x78, 0x59, 0x32, 0x4e,
	0xcb, 0x69, 0xc6, 0x69, 0xeb, 0x1e, 0x72, 0xe0, 0xbe, 0xe3, 0x1a, 0x26, 0x89, 0xc1, 0xa7, 0x55,
	0x45, 0xd5, 0x75, 0x17, 0x7b, 0xde, 0xf8, 0x96, 0x6f, 0xde, 0x70, 0xcb, 0x0f, 0x18, 0x4a, 0x9d,
	0x21, 0xd0, 0x3b, 0xb5, 0x65, 0x8e, 0xfc, 0xbc, 0x3a, 0xc6, 0x9d, 0xf0, 0x58, 0x9b, 0xf4, 0x98,
	0xf8, 0x7f, 0xf3, 0x58, 0x1b, 0xe3, 0x16, 0xde, 0x02, 0xba, 0xac, 0x8b, 0x74, 0xb8, 0x43, 0x4a,
	0x20, 0xdf, 0x26, 0xbb, 0xa3, 0x58, 0xaa, 0xcf, 0xc6, 0xc0, 0x6e, 0x1a, 0x6a, 0x37, 0x1c, 0x43,
	0xc7, 0xc2, 0x5d, 0xbb, 0x63, 0xe1, 0x7d, 0xd5, 0xa7, 0x03, 0x58, 0xb4, 0x27, 0x19, 0x85, 0x23,
	0x58, 0x8c, 0xe8, 0xa0, 0x0e, 0x80, 0xe1, 0x28, 0xa7, 0xd8, 0xf5, 0x82, 0x43, 0x9e, 0xad, 0x94,
	0x6f, 0x9a, 0xf9, 0x9d, 0xe7, 0xcc, 0x4e, 0x4e, 0x1b, 0xc1, 0xcf, 0x42, 0x15, 0x84, 0x68, 0x66,
	0x40, 0x0f, 0x21, 0xe3, 0xb8, 0x18, 0x9b, 0x8e, 0x6f, 0x04, 0x85, 0x76, 0x4a, 0x1e, 0x67, 0x15,
	0x4e, 0x41, 0x88, 0x5e, 0xb6, 0xa2, 0x23, 0x58, 0x9a, 0xb8, 0xbb, 0x9b, 0x62, 0x45, 0xba, 0xa3,
	0x4b, 0x3e, 0xb6, 0x22, 0xfe, 0x24, 0xa3, 0xf0, 0xcf, 0x71, 0x58, 0x8c, 0x28, 0xa1, 0x35, 0xfe,
	0x4c, 0xc2, 0xbe, 0xf8, 0xdf, 0xfb, 0xe1, 0x5c, 0x7a, 0x10, 0x04, 0x28, 0xb5, 0xf8, 0xb6, 0x5c,
	0xdc, 0x7c, 0xf5, 0x6b, 0x49, 0xac, 0x49, 0xdf, 0xbe, 0xe4, 0x14, 0x7f, 0x49, 0x89, 0xc4, 0x8b,
	0xf8, 0x8f, 0xc6, 0x8b, 0xbf, 0x1a, 0x95, 0xa4, 0x33, 0x34, 0xd7, 0x37, 0xa6, 0x9b, 0xd1, 0xef,
	0xa4, 0x22, 0x7d, 0x9f, 0xab, 0xde, 0x3f, 0x89, 0x81, 0x10, 0xbd, 0xcf, 0x46, 0xe6, 0xe4, 0x25,
	0x39, 0x2f, 0x72, 0x58, 0x4f, 0x51, 0xbb, 0xfd, 0x25, 0xf9, 0xa8, 0xb4, 0x22, 0xdd, 0xc4, 0xf8,
	0x65, 0x39, 0x2d, 0x6e, 0x0a, 0x7f, 0x31, 0x0b, 0x8b, 0x11, 0x75, 0xd4, 0x80, 0x14, 0x2d, 0xb2,
	0x4e, 0xd5, 0x01, 0x3f, 0x43, 0x3f, 0xd2, 0x27, 0xd1, 0x4c, 0x29, 0x79, 0xc5, 0xd5, 0x72, 0xd9,
	0x93, 0x43, 0x3b, 0xf4, 0x73, 0x98, 0xf3, 0x0d, 0x13, 0xdb, 0x43, 0x9f, 0xdf, 0xd0, 0x5d, 0x7b,
	0x4d, 0xe4, 0x15, 0x6b, 0x65, 0x4f, 0x0e, 0xac, 0x50, 0x1b, 0xee, 0x0c, 0x2d, 0x36, 0xdc, 0x33,
	0xc5, 0x3f, 0x71, 0xb1, 0x77, 0x62, 0x0f, 0x74, 0x9e, 0x15, 0x72, 0x17, 0xe7, 0xd2, 0x72, 0x59,
	0xac, 0x88, 0xab, 0x62, 0x55, 0x5c, 0x13, 0x6b, 0xe2, 0xba, 0xb8, 0x21, 0x6e, 0x8a, 0x52, 0x59,
	0x46, 0xa1, 0x51, 0x37, 0xb0, 0x41, 0x2d, 0x58, 0xba, 0x0c, 0x94, 0xb8, 0x06, 0x48, 0xb8, 0x04,
	0xa3, 0x43, 0xc6, 0xd7, 0x1c, 0xc5, 0xa6, 0xa7, 0xd2, 0xe3, 0xb7, 0x5f, 0xf5, 0xe9, 0xb6, 0xa4,
	0xd4, 0xd5, 0x9c, 0x0e, 0x03, 0x22, 0xb9, 0xc7, 0x0f, 0x29, 0xd4, 0x87, 0xf9, 0x13, 0xdf, 0x1f,
	0xb9, 0x61, 0x05, 0x7c, 0x63, 0x4a, 0x37, 0x3b, 0xbe, 0x3f, 0xe6, 0x27, 0x73, 0x32, 0x22, 0xf3,
	0x45, 0x80, 0xd1, 0x20, 0x48, 0xf9, 0xe3, 0xd8, 0xae, 0xcf, 0x8b, 0x38, 0xb6, 0xa9, 0xc5, 0xd5,
	0xca, 0x7a, 0x6d, 0x5d, 0xa6, 0x82, 0x7c, 0x03, 0x32, 0x63, 0x60, 0xd7, 0xea, 0x23, 0x04, 0x09,
	0x47, 0xf5, 0x4f, 0xf8, 0xa9, 0xa7, 0xbf, 0x1b, 0x3f, 0x81, 0xe5, 0x89, 0xb3, 0xcd, 0xe7, 0xc8,
	0xef, 0x1d, 0xfe, 0x3c, 0x09, 0x8b, 0x91, 0x07, 0x83, 0x4b, 0xcf, 0xbd, 0xbd, 0xf0, 0xb5, 0x86,
	0x5d, 0x27, 0x3d, 0x99, 0xee, 0x39, 0x2c, 0xf2, 0x5e, 0x43, 0xda, 0xca, 0xf0, 0x75, 0x75, 0xd4,
	0x56, 0x06, 0xac, 0xb6, 0x4e, 0x66, 0x73, 0xfc, 0x47, 0xba, 0x15, 0x3c, 0x07, 0x93, 0xdf, 0xe1,
	0x13, 0xf1, 0xec, 0xd8, 0x13, 0xf1, 0xe5, 0xb7, 0x91, 0xe4, 0x15, 0x6f, 0x23, 0xe8, 0xfe, 0xa8,
	0x8d, 0x9f, 0xa3, 0x72, 0xde, 0xc0, 0xa3, 0x63, 0x40, 0x97, 0xfa, 0x9c, 0xa0, 0xc5, 0x59, 0x9f,
	0xb2, 0xc5, 0x91, 0x97, 0xa2, 0x7d, 0x8d, 0x87, 0x9e, 0xc2, 0x12, 0x1f, 0xa7, 0x76, 0xa2, 0x5a,
	0x7d, 0xf6, 0x40, 0x9e, 0xbe, 0xf6, 0x81, 0x7c, 0x91, 0x19, 0x35, 0x99, 0x4d, 0xdd, 0x2f, 0xfc,
	0x6b, 0xfc, 0xda, 0xe7, 0xaa, 0xbb, 0xb0, 0xd4, 0x94, 0x5b, 0xf5, 0x6e, 0x7b, 0xff, 0x99, 0xd2,
	0xde, 0x3f, 0xec, 0xd6, 0xf7, 0x9b, 0x2d, 0x21, 0x43, 0xd8, 0xbd, 0x83, 0xed, 0x08, 0x7b, 0x9e,
	0xb0, 0x83, 0x77, 0xaa, 0x11, 0x7b, 0x81, 0xb0, 0x83, 0x37, 0xaf, 0x11, 0x3b, 0xcb, 0xd8, 0xec,
	0xc1, 0x6b, 0xc4, 0x5e, 0x44, 0x0f, 0xe0, 0xc3, 0xfa, 0x8b, 0x7a, 0x9b, 0x6a, 0x53, 0xb3, 0xde,
	0x81, 0xb2, 0xdd, 0x93, 0xd9, 0x95, 0x9b, 0x80, 0xee, 0xc0, 0x62, 0x73, 0xa7, 0xd5, 0xfc, 0x05,
	0x11, 0xef, 0xb4, 0xea, 0xbb, 0xdd, 0x1d, 0x61, 0x89, 0x30, 0x3b, 0x07, 0xad, 0x7d, 0xc2, 0xeb,
	0xca, 0xf5, 0xa7, 0x4f, 0xdb, 0x4d, 0x01, 0xa1, 0x9f, 0x40, 0x2e, 0x04, 0x7a, 0x51, 0x97, 0xf7,
	0xc6, 0x71, 0xee, 0x50, 0x9c, 0xdd, 0xce, 0xe1, 0xb8, 0xc9, 0x32, 0x42, 0x90, 0x95, 0x7b, 0xfb,
	0x14, 0xa7, 0xde, 0xec, 0xf6, 0xea, 0xbb, 0xc2, 0x5d, 0x52, 0x37, 0x06, 0xbc, 0x4e, 0xaf, 0xbb,
	0x5d, 0xef, 0xb6, 0xb6, 0x85, 0x7b, 0xe3, 0xef, 0x73, 0xf7, 0x09, 0x41, 0xe7, 0xdd, 0xda, 0x16,
	0x72, 0x85, 0xbf, 0x8d, 0x83, 0x10, 0xdd, 0x45, 0x92, 0x47, 0x0c, 0xb2, 0xfd, 0xfc, 0x6b, 0x60,
	0x04, 0x39, 0xb9, 0xa6, 0xaa, 0x05, 0xd5, 0x18, 0xff, 0xda, 0xc0, 0x54, 0x35, 0x5e, 0x31, 0xa1,
	0x8f, 0x20, 0x1d, 0x96, 0x91, 0xfc, 0x60, 0xa7, 0x82, 0x2a, 0x12, 0x69, 0x80, 0x2e, 0x17, 0x91,
	0xbc, 0x9a, 0x5b, 0x9b, 0xaa, 0x9a, 0x93, 0x85, 0x68, 0xed, 0x38, 0xe1, 0x24, 0xac, 0x1b, 0x79,
	0xf8, 0x7c, 0x5f, 0x27, 0x41, 0xb9, 0x58, 0xf8, 0xd3, 0x18, 0x64, 0x27, 0x95, 0x50, 0x0e, 0xe6,
	0x02, 0x67, 0x6c, 0xc9, 0x02, 0x12, 0xbd, 0x80, 0xec, 0x64, 0x05, 0xc9, 0x73, 0x54, 0xe5, 0xf6,
	0xc5, 0xa3, 0x9c, 0x19, 0x2b, 0x1c, 0x0b, 0x6f, 0x20, 0x33, 0x26, 0xfb, 0x91, 0x11, 0x4c, 0x96,
	0x92, 0xf1, 0xf7, 0x2f, 0x25, 0x15, 0x48, 0xef, 0xda, 0x7d, 0x19, 0x6b, 0xb6, 0xab, 0xa3, 0x0d,
	0x48, 0x87, 0x7f, 0x69, 0xc3, 0x33, 0xf8, 0x8f, 0xfe, 0xd9, 0x4b, 0xa8, 0x4c, 0x46, 0x3c, 0xf9,
	0xa8, 0x1b, 0x90, 0x9f, 0x3d, 0x86, 0x74, 0xe8, 0x18, 0xe5, 0xe1, 0x5e, 0xfb, 0x40, 0x79, 0xde,
	0x92, 0x0f, 0xdb, 0x9d, 0xfd, 0xc8, 0xf7, 0x9e, 0x82, 0x44, 0xfb, 0xe0, 0x79, 0x55, 0x88, 0xf1,
	0x5f, 0x35, 0x21, 0xde, 0xf8, 0xb3, 0x18, 0x7c, 0x3a, 0x31, 0x39, 0xd5, 0x31, 0x7e, 0xeb, 0x04,
	0xbf, 0x7a, 0xd1, 0x37, 0xfc, 0x93, 0xe1, 0x11, 0x51, 0x58, 0x61, 0x56, 0x45, 0xf6, 0x07, 0x46,
	0x7d, 0xbb, 0xd8, 0xc7, 0x16, 0x9d, 0xc1, 0xca, 0x8d, 0xfe, 0xb8, 0xe9, 0xf1, 0x04, 0x75, 0x94,
	0xa4, 0xa6, 0xab, 0xff, 0x17, 0x00, 0x00, 0xff, 0xff, 0xda, 0xc0, 0x93, 0xd3, 0x1a, 0x25, 0x00,
	0x00,
}
