// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/iot/devices/v1/device_service.proto

package devices

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/yandex-cloud/go-genproto/yandex/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/validation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetDeviceRequest struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceRequest) Reset()         { *m = GetDeviceRequest{} }
func (m *GetDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceRequest) ProtoMessage()    {}
func (*GetDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f9432a8c0088851, []int{0}
}

func (m *GetDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceRequest.Unmarshal(m, b)
}
func (m *GetDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceRequest.Marshal(b, m, deterministic)
}
func (m *GetDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceRequest.Merge(m, src)
}
func (m *GetDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceRequest.Size(m)
}
func (m *GetDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceRequest proto.InternalMessageInfo

func (m *GetDeviceRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type ListDevicesRequest struct {
	// Types that are valid to be assigned to Id:
	//	*ListDevicesRequest_RegistryId
	//	*ListDevicesRequest_FolderId
	Id                   isListDevicesRequest_Id `protobuf_oneof:"id"`
	PageSize             int64                   `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string                  `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ListDevicesRequest) Reset()         { *m = ListDevicesRequest{} }
func (m *ListDevicesRequest) String() string { return proto.CompactTextString(m) }
func (*ListDevicesRequest) ProtoMessage()    {}
func (*ListDevicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f9432a8c0088851, []int{1}
}

func (m *ListDevicesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDevicesRequest.Unmarshal(m, b)
}
func (m *ListDevicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDevicesRequest.Marshal(b, m, deterministic)
}
func (m *ListDevicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDevicesRequest.Merge(m, src)
}
func (m *ListDevicesRequest) XXX_Size() int {
	return xxx_messageInfo_ListDevicesRequest.Size(m)
}
func (m *ListDevicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDevicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDevicesRequest proto.InternalMessageInfo

type isListDevicesRequest_Id interface {
	isListDevicesRequest_Id()
}

type ListDevicesRequest_RegistryId struct {
	RegistryId string `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3,oneof"`
}

type ListDevicesRequest_FolderId struct {
	FolderId string `protobuf:"bytes,2,opt,name=folder_id,json=folderId,proto3,oneof"`
}

func (*ListDevicesRequest_RegistryId) isListDevicesRequest_Id() {}

func (*ListDevicesRequest_FolderId) isListDevicesRequest_Id() {}

func (m *ListDevicesRequest) GetId() isListDevicesRequest_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ListDevicesRequest) GetRegistryId() string {
	if x, ok := m.GetId().(*ListDevicesRequest_RegistryId); ok {
		return x.RegistryId
	}
	return ""
}

func (m *ListDevicesRequest) GetFolderId() string {
	if x, ok := m.GetId().(*ListDevicesRequest_FolderId); ok {
		return x.FolderId
	}
	return ""
}

func (m *ListDevicesRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListDevicesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ListDevicesRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ListDevicesRequest_RegistryId)(nil),
		(*ListDevicesRequest_FolderId)(nil),
	}
}

type ListDevicesResponse struct {
	Devices              []*Device `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
	NextPageToken        string    `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListDevicesResponse) Reset()         { *m = ListDevicesResponse{} }
func (m *ListDevicesResponse) String() string { return proto.CompactTextString(m) }
func (*ListDevicesResponse) ProtoMessage()    {}
func (*ListDevicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f9432a8c0088851, []int{2}
}

func (m *ListDevicesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDevicesResponse.Unmarshal(m, b)
}
func (m *ListDevicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDevicesResponse.Marshal(b, m, deterministic)
}
func (m *ListDevicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDevicesResponse.Merge(m, src)
}
func (m *ListDevicesResponse) XXX_Size() int {
	return xxx_messageInfo_ListDevicesResponse.Size(m)
}
func (m *ListDevicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDevicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDevicesResponse proto.InternalMessageInfo

func (m *ListDevicesResponse) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

func (m *ListDevicesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type CreateDeviceRequest struct {
	RegistryId           string                             `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	Name                 string                             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string                             `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Certificates         []*CreateDeviceRequest_Certificate `protobuf:"bytes,4,rep,name=certificates,proto3" json:"certificates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *CreateDeviceRequest) Reset()         { *m = CreateDeviceRequest{} }
func (m *CreateDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceRequest) ProtoMessage()    {}
func (*CreateDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f9432a8c0088851, []int{3}
}

func (m *CreateDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceRequest.Unmarshal(m, b)
}
func (m *CreateDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceRequest.Marshal(b, m, deterministic)
}
func (m *CreateDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceRequest.Merge(m, src)
}
func (m *CreateDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceRequest.Size(m)
}
func (m *CreateDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceRequest proto.InternalMessageInfo

func (m *CreateDeviceRequest) GetRegistryId() string {
	if m != nil {
		return m.RegistryId
	}
	return ""
}

func (m *CreateDeviceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateDeviceRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateDeviceRequest) GetCertificates() []*CreateDeviceRequest_Certificate {
	if m != nil {
		return m.Certificates
	}
	return nil
}

type CreateDeviceRequest_Certificate struct {
	CertificateData      string   `protobuf:"bytes,1,opt,name=certificate_data,json=certificateData,proto3" json:"certificate_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDeviceRequest_Certificate) Reset()         { *m = CreateDeviceRequest_Certificate{} }
func (m *CreateDeviceRequest_Certificate) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceRequest_Certificate) ProtoMessage()    {}
func (*CreateDeviceRequest_Certificate) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f9432a8c0088851, []int{3, 0}
}

func (m *CreateDeviceRequest_Certificate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceRequest_Certificate.Unmarshal(m, b)
}
func (m *CreateDeviceRequest_Certificate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceRequest_Certificate.Marshal(b, m, deterministic)
}
func (m *CreateDeviceRequest_Certificate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceRequest_Certificate.Merge(m, src)
}
func (m *CreateDeviceRequest_Certificate) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceRequest_Certificate.Size(m)
}
func (m *CreateDeviceRequest_Certificate) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceRequest_Certificate.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceRequest_Certificate proto.InternalMessageInfo

func (m *CreateDeviceRequest_Certificate) GetCertificateData() string {
	if m != nil {
		return m.CertificateData
	}
	return ""
}

type CreateDeviceMetadata struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDeviceMetadata) Reset()         { *m = CreateDeviceMetadata{} }
func (m *CreateDeviceMetadata) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceMetadata) ProtoMessage()    {}
func (*CreateDeviceMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f9432a8c0088851, []int{4}
}

func (m *CreateDeviceMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceMetadata.Unmarshal(m, b)
}
func (m *CreateDeviceMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceMetadata.Marshal(b, m, deterministic)
}
func (m *CreateDeviceMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceMetadata.Merge(m, src)
}
func (m *CreateDeviceMetadata) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceMetadata.Size(m)
}
func (m *CreateDeviceMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceMetadata proto.InternalMessageInfo

func (m *CreateDeviceMetadata) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type UpdateDeviceRequest struct {
	DeviceId             string                `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	Name                 string                `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description          string                `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateDeviceRequest) Reset()         { *m = UpdateDeviceRequest{} }
func (m *UpdateDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceRequest) ProtoMessage()    {}
func (*UpdateDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f9432a8c0088851, []int{5}
}

func (m *UpdateDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceRequest.Unmarshal(m, b)
}
func (m *UpdateDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceRequest.Marshal(b, m, deterministic)
}
func (m *UpdateDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceRequest.Merge(m, src)
}
func (m *UpdateDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceRequest.Size(m)
}
func (m *UpdateDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceRequest proto.InternalMessageInfo

func (m *UpdateDeviceRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *UpdateDeviceRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

func (m *UpdateDeviceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateDeviceRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type UpdateDeviceMetadata struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDeviceMetadata) Reset()         { *m = UpdateDeviceMetadata{} }
func (m *UpdateDeviceMetadata) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceMetadata) ProtoMessage()    {}
func (*UpdateDeviceMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f9432a8c0088851, []int{6}
}

func (m *UpdateDeviceMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceMetadata.Unmarshal(m, b)
}
func (m *UpdateDeviceMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceMetadata.Marshal(b, m, deterministic)
}
func (m *UpdateDeviceMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceMetadata.Merge(m, src)
}
func (m *UpdateDeviceMetadata) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceMetadata.Size(m)
}
func (m *UpdateDeviceMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceMetadata proto.InternalMessageInfo

func (m *UpdateDeviceMetadata) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type DeleteDeviceRequest struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceRequest) Reset()         { *m = DeleteDeviceRequest{} }
func (m *DeleteDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceRequest) ProtoMessage()    {}
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f9432a8c0088851, []int{7}
}

func (m *DeleteDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceRequest.Unmarshal(m, b)
}
func (m *DeleteDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceRequest.Merge(m, src)
}
func (m *DeleteDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceRequest.Size(m)
}
func (m *DeleteDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceRequest proto.InternalMessageInfo

func (m *DeleteDeviceRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type DeleteDeviceMetadata struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceMetadata) Reset()         { *m = DeleteDeviceMetadata{} }
func (m *DeleteDeviceMetadata) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceMetadata) ProtoMessage()    {}
func (*DeleteDeviceMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f9432a8c0088851, []int{8}
}

func (m *DeleteDeviceMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceMetadata.Unmarshal(m, b)
}
func (m *DeleteDeviceMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceMetadata.Marshal(b, m, deterministic)
}
func (m *DeleteDeviceMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceMetadata.Merge(m, src)
}
func (m *DeleteDeviceMetadata) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceMetadata.Size(m)
}
func (m *DeleteDeviceMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceMetadata proto.InternalMessageInfo

func (m *DeleteDeviceMetadata) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type ListDeviceCertificatesRequest struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDeviceCertificatesRequest) Reset()         { *m = ListDeviceCertificatesRequest{} }
func (m *ListDeviceCertificatesRequest) String() string { return proto.CompactTextString(m) }
func (*ListDeviceCertificatesRequest) ProtoMessage()    {}
func (*ListDeviceCertificatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f9432a8c0088851, []int{9}
}

func (m *ListDeviceCertificatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceCertificatesRequest.Unmarshal(m, b)
}
func (m *ListDeviceCertificatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceCertificatesRequest.Marshal(b, m, deterministic)
}
func (m *ListDeviceCertificatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceCertificatesRequest.Merge(m, src)
}
func (m *ListDeviceCertificatesRequest) XXX_Size() int {
	return xxx_messageInfo_ListDeviceCertificatesRequest.Size(m)
}
func (m *ListDeviceCertificatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceCertificatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceCertificatesRequest proto.InternalMessageInfo

func (m *ListDeviceCertificatesRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type ListDeviceCertificatesResponse struct {
	Certificates         []*DeviceCertificate `protobuf:"bytes,1,rep,name=certificates,proto3" json:"certificates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListDeviceCertificatesResponse) Reset()         { *m = ListDeviceCertificatesResponse{} }
func (m *ListDeviceCertificatesResponse) String() string { return proto.CompactTextString(m) }
func (*ListDeviceCertificatesResponse) ProtoMessage()    {}
func (*ListDeviceCertificatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f9432a8c0088851, []int{10}
}

func (m *ListDeviceCertificatesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceCertificatesResponse.Unmarshal(m, b)
}
func (m *ListDeviceCertificatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceCertificatesResponse.Marshal(b, m, deterministic)
}
func (m *ListDeviceCertificatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceCertificatesResponse.Merge(m, src)
}
func (m *ListDeviceCertificatesResponse) XXX_Size() int {
	return xxx_messageInfo_ListDeviceCertificatesResponse.Size(m)
}
func (m *ListDeviceCertificatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceCertificatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceCertificatesResponse proto.InternalMessageInfo

func (m *ListDeviceCertificatesResponse) GetCertificates() []*DeviceCertificate {
	if m != nil {
		return m.Certificates
	}
	return nil
}

type AddDeviceCertificateRequest struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	CertificateData      string   `protobuf:"bytes,3,opt,name=certificate_data,json=certificateData,proto3" json:"certificate_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddDeviceCertificateRequest) Reset()         { *m = AddDeviceCertificateRequest{} }
func (m *AddDeviceCertificateRequest) String() string { return proto.CompactTextString(m) }
func (*AddDeviceCertificateRequest) ProtoMessage()    {}
func (*AddDeviceCertificateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f9432a8c0088851, []int{11}
}

func (m *AddDeviceCertificateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDeviceCertificateRequest.Unmarshal(m, b)
}
func (m *AddDeviceCertificateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDeviceCertificateRequest.Marshal(b, m, deterministic)
}
func (m *AddDeviceCertificateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDeviceCertificateRequest.Merge(m, src)
}
func (m *AddDeviceCertificateRequest) XXX_Size() int {
	return xxx_messageInfo_AddDeviceCertificateRequest.Size(m)
}
func (m *AddDeviceCertificateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDeviceCertificateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddDeviceCertificateRequest proto.InternalMessageInfo

func (m *AddDeviceCertificateRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *AddDeviceCertificateRequest) GetCertificateData() string {
	if m != nil {
		return m.CertificateData
	}
	return ""
}

type AddDeviceCertificateMetadata struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Fingerprint          string   `protobuf:"bytes,2,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddDeviceCertificateMetadata) Reset()         { *m = AddDeviceCertificateMetadata{} }
func (m *AddDeviceCertificateMetadata) String() string { return proto.CompactTextString(m) }
func (*AddDeviceCertificateMetadata) ProtoMessage()    {}
func (*AddDeviceCertificateMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f9432a8c0088851, []int{12}
}

func (m *AddDeviceCertificateMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDeviceCertificateMetadata.Unmarshal(m, b)
}
func (m *AddDeviceCertificateMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDeviceCertificateMetadata.Marshal(b, m, deterministic)
}
func (m *AddDeviceCertificateMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDeviceCertificateMetadata.Merge(m, src)
}
func (m *AddDeviceCertificateMetadata) XXX_Size() int {
	return xxx_messageInfo_AddDeviceCertificateMetadata.Size(m)
}
func (m *AddDeviceCertificateMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDeviceCertificateMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_AddDeviceCertificateMetadata proto.InternalMessageInfo

func (m *AddDeviceCertificateMetadata) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *AddDeviceCertificateMetadata) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

type DeleteDeviceCertificateRequest struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Fingerprint          string   `protobuf:"bytes,2,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceCertificateRequest) Reset()         { *m = DeleteDeviceCertificateRequest{} }
func (m *DeleteDeviceCertificateRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceCertificateRequest) ProtoMessage()    {}
func (*DeleteDeviceCertificateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f9432a8c0088851, []int{13}
}

func (m *DeleteDeviceCertificateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceCertificateRequest.Unmarshal(m, b)
}
func (m *DeleteDeviceCertificateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceCertificateRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDeviceCertificateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceCertificateRequest.Merge(m, src)
}
func (m *DeleteDeviceCertificateRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceCertificateRequest.Size(m)
}
func (m *DeleteDeviceCertificateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceCertificateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceCertificateRequest proto.InternalMessageInfo

func (m *DeleteDeviceCertificateRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *DeleteDeviceCertificateRequest) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

type DeleteDeviceCertificateMetadata struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Fingerprint          string   `protobuf:"bytes,2,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceCertificateMetadata) Reset()         { *m = DeleteDeviceCertificateMetadata{} }
func (m *DeleteDeviceCertificateMetadata) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceCertificateMetadata) ProtoMessage()    {}
func (*DeleteDeviceCertificateMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f9432a8c0088851, []int{14}
}

func (m *DeleteDeviceCertificateMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceCertificateMetadata.Unmarshal(m, b)
}
func (m *DeleteDeviceCertificateMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceCertificateMetadata.Marshal(b, m, deterministic)
}
func (m *DeleteDeviceCertificateMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceCertificateMetadata.Merge(m, src)
}
func (m *DeleteDeviceCertificateMetadata) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceCertificateMetadata.Size(m)
}
func (m *DeleteDeviceCertificateMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceCertificateMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceCertificateMetadata proto.InternalMessageInfo

func (m *DeleteDeviceCertificateMetadata) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *DeleteDeviceCertificateMetadata) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

type ListDeviceOperationsRequest struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	PageSize             int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Filter               string   `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDeviceOperationsRequest) Reset()         { *m = ListDeviceOperationsRequest{} }
func (m *ListDeviceOperationsRequest) String() string { return proto.CompactTextString(m) }
func (*ListDeviceOperationsRequest) ProtoMessage()    {}
func (*ListDeviceOperationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f9432a8c0088851, []int{15}
}

func (m *ListDeviceOperationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceOperationsRequest.Unmarshal(m, b)
}
func (m *ListDeviceOperationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceOperationsRequest.Marshal(b, m, deterministic)
}
func (m *ListDeviceOperationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceOperationsRequest.Merge(m, src)
}
func (m *ListDeviceOperationsRequest) XXX_Size() int {
	return xxx_messageInfo_ListDeviceOperationsRequest.Size(m)
}
func (m *ListDeviceOperationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceOperationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceOperationsRequest proto.InternalMessageInfo

func (m *ListDeviceOperationsRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *ListDeviceOperationsRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListDeviceOperationsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListDeviceOperationsRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

type ListDeviceOperationsResponse struct {
	Operations           []*operation.Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	NextPageToken        string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ListDeviceOperationsResponse) Reset()         { *m = ListDeviceOperationsResponse{} }
func (m *ListDeviceOperationsResponse) String() string { return proto.CompactTextString(m) }
func (*ListDeviceOperationsResponse) ProtoMessage()    {}
func (*ListDeviceOperationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f9432a8c0088851, []int{16}
}

func (m *ListDeviceOperationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceOperationsResponse.Unmarshal(m, b)
}
func (m *ListDeviceOperationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceOperationsResponse.Marshal(b, m, deterministic)
}
func (m *ListDeviceOperationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceOperationsResponse.Merge(m, src)
}
func (m *ListDeviceOperationsResponse) XXX_Size() int {
	return xxx_messageInfo_ListDeviceOperationsResponse.Size(m)
}
func (m *ListDeviceOperationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceOperationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceOperationsResponse proto.InternalMessageInfo

func (m *ListDeviceOperationsResponse) GetOperations() []*operation.Operation {
	if m != nil {
		return m.Operations
	}
	return nil
}

func (m *ListDeviceOperationsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func init() {
	proto.RegisterType((*GetDeviceRequest)(nil), "yandex.cloud.iot.devices.v1.GetDeviceRequest")
	proto.RegisterType((*ListDevicesRequest)(nil), "yandex.cloud.iot.devices.v1.ListDevicesRequest")
	proto.RegisterType((*ListDevicesResponse)(nil), "yandex.cloud.iot.devices.v1.ListDevicesResponse")
	proto.RegisterType((*CreateDeviceRequest)(nil), "yandex.cloud.iot.devices.v1.CreateDeviceRequest")
	proto.RegisterType((*CreateDeviceRequest_Certificate)(nil), "yandex.cloud.iot.devices.v1.CreateDeviceRequest.Certificate")
	proto.RegisterType((*CreateDeviceMetadata)(nil), "yandex.cloud.iot.devices.v1.CreateDeviceMetadata")
	proto.RegisterType((*UpdateDeviceRequest)(nil), "yandex.cloud.iot.devices.v1.UpdateDeviceRequest")
	proto.RegisterType((*UpdateDeviceMetadata)(nil), "yandex.cloud.iot.devices.v1.UpdateDeviceMetadata")
	proto.RegisterType((*DeleteDeviceRequest)(nil), "yandex.cloud.iot.devices.v1.DeleteDeviceRequest")
	proto.RegisterType((*DeleteDeviceMetadata)(nil), "yandex.cloud.iot.devices.v1.DeleteDeviceMetadata")
	proto.RegisterType((*ListDeviceCertificatesRequest)(nil), "yandex.cloud.iot.devices.v1.ListDeviceCertificatesRequest")
	proto.RegisterType((*ListDeviceCertificatesResponse)(nil), "yandex.cloud.iot.devices.v1.ListDeviceCertificatesResponse")
	proto.RegisterType((*AddDeviceCertificateRequest)(nil), "yandex.cloud.iot.devices.v1.AddDeviceCertificateRequest")
	proto.RegisterType((*AddDeviceCertificateMetadata)(nil), "yandex.cloud.iot.devices.v1.AddDeviceCertificateMetadata")
	proto.RegisterType((*DeleteDeviceCertificateRequest)(nil), "yandex.cloud.iot.devices.v1.DeleteDeviceCertificateRequest")
	proto.RegisterType((*DeleteDeviceCertificateMetadata)(nil), "yandex.cloud.iot.devices.v1.DeleteDeviceCertificateMetadata")
	proto.RegisterType((*ListDeviceOperationsRequest)(nil), "yandex.cloud.iot.devices.v1.ListDeviceOperationsRequest")
	proto.RegisterType((*ListDeviceOperationsResponse)(nil), "yandex.cloud.iot.devices.v1.ListDeviceOperationsResponse")
}

func init() {
	proto.RegisterFile("yandex/cloud/iot/devices/v1/device_service.proto", fileDescriptor_4f9432a8c0088851)
}

var fileDescriptor_4f9432a8c0088851 = []byte{
	// 1167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0x4d, 0x6f, 0x1b, 0x45,
	0x18, 0x66, 0x62, 0x63, 0x92, 0xd7, 0x6d, 0x9a, 0x4e, 0x40, 0x84, 0x4d, 0x9a, 0xa6, 0x5b, 0x51,
	0x5c, 0x57, 0xfb, 0xe5, 0x2a, 0x55, 0xda, 0x24, 0xa8, 0x49, 0x03, 0x21, 0x88, 0x8a, 0x6a, 0x0b,
	0x97, 0x42, 0x65, 0x36, 0xde, 0xb1, 0x59, 0xc5, 0xd9, 0x35, 0xbb, 0x93, 0xa8, 0x49, 0xda, 0x4b,
	0x0f, 0x48, 0xe4, 0xca, 0x1f, 0x40, 0xe2, 0x07, 0x20, 0xe5, 0xc2, 0x01, 0x21, 0xd1, 0x03, 0x4a,
	0xb8, 0x86, 0x1b, 0x17, 0x2e, 0x1c, 0x38, 0x73, 0x42, 0x9c, 0xd0, 0xcc, 0xac, 0xed, 0x71, 0xbc,
	0xb6, 0x37, 0x41, 0x9c, 0xb2, 0xd9, 0xf7, 0xfb, 0x79, 0x9f, 0xd9, 0x67, 0x0c, 0xe6, 0x8e, 0xe3,
	0xbb, 0xe4, 0x89, 0x51, 0xa9, 0x07, 0x5b, 0xae, 0xe1, 0x05, 0xd4, 0x70, 0xc9, 0xb6, 0x57, 0x21,
	0x91, 0xb1, 0x6d, 0xc5, 0x8f, 0xe5, 0x88, 0x84, 0xec, 0xaf, 0xde, 0x08, 0x03, 0x1a, 0xe0, 0x49,
	0x11, 0xa1, 0xf3, 0x08, 0xdd, 0x0b, 0xa8, 0x1e, 0x47, 0xe8, 0xdb, 0x96, 0x32, 0x55, 0x0b, 0x82,
	0x5a, 0x9d, 0x18, 0x4e, 0xc3, 0x33, 0x1c, 0xdf, 0x0f, 0xa8, 0x43, 0xbd, 0xc0, 0x8f, 0x44, 0xa8,
	0x32, 0x13, 0x5b, 0xf9, 0x7f, 0xeb, 0x5b, 0x55, 0xa3, 0xea, 0x91, 0xba, 0x5b, 0xde, 0x74, 0xa2,
	0x8d, 0xd8, 0xe3, 0x52, 0x47, 0x3b, 0xdb, 0x4e, 0xdd, 0x73, 0x79, 0x86, 0xd8, 0xac, 0xc4, 0x66,
	0x96, 0x3e, 0x68, 0x90, 0x50, 0xb6, 0x5d, 0xeb, 0x08, 0x6d, 0x59, 0xbb, 0xfc, 0x0a, 0x83, 0x27,
	0x16, 0x9e, 0xea, 0x22, 0x8c, 0xad, 0x12, 0xba, 0xc2, 0x5f, 0xd9, 0xe4, 0x8b, 0x2d, 0x12, 0x51,
	0x7c, 0x1d, 0x46, 0x62, 0x54, 0x3c, 0x77, 0x02, 0xcd, 0xa0, 0xc2, 0xc8, 0xf2, 0xb9, 0x3f, 0x0f,
	0x2d, 0xb4, 0x7f, 0x64, 0x65, 0x17, 0x16, 0x67, 0x4d, 0x7b, 0x58, 0x98, 0xd7, 0x5c, 0xf5, 0x17,
	0x04, 0xf8, 0x03, 0x2f, 0x8a, 0x13, 0x44, 0xcd, 0x0c, 0x37, 0x20, 0x1f, 0x92, 0x9a, 0x17, 0xd1,
	0x70, 0xa7, 0x9d, 0x63, 0xb8, 0x19, 0xff, 0xde, 0x4b, 0x36, 0x34, 0xcd, 0x6b, 0x2e, 0x7e, 0x0b,
	0x46, 0xaa, 0x41, 0xdd, 0x25, 0x21, 0x73, 0x1d, 0xea, 0x72, 0x1d, 0x16, 0x46, 0xe1, 0xd8, 0x70,
	0x6a, 0xa4, 0x1c, 0x79, 0xbb, 0x64, 0x22, 0x33, 0x83, 0x0a, 0x99, 0x65, 0xf8, 0xe7, 0xd0, 0xca,
	0x99, 0x9a, 0x65, 0x9a, 0xa6, 0x3d, 0xcc, 0x8c, 0x0f, 0xbd, 0x5d, 0x82, 0x0b, 0x00, 0xdc, 0x91,
	0x06, 0x1b, 0xc4, 0x9f, 0xc8, 0xf2, 0x94, 0x23, 0xfb, 0x47, 0xd6, 0xcb, 0x0b, 0x8b, 0x96, 0x69,
	0xda, 0x3c, 0xcb, 0x47, 0xcc, 0xb6, 0x0c, 0x30, 0xe4, 0xb9, 0x38, 0xfb, 0xd3, 0x0b, 0x0b, 0xa9,
	0x4f, 0x61, 0xbc, 0x63, 0x94, 0xa8, 0x11, 0xf8, 0x11, 0xc1, 0x8b, 0xf0, 0x4a, 0x0c, 0xde, 0x04,
	0x9a, 0xc9, 0x14, 0xf2, 0xa5, 0xab, 0x7a, 0x1f, 0x76, 0xe8, 0x31, 0x94, 0xcd, 0x18, 0x7c, 0x0d,
	0x2e, 0xf8, 0xe4, 0x09, 0x2d, 0x4b, 0x0d, 0xf1, 0x19, 0xed, 0xf3, 0xec, 0xf5, 0x83, 0x66, 0x27,
	0xea, 0x8b, 0x21, 0x18, 0xbf, 0x17, 0x12, 0x87, 0x92, 0xce, 0x65, 0x68, 0x49, 0x50, 0x76, 0xae,
	0x43, 0x06, 0xb3, 0x04, 0x59, 0xdf, 0xd9, 0x24, 0x31, 0x8e, 0xd3, 0xcc, 0xef, 0xaf, 0x43, 0x6b,
	0xf4, 0x13, 0x47, 0xdb, 0x5d, 0xd2, 0x1e, 0x99, 0xda, 0xed, 0xb2, 0xf6, 0xb8, 0xd8, 0x8a, 0xe4,
	0xbe, 0x6c, 0x5b, 0x2e, 0x89, 0x2a, 0xa1, 0xd7, 0x60, 0x14, 0xe2, 0xc8, 0xb6, 0xf0, 0x2a, 0xcd,
	0xde, 0xb2, 0x65, 0x2b, 0xfe, 0x0c, 0xce, 0x55, 0x48, 0x48, 0xbd, 0xaa, 0x57, 0x71, 0x28, 0x89,
	0x26, 0xb2, 0x1c, 0x93, 0x85, 0xbe, 0x98, 0x24, 0xcc, 0xa5, 0xdf, 0x6b, 0x27, 0xb1, 0x3b, 0x32,
	0x2a, 0x73, 0x90, 0x97, 0x8c, 0xf8, 0x3a, 0x8c, 0x49, 0xe6, 0xb2, 0xeb, 0x50, 0x47, 0xa0, 0x60,
	0x5f, 0x90, 0xde, 0xaf, 0x38, 0xd4, 0x51, 0x6f, 0xc2, 0xab, 0x72, 0xa9, 0xfb, 0x84, 0x3a, 0xcc,
	0x1d, 0x4f, 0x76, 0x11, 0x5a, 0xa2, 0xf0, 0x6f, 0x08, 0xc6, 0x3f, 0x6e, 0xb8, 0x5d, 0xc0, 0xa7,
	0x3f, 0x05, 0x78, 0x1e, 0xf2, 0x5b, 0x3c, 0x03, 0x3f, 0xe6, 0x1c, 0xfb, 0x7c, 0x49, 0xd1, 0xc5,
	0x97, 0x40, 0x6f, 0x7e, 0x09, 0xf4, 0x77, 0xd9, 0x97, 0xe0, 0xbe, 0x13, 0x6d, 0xd8, 0x20, 0xdc,
	0xd9, 0x33, 0xd6, 0xe3, 0x8d, 0x09, 0xd8, 0x95, 0xd3, 0x6e, 0x2b, 0xdb, 0x6f, 0x5b, 0x0c, 0x11,
	0x79, 0xb6, 0x74, 0x88, 0xdc, 0x85, 0xf1, 0x15, 0x52, 0x27, 0x67, 0x07, 0x84, 0x95, 0x95, 0x33,
	0xa4, 0x2b, 0xfb, 0x3e, 0x5c, 0x6a, 0x9f, 0x3f, 0x89, 0x01, 0xd1, 0x19, 0x1a, 0xa0, 0x30, 0xdd,
	0x2b, 0x57, 0x7c, 0xac, 0xed, 0x13, 0x3c, 0x16, 0x67, 0x5b, 0x4f, 0x71, 0xb6, 0x7b, 0x32, 0x57,
	0x8d, 0x60, 0x72, 0xc9, 0x75, 0xbb, 0xbd, 0x4e, 0xcf, 0xa8, 0x24, 0xd2, 0x67, 0x92, 0x49, 0xff,
	0x18, 0xa6, 0x92, 0x8a, 0xa6, 0xc2, 0x1c, 0xcf, 0x40, 0xbe, 0xea, 0xf9, 0x35, 0x12, 0x36, 0x42,
	0xcf, 0xa7, 0xf1, 0x97, 0x49, 0x7e, 0xa5, 0xee, 0xc1, 0xb4, 0xbc, 0xca, 0xff, 0x36, 0x96, 0x9e,
	0x50, 0xee, 0x84, 0x73, 0x47, 0xf1, 0xa7, 0x70, 0xb9, 0x47, 0xf1, 0xd6, 0x78, 0xff, 0x63, 0xf5,
	0xef, 0x11, 0x4c, 0xb6, 0x59, 0xf4, 0x61, 0x53, 0x63, 0x5b, 0x7c, 0xbc, 0xd2, 0x5d, 0x3a, 0xcb,
	0xb2, 0x49, 0x25, 0x3b, 0x24, 0x6b, 0x28, 0xb5, 0x64, 0x65, 0x7a, 0x4b, 0x16, 0x56, 0x21, 0x57,
	0xf5, 0xea, 0x94, 0x84, 0xf1, 0xd1, 0x87, 0xfd, 0x23, 0x2b, 0xc7, 0xbd, 0x4c, 0x3b, 0xb6, 0xa8,
	0x5f, 0x21, 0x98, 0x4a, 0xee, 0x3c, 0x66, 0xff, 0x12, 0x40, 0xeb, 0xce, 0xd0, 0xe4, 0xfe, 0x95,
	0x4e, 0xee, 0xb7, 0xef, 0x14, 0xad, 0x78, 0x5b, 0x0a, 0x4a, 0x2b, 0x6c, 0xa5, 0x6f, 0xce, 0xc3,
	0x79, 0xd1, 0xc7, 0x43, 0x71, 0xc7, 0xc2, 0x5f, 0x22, 0xc8, 0xac, 0x12, 0x8a, 0xb5, 0xbe, 0x87,
	0xed, 0xe4, 0xb5, 0x44, 0x49, 0xa3, 0xbb, 0xea, 0x8d, 0xe7, 0xbf, 0xfe, 0xf1, 0xf5, 0xd0, 0x9b,
	0xf8, 0x2a, 0xbb, 0xf5, 0x68, 0x5d, 0xb7, 0x9e, 0xc8, 0xd8, 0x6b, 0xad, 0xec, 0x19, 0xde, 0x47,
	0x90, 0x65, 0x30, 0x61, 0xa3, 0x6f, 0xea, 0xee, 0x0b, 0x8e, 0x62, 0xa6, 0x0f, 0x10, 0x88, 0xab,
	0x97, 0x79, 0x63, 0x6f, 0xe0, 0xd7, 0x7b, 0x34, 0x86, 0xbf, 0x45, 0x90, 0x13, 0xea, 0x85, 0xcd,
	0xd3, 0xaa, 0xa9, 0x32, 0x78, 0x77, 0xea, 0xca, 0xc1, 0x71, 0x71, 0xba, 0x87, 0x40, 0xe6, 0xc4,
	0xff, 0xbc, 0xc5, 0x29, 0xb5, 0x57, 0x8b, 0x77, 0x50, 0x11, 0x7f, 0x87, 0x20, 0x27, 0x14, 0x65,
	0x40, 0x97, 0x09, 0x92, 0x9a, 0xa6, 0xcb, 0x07, 0xa2, 0xcb, 0x44, 0xd1, 0x92, 0xbb, 0x2c, 0x94,
	0xd2, 0x6c, 0x98, 0x75, 0xfc, 0x03, 0x82, 0x9c, 0xf8, 0x88, 0x0c, 0xe8, 0x38, 0x41, 0xf3, 0xd2,
	0x74, 0xfc, 0xe9, 0xc1, 0x71, 0x51, 0xeb, 0xa1, 0x77, 0xaf, 0x9d, 0xbc, 0x02, 0xbc, 0xb3, 0xd9,
	0xa0, 0x3b, 0x82, 0xa2, 0xc5, 0x54, 0x14, 0xfd, 0x19, 0xc1, 0x18, 0xa3, 0x93, 0xac, 0x61, 0xf8,
	0x4e, 0x4a, 0xf6, 0x25, 0x88, 0xa8, 0x32, 0x7f, 0xa6, 0xd8, 0x98, 0xc4, 0x73, 0xbc, 0xf5, 0x12,
	0x36, 0x53, 0xb4, 0x6e, 0xc8, 0xd2, 0x88, 0x7f, 0x47, 0x30, 0xba, 0xe4, 0xba, 0xf2, 0xc5, 0x6e,
	0xae, 0x6f, 0x27, 0x7d, 0x84, 0x34, 0xcd, 0x56, 0x1a, 0x07, 0xc7, 0x45, 0x6b, 0x80, 0x32, 0x5e,
	0xec, 0x32, 0xf1, 0xf1, 0x66, 0xd5, 0x53, 0x8f, 0xc7, 0x78, 0xf6, 0x37, 0x82, 0x8b, 0x82, 0x04,
	0xf2, 0x90, 0xf3, 0xa9, 0x29, 0x77, 0xb6, 0x39, 0x9f, 0xa3, 0x83, 0xe3, 0xe2, 0xdc, 0x60, 0x99,
	0xec, 0xc3, 0xc4, 0xbb, 0xc5, 0xb7, 0x4f, 0x3b, 0xaf, 0xb1, 0x27, 0xe9, 0xe4, 0x33, 0xfc, 0x23,
	0x82, 0x51, 0xc6, 0x9c, 0xb6, 0xd0, 0x0c, 0x58, 0x6e, 0x1f, 0x55, 0x55, 0x6e, 0x9f, 0x21, 0x32,
	0xa6, 0xe7, 0x2d, 0x3e, 0x8f, 0x89, 0xf5, 0x34, 0xf3, 0xb4, 0xa5, 0x6c, 0x79, 0xed, 0xd1, 0x6a,
	0xcd, 0xa3, 0x9f, 0x6f, 0xad, 0xeb, 0x95, 0x60, 0xd3, 0x10, 0xe5, 0x35, 0xf1, 0xdb, 0xb9, 0x16,
	0x68, 0x35, 0xe2, 0x73, 0xd4, 0x8c, 0x3e, 0x3f, 0xaa, 0xe7, 0xe3, 0xc7, 0xf5, 0x1c, 0x77, 0xbd,
	0xf9, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x57, 0x51, 0x82, 0x9e, 0x74, 0x10, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DeviceServiceClient is the client API for DeviceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeviceServiceClient interface {
	Get(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*Device, error)
	List(ctx context.Context, in *ListDevicesRequest, opts ...grpc.CallOption) (*ListDevicesResponse, error)
	Create(ctx context.Context, in *CreateDeviceRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	Update(ctx context.Context, in *UpdateDeviceRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	Delete(ctx context.Context, in *DeleteDeviceRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	ListCertificates(ctx context.Context, in *ListDeviceCertificatesRequest, opts ...grpc.CallOption) (*ListDeviceCertificatesResponse, error)
	AddCertificate(ctx context.Context, in *AddDeviceCertificateRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	DeleteCertificate(ctx context.Context, in *DeleteDeviceCertificateRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	ListOperations(ctx context.Context, in *ListDeviceOperationsRequest, opts ...grpc.CallOption) (*ListDeviceOperationsResponse, error)
}

type deviceServiceClient struct {
	cc *grpc.ClientConn
}

func NewDeviceServiceClient(cc *grpc.ClientConn) DeviceServiceClient {
	return &deviceServiceClient{cc}
}

func (c *deviceServiceClient) Get(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*Device, error) {
	out := new(Device)
	err := c.cc.Invoke(ctx, "/yandex.cloud.iot.devices.v1.DeviceService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) List(ctx context.Context, in *ListDevicesRequest, opts ...grpc.CallOption) (*ListDevicesResponse, error) {
	out := new(ListDevicesResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.iot.devices.v1.DeviceService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) Create(ctx context.Context, in *CreateDeviceRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.iot.devices.v1.DeviceService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) Update(ctx context.Context, in *UpdateDeviceRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.iot.devices.v1.DeviceService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) Delete(ctx context.Context, in *DeleteDeviceRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.iot.devices.v1.DeviceService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) ListCertificates(ctx context.Context, in *ListDeviceCertificatesRequest, opts ...grpc.CallOption) (*ListDeviceCertificatesResponse, error) {
	out := new(ListDeviceCertificatesResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.iot.devices.v1.DeviceService/ListCertificates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) AddCertificate(ctx context.Context, in *AddDeviceCertificateRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.iot.devices.v1.DeviceService/AddCertificate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) DeleteCertificate(ctx context.Context, in *DeleteDeviceCertificateRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.iot.devices.v1.DeviceService/DeleteCertificate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) ListOperations(ctx context.Context, in *ListDeviceOperationsRequest, opts ...grpc.CallOption) (*ListDeviceOperationsResponse, error) {
	out := new(ListDeviceOperationsResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.iot.devices.v1.DeviceService/ListOperations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeviceServiceServer is the server API for DeviceService service.
type DeviceServiceServer interface {
	Get(context.Context, *GetDeviceRequest) (*Device, error)
	List(context.Context, *ListDevicesRequest) (*ListDevicesResponse, error)
	Create(context.Context, *CreateDeviceRequest) (*operation.Operation, error)
	Update(context.Context, *UpdateDeviceRequest) (*operation.Operation, error)
	Delete(context.Context, *DeleteDeviceRequest) (*operation.Operation, error)
	ListCertificates(context.Context, *ListDeviceCertificatesRequest) (*ListDeviceCertificatesResponse, error)
	AddCertificate(context.Context, *AddDeviceCertificateRequest) (*operation.Operation, error)
	DeleteCertificate(context.Context, *DeleteDeviceCertificateRequest) (*operation.Operation, error)
	ListOperations(context.Context, *ListDeviceOperationsRequest) (*ListDeviceOperationsResponse, error)
}

// UnimplementedDeviceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDeviceServiceServer struct {
}

func (*UnimplementedDeviceServiceServer) Get(ctx context.Context, req *GetDeviceRequest) (*Device, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedDeviceServiceServer) List(ctx context.Context, req *ListDevicesRequest) (*ListDevicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedDeviceServiceServer) Create(ctx context.Context, req *CreateDeviceRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedDeviceServiceServer) Update(ctx context.Context, req *UpdateDeviceRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedDeviceServiceServer) Delete(ctx context.Context, req *DeleteDeviceRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedDeviceServiceServer) ListCertificates(ctx context.Context, req *ListDeviceCertificatesRequest) (*ListDeviceCertificatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCertificates not implemented")
}
func (*UnimplementedDeviceServiceServer) AddCertificate(ctx context.Context, req *AddDeviceCertificateRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCertificate not implemented")
}
func (*UnimplementedDeviceServiceServer) DeleteCertificate(ctx context.Context, req *DeleteDeviceCertificateRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCertificate not implemented")
}
func (*UnimplementedDeviceServiceServer) ListOperations(ctx context.Context, req *ListDeviceOperationsRequest) (*ListDeviceOperationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOperations not implemented")
}

func RegisterDeviceServiceServer(s *grpc.Server, srv DeviceServiceServer) {
	s.RegisterService(&_DeviceService_serviceDesc, srv)
}

func _DeviceService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.iot.devices.v1.DeviceService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Get(ctx, req.(*GetDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDevicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.iot.devices.v1.DeviceService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).List(ctx, req.(*ListDevicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.iot.devices.v1.DeviceService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Create(ctx, req.(*CreateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.iot.devices.v1.DeviceService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Update(ctx, req.(*UpdateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.iot.devices.v1.DeviceService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Delete(ctx, req.(*DeleteDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_ListCertificates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDeviceCertificatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).ListCertificates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.iot.devices.v1.DeviceService/ListCertificates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).ListCertificates(ctx, req.(*ListDeviceCertificatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_AddCertificate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddDeviceCertificateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).AddCertificate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.iot.devices.v1.DeviceService/AddCertificate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).AddCertificate(ctx, req.(*AddDeviceCertificateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_DeleteCertificate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeviceCertificateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).DeleteCertificate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.iot.devices.v1.DeviceService/DeleteCertificate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).DeleteCertificate(ctx, req.(*DeleteDeviceCertificateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_ListOperations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDeviceOperationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).ListOperations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.iot.devices.v1.DeviceService/ListOperations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).ListOperations(ctx, req.(*ListDeviceOperationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeviceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yandex.cloud.iot.devices.v1.DeviceService",
	HandlerType: (*DeviceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _DeviceService_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _DeviceService_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _DeviceService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _DeviceService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _DeviceService_Delete_Handler,
		},
		{
			MethodName: "ListCertificates",
			Handler:    _DeviceService_ListCertificates_Handler,
		},
		{
			MethodName: "AddCertificate",
			Handler:    _DeviceService_AddCertificate_Handler,
		},
		{
			MethodName: "DeleteCertificate",
			Handler:    _DeviceService_DeleteCertificate_Handler,
		},
		{
			MethodName: "ListOperations",
			Handler:    _DeviceService_ListOperations_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yandex/cloud/iot/devices/v1/device_service.proto",
}
