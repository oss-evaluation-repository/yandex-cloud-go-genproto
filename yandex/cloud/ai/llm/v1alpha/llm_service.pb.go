// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.17.3
// source: yandex/cloud/ai/llm/v1alpha/llm_service.proto

package llm

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describe your query: set generation options, context in the instruction part and query in the request.
type InstructRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Possible value for now: `general`.
	Model string `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	// Generation options
	GenerationOptions *GenerationOptions `protobuf:"bytes,2,opt,name=generation_options,json=generationOptions,proto3" json:"generation_options,omitempty"`
	// Text precondition or context of the request.
	// For example, the instruction is "You are the youngest Nobel laureate", the request text is "Tell us about your daily routine".
	//
	// Types that are assignable to Instruction:
	//
	//	*InstructRequest_InstructionText
	Instruction isInstructRequest_Instruction `protobuf_oneof:"Instruction"`
	// Request
	//
	// Types that are assignable to Request:
	//
	//	*InstructRequest_RequestText
	Request isInstructRequest_Request `protobuf_oneof:"Request"`
}

func (x *InstructRequest) Reset() {
	*x = InstructRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstructRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstructRequest) ProtoMessage() {}

func (x *InstructRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstructRequest.ProtoReflect.Descriptor instead.
func (*InstructRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_rawDescGZIP(), []int{0}
}

func (x *InstructRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *InstructRequest) GetGenerationOptions() *GenerationOptions {
	if x != nil {
		return x.GenerationOptions
	}
	return nil
}

func (m *InstructRequest) GetInstruction() isInstructRequest_Instruction {
	if m != nil {
		return m.Instruction
	}
	return nil
}

func (x *InstructRequest) GetInstructionText() string {
	if x, ok := x.GetInstruction().(*InstructRequest_InstructionText); ok {
		return x.InstructionText
	}
	return ""
}

func (m *InstructRequest) GetRequest() isInstructRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *InstructRequest) GetRequestText() string {
	if x, ok := x.GetRequest().(*InstructRequest_RequestText); ok {
		return x.RequestText
	}
	return ""
}

type isInstructRequest_Instruction interface {
	isInstructRequest_Instruction()
}

type InstructRequest_InstructionText struct {
	// Text of the instruction. The total length of [instruction_text] and [request_text] should be equal or less to 2500 tokens.
	InstructionText string `protobuf:"bytes,3,opt,name=instruction_text,json=instructionText,proto3,oneof"`
}

func (*InstructRequest_InstructionText) isInstructRequest_Instruction() {}

type isInstructRequest_Request interface {
	isInstructRequest_Request()
}

type InstructRequest_RequestText struct {
	// Text of the instruction. The total length of [instruction_text] and [request_text] should be equal or less to 2500 tokens.
	RequestText string `protobuf:"bytes,4,opt,name=request_text,json=requestText,proto3,oneof"`
}

func (*InstructRequest_RequestText) isInstructRequest_Request() {}

// Contains a set of alternative responses.
type InstructResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Generated alternatives
	Alternatives []*Alternative `protobuf:"bytes,1,rep,name=alternatives,proto3" json:"alternatives,omitempty"`
	// Number of tokens for instruction text and request text
	NumPromptTokens int64 `protobuf:"varint,2,opt,name=num_prompt_tokens,json=numPromptTokens,proto3" json:"num_prompt_tokens,omitempty"`
}

func (x *InstructResponse) Reset() {
	*x = InstructResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstructResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstructResponse) ProtoMessage() {}

func (x *InstructResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstructResponse.ProtoReflect.Descriptor instead.
func (*InstructResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_rawDescGZIP(), []int{1}
}

func (x *InstructResponse) GetAlternatives() []*Alternative {
	if x != nil {
		return x.Alternatives
	}
	return nil
}

func (x *InstructResponse) GetNumPromptTokens() int64 {
	if x != nil {
		return x.NumPromptTokens
	}
	return 0
}

// Describe your chat query: set generation options, context in the instruction part and message history.
type ChatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Possible value for now: `general`.
	Model string `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	// Generation options
	GenerationOptions *GenerationOptions `protobuf:"bytes,2,opt,name=generation_options,json=generationOptions,proto3" json:"generation_options,omitempty"`
	// Text precondition or context of the request. For example, the instruction may be "You are a helpful assistant".
	//
	// Types that are assignable to Instruction:
	//
	//	*ChatRequest_InstructionText
	Instruction isChatRequest_Instruction `protobuf_oneof:"Instruction"`
	// Message history.
	Messages []*Message `protobuf:"bytes,4,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *ChatRequest) Reset() {
	*x = ChatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRequest) ProtoMessage() {}

func (x *ChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRequest.ProtoReflect.Descriptor instead.
func (*ChatRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_rawDescGZIP(), []int{2}
}

func (x *ChatRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ChatRequest) GetGenerationOptions() *GenerationOptions {
	if x != nil {
		return x.GenerationOptions
	}
	return nil
}

func (m *ChatRequest) GetInstruction() isChatRequest_Instruction {
	if m != nil {
		return m.Instruction
	}
	return nil
}

func (x *ChatRequest) GetInstructionText() string {
	if x, ok := x.GetInstruction().(*ChatRequest_InstructionText); ok {
		return x.InstructionText
	}
	return ""
}

func (x *ChatRequest) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type isChatRequest_Instruction interface {
	isChatRequest_Instruction()
}

type ChatRequest_InstructionText struct {
	// Text of the instruction.
	InstructionText string `protobuf:"bytes,3,opt,name=instruction_text,json=instructionText,proto3,oneof"`
}

func (*ChatRequest_InstructionText) isChatRequest_Instruction() {}

// Contains a model-generated assistant's response for the chat query
type ChatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Assistant's message
	Message *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// Total number of tokens for chat request and chat response
	NumTokens int64 `protobuf:"varint,2,opt,name=num_tokens,json=numTokens,proto3" json:"num_tokens,omitempty"`
}

func (x *ChatResponse) Reset() {
	*x = ChatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatResponse) ProtoMessage() {}

func (x *ChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatResponse.ProtoReflect.Descriptor instead.
func (*ChatResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_rawDescGZIP(), []int{3}
}

func (x *ChatResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ChatResponse) GetNumTokens() int64 {
	if x != nil {
		return x.NumTokens
	}
	return 0
}

// Tokenization request
type TokenizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Possible value for now: `general`.
	Model string `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	// Text for tokenization request
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *TokenizeRequest) Reset() {
	*x = TokenizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenizeRequest) ProtoMessage() {}

func (x *TokenizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenizeRequest.ProtoReflect.Descriptor instead.
func (*TokenizeRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_rawDescGZIP(), []int{4}
}

func (x *TokenizeRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *TokenizeRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// Tokenization response
type TokenizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sequence of tokens in tokenized text
	Tokens []*Token `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *TokenizeResponse) Reset() {
	*x = TokenizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenizeResponse) ProtoMessage() {}

func (x *TokenizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenizeResponse.ProtoReflect.Descriptor instead.
func (*TokenizeResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_rawDescGZIP(), []int{5}
}

func (x *TokenizeResponse) GetTokens() []*Token {
	if x != nil {
		return x.Tokens
	}
	return nil
}

var File_yandex_cloud_ai_llm_v1alpha_llm_service_proto protoreflect.FileDescriptor

var file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61,
	0x69, 0x2f, 0x6c, 0x6c, 0x6d, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6c, 0x6c,
	0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1b, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69,
	0x2e, 0x6c, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a, 0x25, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x69, 0x2f, 0x6c, 0x6c,
	0x6d, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6c, 0x6c, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xfc, 0x01, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0x8a, 0xc8, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x5d, 0x0a, 0x12, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x69, 0x2e, 0x6c, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x11, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x23, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x65, 0x78, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x8c, 0x01, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6c, 0x6c, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x52, 0x0c, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6e,
	0x75, 0x6d, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x8a,
	0x02, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0x8a,
	0xc8, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x5d,
	0x0a, 0x12, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6c, 0x6c, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a,
	0x10, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6c,
	0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x0d, 0x0a, 0x0b,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6d, 0x0a, 0x0c, 0x43,
	0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6c,
	0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e,
	0x75, 0x6d, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x6e, 0x75, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x45, 0x0a, 0x0f, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0x8a, 0xc8,
	0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x22, 0x4e, 0x0a, 0x10, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6c, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x32, 0xa2, 0x02, 0x0a, 0x15, 0x54, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x08,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x2c, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6c, 0x6c, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6c, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a,
	0x22, 0x15, 0x2f, 0x6c, 0x6c, 0x6d, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x30, 0x01, 0x12, 0x7b, 0x0a, 0x04, 0x43, 0x68, 0x61,
	0x74, 0x12, 0x28, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x69, 0x2e, 0x6c, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6c, 0x6c,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01,
	0x2a, 0x22, 0x11, 0x2f, 0x6c, 0x6c, 0x6d, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f,
	0x63, 0x68, 0x61, 0x74, 0x30, 0x01, 0x32, 0x9e, 0x01, 0x0a, 0x10, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x69, 0x7a, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x08,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x12, 0x2c, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6c, 0x6c, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6c, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a,
	0x22, 0x15, 0x2f, 0x6c, 0x6c, 0x6d, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x42, 0x66, 0x0a, 0x1f, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x69, 0x2e, 0x6c,
	0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x69, 0x2f,
	0x6c, 0x6c, 0x6d, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x6c, 0x6c, 0x6d, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_rawDescData = file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_rawDesc
)

func file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_rawDescData)
	})
	return file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_rawDescData
}

var file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_goTypes = []interface{}{
	(*InstructRequest)(nil),   // 0: yandex.cloud.ai.llm.v1alpha.InstructRequest
	(*InstructResponse)(nil),  // 1: yandex.cloud.ai.llm.v1alpha.InstructResponse
	(*ChatRequest)(nil),       // 2: yandex.cloud.ai.llm.v1alpha.ChatRequest
	(*ChatResponse)(nil),      // 3: yandex.cloud.ai.llm.v1alpha.ChatResponse
	(*TokenizeRequest)(nil),   // 4: yandex.cloud.ai.llm.v1alpha.TokenizeRequest
	(*TokenizeResponse)(nil),  // 5: yandex.cloud.ai.llm.v1alpha.TokenizeResponse
	(*GenerationOptions)(nil), // 6: yandex.cloud.ai.llm.v1alpha.GenerationOptions
	(*Alternative)(nil),       // 7: yandex.cloud.ai.llm.v1alpha.Alternative
	(*Message)(nil),           // 8: yandex.cloud.ai.llm.v1alpha.Message
	(*Token)(nil),             // 9: yandex.cloud.ai.llm.v1alpha.Token
}
var file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_depIdxs = []int32{
	6, // 0: yandex.cloud.ai.llm.v1alpha.InstructRequest.generation_options:type_name -> yandex.cloud.ai.llm.v1alpha.GenerationOptions
	7, // 1: yandex.cloud.ai.llm.v1alpha.InstructResponse.alternatives:type_name -> yandex.cloud.ai.llm.v1alpha.Alternative
	6, // 2: yandex.cloud.ai.llm.v1alpha.ChatRequest.generation_options:type_name -> yandex.cloud.ai.llm.v1alpha.GenerationOptions
	8, // 3: yandex.cloud.ai.llm.v1alpha.ChatRequest.messages:type_name -> yandex.cloud.ai.llm.v1alpha.Message
	8, // 4: yandex.cloud.ai.llm.v1alpha.ChatResponse.message:type_name -> yandex.cloud.ai.llm.v1alpha.Message
	9, // 5: yandex.cloud.ai.llm.v1alpha.TokenizeResponse.tokens:type_name -> yandex.cloud.ai.llm.v1alpha.Token
	0, // 6: yandex.cloud.ai.llm.v1alpha.TextGenerationService.Instruct:input_type -> yandex.cloud.ai.llm.v1alpha.InstructRequest
	2, // 7: yandex.cloud.ai.llm.v1alpha.TextGenerationService.Chat:input_type -> yandex.cloud.ai.llm.v1alpha.ChatRequest
	4, // 8: yandex.cloud.ai.llm.v1alpha.TokenizerService.Tokenize:input_type -> yandex.cloud.ai.llm.v1alpha.TokenizeRequest
	1, // 9: yandex.cloud.ai.llm.v1alpha.TextGenerationService.Instruct:output_type -> yandex.cloud.ai.llm.v1alpha.InstructResponse
	3, // 10: yandex.cloud.ai.llm.v1alpha.TextGenerationService.Chat:output_type -> yandex.cloud.ai.llm.v1alpha.ChatResponse
	5, // 11: yandex.cloud.ai.llm.v1alpha.TokenizerService.Tokenize:output_type -> yandex.cloud.ai.llm.v1alpha.TokenizeResponse
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_init() }
func file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_init() {
	if File_yandex_cloud_ai_llm_v1alpha_llm_service_proto != nil {
		return
	}
	file_yandex_cloud_ai_llm_v1alpha_llm_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstructRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstructResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*InstructRequest_InstructionText)(nil),
		(*InstructRequest_RequestText)(nil),
	}
	file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ChatRequest_InstructionText)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_ai_llm_v1alpha_llm_service_proto = out.File
	file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_rawDesc = nil
	file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_goTypes = nil
	file_yandex_cloud_ai_llm_v1alpha_llm_service_proto_depIdxs = nil
}
