// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/ai/vision/v1/text_detection.proto

package vision

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TextAnnotation struct {
	// Pages of the recognized file.
	//
	// For JPEG and PNG files contains only 1 page.
	Pages                []*Page  `protobuf:"bytes,1,rep,name=pages,proto3" json:"pages,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextAnnotation) Reset()         { *m = TextAnnotation{} }
func (m *TextAnnotation) String() string { return proto.CompactTextString(m) }
func (*TextAnnotation) ProtoMessage()    {}
func (*TextAnnotation) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4d5be2606a8f8f0, []int{0}
}

func (m *TextAnnotation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextAnnotation.Unmarshal(m, b)
}
func (m *TextAnnotation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextAnnotation.Marshal(b, m, deterministic)
}
func (m *TextAnnotation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextAnnotation.Merge(m, src)
}
func (m *TextAnnotation) XXX_Size() int {
	return xxx_messageInfo_TextAnnotation.Size(m)
}
func (m *TextAnnotation) XXX_DiscardUnknown() {
	xxx_messageInfo_TextAnnotation.DiscardUnknown(m)
}

var xxx_messageInfo_TextAnnotation proto.InternalMessageInfo

func (m *TextAnnotation) GetPages() []*Page {
	if m != nil {
		return m.Pages
	}
	return nil
}

type Page struct {
	// Page width in pixels.
	Width int64 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	// Page height in pixels.
	Height int64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// Recognized text blocks in this page.
	Blocks               []*Block `protobuf:"bytes,3,rep,name=blocks,proto3" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Page) Reset()         { *m = Page{} }
func (m *Page) String() string { return proto.CompactTextString(m) }
func (*Page) ProtoMessage()    {}
func (*Page) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4d5be2606a8f8f0, []int{1}
}

func (m *Page) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Page.Unmarshal(m, b)
}
func (m *Page) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Page.Marshal(b, m, deterministic)
}
func (m *Page) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Page.Merge(m, src)
}
func (m *Page) XXX_Size() int {
	return xxx_messageInfo_Page.Size(m)
}
func (m *Page) XXX_DiscardUnknown() {
	xxx_messageInfo_Page.DiscardUnknown(m)
}

var xxx_messageInfo_Page proto.InternalMessageInfo

func (m *Page) GetWidth() int64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Page) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Page) GetBlocks() []*Block {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type Block struct {
	// Area on the page where the text block is located.
	BoundingBox *Polygon `protobuf:"bytes,1,opt,name=bounding_box,json=boundingBox,proto3" json:"bounding_box,omitempty"`
	// Recognized lines in this block.
	Lines                []*Line  `protobuf:"bytes,2,rep,name=lines,proto3" json:"lines,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4d5be2606a8f8f0, []int{2}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetBoundingBox() *Polygon {
	if m != nil {
		return m.BoundingBox
	}
	return nil
}

func (m *Block) GetLines() []*Line {
	if m != nil {
		return m.Lines
	}
	return nil
}

type Line struct {
	// Area on the page where the line is located.
	BoundingBox *Polygon `protobuf:"bytes,1,opt,name=bounding_box,json=boundingBox,proto3" json:"bounding_box,omitempty"`
	// Recognized words in this line.
	Words []*Word `protobuf:"bytes,2,rep,name=words,proto3" json:"words,omitempty"`
	// Confidence of the OCR results for the line. Range [0, 1].
	Confidence           float64  `protobuf:"fixed64,3,opt,name=confidence,proto3" json:"confidence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Line) Reset()         { *m = Line{} }
func (m *Line) String() string { return proto.CompactTextString(m) }
func (*Line) ProtoMessage()    {}
func (*Line) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4d5be2606a8f8f0, []int{3}
}

func (m *Line) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Line.Unmarshal(m, b)
}
func (m *Line) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Line.Marshal(b, m, deterministic)
}
func (m *Line) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Line.Merge(m, src)
}
func (m *Line) XXX_Size() int {
	return xxx_messageInfo_Line.Size(m)
}
func (m *Line) XXX_DiscardUnknown() {
	xxx_messageInfo_Line.DiscardUnknown(m)
}

var xxx_messageInfo_Line proto.InternalMessageInfo

func (m *Line) GetBoundingBox() *Polygon {
	if m != nil {
		return m.BoundingBox
	}
	return nil
}

func (m *Line) GetWords() []*Word {
	if m != nil {
		return m.Words
	}
	return nil
}

func (m *Line) GetConfidence() float64 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

type Word struct {
	// Area on the page where the word is located.
	BoundingBox *Polygon `protobuf:"bytes,1,opt,name=bounding_box,json=boundingBox,proto3" json:"bounding_box,omitempty"`
	// Recognized word value.
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// Confidence of the OCR results for the word. Range [0, 1].
	Confidence float64 `protobuf:"fixed64,3,opt,name=confidence,proto3" json:"confidence,omitempty"`
	// A list of detected languages together with confidence.
	Languages            []*Word_DetectedLanguage `protobuf:"bytes,4,rep,name=languages,proto3" json:"languages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Word) Reset()         { *m = Word{} }
func (m *Word) String() string { return proto.CompactTextString(m) }
func (*Word) ProtoMessage()    {}
func (*Word) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4d5be2606a8f8f0, []int{4}
}

func (m *Word) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Word.Unmarshal(m, b)
}
func (m *Word) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Word.Marshal(b, m, deterministic)
}
func (m *Word) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Word.Merge(m, src)
}
func (m *Word) XXX_Size() int {
	return xxx_messageInfo_Word.Size(m)
}
func (m *Word) XXX_DiscardUnknown() {
	xxx_messageInfo_Word.DiscardUnknown(m)
}

var xxx_messageInfo_Word proto.InternalMessageInfo

func (m *Word) GetBoundingBox() *Polygon {
	if m != nil {
		return m.BoundingBox
	}
	return nil
}

func (m *Word) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Word) GetConfidence() float64 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func (m *Word) GetLanguages() []*Word_DetectedLanguage {
	if m != nil {
		return m.Languages
	}
	return nil
}

type Word_DetectedLanguage struct {
	// Detected language code.
	LanguageCode string `protobuf:"bytes,1,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	// Confidence of detected language. Range [0, 1].
	Confidence           float64  `protobuf:"fixed64,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Word_DetectedLanguage) Reset()         { *m = Word_DetectedLanguage{} }
func (m *Word_DetectedLanguage) String() string { return proto.CompactTextString(m) }
func (*Word_DetectedLanguage) ProtoMessage()    {}
func (*Word_DetectedLanguage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4d5be2606a8f8f0, []int{4, 0}
}

func (m *Word_DetectedLanguage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Word_DetectedLanguage.Unmarshal(m, b)
}
func (m *Word_DetectedLanguage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Word_DetectedLanguage.Marshal(b, m, deterministic)
}
func (m *Word_DetectedLanguage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Word_DetectedLanguage.Merge(m, src)
}
func (m *Word_DetectedLanguage) XXX_Size() int {
	return xxx_messageInfo_Word_DetectedLanguage.Size(m)
}
func (m *Word_DetectedLanguage) XXX_DiscardUnknown() {
	xxx_messageInfo_Word_DetectedLanguage.DiscardUnknown(m)
}

var xxx_messageInfo_Word_DetectedLanguage proto.InternalMessageInfo

func (m *Word_DetectedLanguage) GetLanguageCode() string {
	if m != nil {
		return m.LanguageCode
	}
	return ""
}

func (m *Word_DetectedLanguage) GetConfidence() float64 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func init() {
	proto.RegisterType((*TextAnnotation)(nil), "yandex.cloud.ai.vision.v1.TextAnnotation")
	proto.RegisterType((*Page)(nil), "yandex.cloud.ai.vision.v1.Page")
	proto.RegisterType((*Block)(nil), "yandex.cloud.ai.vision.v1.Block")
	proto.RegisterType((*Line)(nil), "yandex.cloud.ai.vision.v1.Line")
	proto.RegisterType((*Word)(nil), "yandex.cloud.ai.vision.v1.Word")
	proto.RegisterType((*Word_DetectedLanguage)(nil), "yandex.cloud.ai.vision.v1.Word.DetectedLanguage")
}

func init() {
	proto.RegisterFile("yandex/cloud/ai/vision/v1/text_detection.proto", fileDescriptor_a4d5be2606a8f8f0)
}

var fileDescriptor_a4d5be2606a8f8f0 = []byte{
	// 422 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0x51, 0x8b, 0xd3, 0x40,
	0x10, 0xc7, 0x49, 0x9b, 0x16, 0x3a, 0x3d, 0x45, 0x16, 0x91, 0x78, 0x0f, 0x1a, 0xe2, 0x4b, 0x11,
	0x6e, 0xe3, 0x9d, 0x08, 0x82, 0x4f, 0xd6, 0x53, 0x5f, 0x0e, 0x91, 0x45, 0x38, 0xf0, 0xa5, 0x24,
	0xd9, 0x71, 0xb3, 0x98, 0xdb, 0x29, 0xc9, 0x26, 0x97, 0xfb, 0x00, 0x7e, 0x13, 0x9f, 0xfc, 0x94,
	0x92, 0xdd, 0x16, 0xa5, 0xd0, 0xeb, 0x3d, 0xdc, 0xdb, 0xce, 0xe4, 0x37, 0x33, 0xff, 0x3f, 0x99,
	0x01, 0x7e, 0x93, 0x19, 0x89, 0x7d, 0x5a, 0x54, 0xd4, 0xca, 0x34, 0xd3, 0x69, 0xa7, 0x1b, 0x4d,
	0x26, 0xed, 0x4e, 0x53, 0x8b, 0xbd, 0x5d, 0x49, 0xb4, 0x58, 0x58, 0x4d, 0x86, 0xaf, 0x6b, 0xb2,
	0xc4, 0x9e, 0x7a, 0x9e, 0x3b, 0x9e, 0x67, 0x9a, 0x7b, 0x9e, 0x77, 0xa7, 0xc7, 0x2f, 0xf7, 0xb7,
	0x5a, 0xd7, 0xfa, 0x4a, 0x5b, 0xdd, 0x61, 0xe3, 0xdb, 0x24, 0x9f, 0xe1, 0xe1, 0x37, 0xec, 0xed,
	0x7b, 0x63, 0xc8, 0x66, 0x43, 0x7b, 0xf6, 0x06, 0x26, 0xeb, 0x4c, 0x61, 0x13, 0x05, 0xf1, 0x78,
	0x31, 0x3f, 0x7b, 0xce, 0xf7, 0x0e, 0xe2, 0x5f, 0x33, 0x85, 0xc2, 0xd3, 0x89, 0x81, 0x70, 0x08,
	0xd9, 0x63, 0x98, 0x5c, 0x6b, 0x69, 0xcb, 0x28, 0x88, 0x83, 0xc5, 0x58, 0xf8, 0x80, 0x3d, 0x81,
	0x69, 0x89, 0x5a, 0x95, 0x36, 0x1a, 0xb9, 0xf4, 0x26, 0x62, 0x6f, 0x61, 0x9a, 0x57, 0x54, 0xfc,
	0x6c, 0xa2, 0xb1, 0x9b, 0x16, 0xdf, 0x32, 0x6d, 0x39, 0x80, 0x62, 0xc3, 0x27, 0xbf, 0x02, 0x98,
	0xb8, 0x0c, 0xfb, 0x08, 0x47, 0x39, 0xb5, 0x46, 0x6a, 0xa3, 0x56, 0x39, 0xf5, 0x6e, 0xf0, 0xfc,
	0x2c, 0xb9, 0x4d, 0x37, 0x55, 0x37, 0x8a, 0x8c, 0x98, 0x6f, 0xeb, 0x96, 0xd4, 0x0f, 0xbe, 0x2b,
	0x6d, 0xb0, 0x89, 0x46, 0x07, 0x7d, 0x5f, 0x68, 0x83, 0xc2, 0xd3, 0xc9, 0xef, 0x00, 0xc2, 0x21,
	0xbe, 0x47, 0x19, 0xd7, 0x54, 0xcb, 0xbb, 0xc8, 0xb8, 0xa4, 0x5a, 0x0a, 0x4f, 0xb3, 0x67, 0x00,
	0x05, 0x99, 0x1f, 0x5a, 0xa2, 0x29, 0x30, 0x1a, 0xc7, 0xc1, 0x22, 0x10, 0xff, 0x65, 0x92, 0x3f,
	0x23, 0x08, 0x07, 0xfe, 0xbe, 0x64, 0x32, 0x08, 0x87, 0xb5, 0x74, 0xbf, 0x73, 0x26, 0xdc, 0xfb,
	0x90, 0x06, 0xf6, 0x05, 0x66, 0x55, 0x66, 0x54, 0xeb, 0xb6, 0x2b, 0x74, 0xf6, 0x5e, 0x1d, 0xb0,
	0xc7, 0xcf, 0xdd, 0xda, 0xa3, 0xbc, 0xd8, 0x14, 0x8a, 0x7f, 0x2d, 0x8e, 0x2f, 0xe1, 0xd1, 0xee,
	0x67, 0xf6, 0x02, 0x1e, 0x6c, 0x81, 0x55, 0x41, 0x12, 0x9d, 0xbf, 0x99, 0x38, 0xda, 0x26, 0x3f,
	0x90, 0xc4, 0x1d, 0xa1, 0xa3, 0x5d, 0xa1, 0xcb, 0x4f, 0xdf, 0xcf, 0x95, 0xb6, 0x65, 0x9b, 0xf3,
	0x82, 0xae, 0x52, 0xaf, 0xf0, 0xc4, 0x5f, 0x93, 0xa2, 0x13, 0x85, 0xc6, 0xdd, 0x4e, 0xba, 0xf7,
	0xcc, 0xde, 0xf9, 0x57, 0x3e, 0x75, 0xdc, 0xeb, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xdd, 0xde,
	0x1d, 0xad, 0xdc, 0x03, 0x00, 0x00,
}
