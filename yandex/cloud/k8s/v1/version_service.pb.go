// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/k8s/v1/version_service.proto

package k8s

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListVersionsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListVersionsRequest) Reset()         { *m = ListVersionsRequest{} }
func (m *ListVersionsRequest) String() string { return proto.CompactTextString(m) }
func (*ListVersionsRequest) ProtoMessage()    {}
func (*ListVersionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fdec834344f5858f, []int{0}
}

func (m *ListVersionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVersionsRequest.Unmarshal(m, b)
}
func (m *ListVersionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVersionsRequest.Marshal(b, m, deterministic)
}
func (m *ListVersionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVersionsRequest.Merge(m, src)
}
func (m *ListVersionsRequest) XXX_Size() int {
	return xxx_messageInfo_ListVersionsRequest.Size(m)
}
func (m *ListVersionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVersionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListVersionsRequest proto.InternalMessageInfo

type ListVersionsResponse struct {
	AvailableVersions    []*AvailableVersions `protobuf:"bytes,1,rep,name=available_versions,json=availableVersions,proto3" json:"available_versions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListVersionsResponse) Reset()         { *m = ListVersionsResponse{} }
func (m *ListVersionsResponse) String() string { return proto.CompactTextString(m) }
func (*ListVersionsResponse) ProtoMessage()    {}
func (*ListVersionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fdec834344f5858f, []int{1}
}

func (m *ListVersionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVersionsResponse.Unmarshal(m, b)
}
func (m *ListVersionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVersionsResponse.Marshal(b, m, deterministic)
}
func (m *ListVersionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVersionsResponse.Merge(m, src)
}
func (m *ListVersionsResponse) XXX_Size() int {
	return xxx_messageInfo_ListVersionsResponse.Size(m)
}
func (m *ListVersionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVersionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListVersionsResponse proto.InternalMessageInfo

func (m *ListVersionsResponse) GetAvailableVersions() []*AvailableVersions {
	if m != nil {
		return m.AvailableVersions
	}
	return nil
}

type AvailableVersions struct {
	ReleaseChannel       ReleaseChannel `protobuf:"varint,1,opt,name=release_channel,json=releaseChannel,proto3,enum=yandex.cloud.k8s.v1.ReleaseChannel" json:"release_channel,omitempty"`
	Versions             []string       `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AvailableVersions) Reset()         { *m = AvailableVersions{} }
func (m *AvailableVersions) String() string { return proto.CompactTextString(m) }
func (*AvailableVersions) ProtoMessage()    {}
func (*AvailableVersions) Descriptor() ([]byte, []int) {
	return fileDescriptor_fdec834344f5858f, []int{2}
}

func (m *AvailableVersions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailableVersions.Unmarshal(m, b)
}
func (m *AvailableVersions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailableVersions.Marshal(b, m, deterministic)
}
func (m *AvailableVersions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailableVersions.Merge(m, src)
}
func (m *AvailableVersions) XXX_Size() int {
	return xxx_messageInfo_AvailableVersions.Size(m)
}
func (m *AvailableVersions) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailableVersions.DiscardUnknown(m)
}

var xxx_messageInfo_AvailableVersions proto.InternalMessageInfo

func (m *AvailableVersions) GetReleaseChannel() ReleaseChannel {
	if m != nil {
		return m.ReleaseChannel
	}
	return ReleaseChannel_RELEASE_CHANNEL_UNSPECIFIED
}

func (m *AvailableVersions) GetVersions() []string {
	if m != nil {
		return m.Versions
	}
	return nil
}

func init() {
	proto.RegisterType((*ListVersionsRequest)(nil), "yandex.cloud.k8s.v1.ListVersionsRequest")
	proto.RegisterType((*ListVersionsResponse)(nil), "yandex.cloud.k8s.v1.ListVersionsResponse")
	proto.RegisterType((*AvailableVersions)(nil), "yandex.cloud.k8s.v1.AvailableVersions")
}

func init() {
	proto.RegisterFile("yandex/cloud/k8s/v1/version_service.proto", fileDescriptor_fdec834344f5858f)
}

var fileDescriptor_fdec834344f5858f = []byte{
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xb1, 0x4f, 0xf3, 0x30,
	0x10, 0xc5, 0xd5, 0xaf, 0x9f, 0x10, 0x18, 0xa9, 0xa8, 0x2e, 0x88, 0xaa, 0x53, 0x29, 0x12, 0x4a,
	0x87, 0xda, 0x6a, 0x59, 0x2a, 0x75, 0x02, 0xd6, 0x4e, 0x41, 0x74, 0x80, 0xa1, 0x72, 0xd3, 0x53,
	0x6a, 0xc5, 0xb1, 0x83, 0x2f, 0x89, 0x60, 0xe0, 0x7f, 0x47, 0xc4, 0x21, 0x52, 0xc0, 0x03, 0xe3,
	0x9d, 0x7f, 0x77, 0xf7, 0xfc, 0x1e, 0x99, 0xbe, 0x0b, 0xbd, 0x87, 0x37, 0x1e, 0x29, 0x53, 0xec,
	0x79, 0xb2, 0x44, 0x5e, 0xce, 0x79, 0x09, 0x16, 0xa5, 0xd1, 0x5b, 0x04, 0x5b, 0xca, 0x08, 0x58,
	0x66, 0x4d, 0x6e, 0xe8, 0xc0, 0xa1, 0xac, 0x42, 0x59, 0xb2, 0x44, 0x56, 0xce, 0x47, 0x57, 0xbe,
	0xf9, 0x48, 0x15, 0x98, 0x83, 0x75, 0x73, 0x93, 0x0b, 0x32, 0x58, 0x4b, 0xcc, 0x37, 0x6e, 0x29,
	0x86, 0xf0, 0x5a, 0x00, 0xe6, 0x93, 0x94, 0x9c, 0xb7, 0xdb, 0x98, 0x19, 0x8d, 0x40, 0x9f, 0x08,
	0x15, 0xa5, 0x90, 0x4a, 0xec, 0x14, 0x6c, 0x6b, 0x25, 0x38, 0xec, 0x8c, 0xbb, 0xc1, 0xe9, 0xe2,
	0x86, 0x79, 0x34, 0xb0, 0xbb, 0x6f, 0xbc, 0xd9, 0xd5, 0x17, 0x3f, 0x5b, 0x93, 0x0f, 0xd2, 0xff,
	0xc5, 0xd1, 0x35, 0x39, 0xb3, 0xa0, 0x40, 0x20, 0x6c, 0xa3, 0x83, 0xd0, 0x1a, 0xd4, 0xb0, 0x33,
	0xee, 0x04, 0xbd, 0xc5, 0xb5, 0xf7, 0x50, 0xe8, 0xd8, 0x07, 0x87, 0x86, 0x3d, 0xdb, 0xaa, 0xe9,
	0x88, 0x1c, 0x37, 0x7a, 0xff, 0x8d, 0xbb, 0xc1, 0x49, 0xd8, 0xd4, 0x8b, 0x94, 0xf4, 0xea, 0xab,
	0x8f, 0xce, 0x54, 0xfa, 0x42, 0xfe, 0x7f, 0xfd, 0x9f, 0x06, 0xde, 0x53, 0x1e, 0xc7, 0x46, 0xd3,
	0x3f, 0x90, 0xce, 0xc4, 0xfb, 0x0d, 0xb9, 0x6c, 0xb1, 0x22, 0x93, 0x35, 0xff, 0xbc, 0x8a, 0x65,
	0x7e, 0x28, 0x76, 0x2c, 0x32, 0x29, 0x77, 0xcc, 0xcc, 0x85, 0x17, 0x9b, 0x59, 0x0c, 0xba, 0xca,
	0x8c, 0x7b, 0x52, 0x5d, 0x25, 0x4b, 0xdc, 0x1d, 0x55, 0xcf, 0xb7, 0x9f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x1f, 0xd6, 0xbd, 0x4c, 0x37, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VersionServiceClient is the client API for VersionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VersionServiceClient interface {
	List(ctx context.Context, in *ListVersionsRequest, opts ...grpc.CallOption) (*ListVersionsResponse, error)
}

type versionServiceClient struct {
	cc *grpc.ClientConn
}

func NewVersionServiceClient(cc *grpc.ClientConn) VersionServiceClient {
	return &versionServiceClient{cc}
}

func (c *versionServiceClient) List(ctx context.Context, in *ListVersionsRequest, opts ...grpc.CallOption) (*ListVersionsResponse, error) {
	out := new(ListVersionsResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.k8s.v1.VersionService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VersionServiceServer is the server API for VersionService service.
type VersionServiceServer interface {
	List(context.Context, *ListVersionsRequest) (*ListVersionsResponse, error)
}

// UnimplementedVersionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVersionServiceServer struct {
}

func (*UnimplementedVersionServiceServer) List(ctx context.Context, req *ListVersionsRequest) (*ListVersionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterVersionServiceServer(s *grpc.Server, srv VersionServiceServer) {
	s.RegisterService(&_VersionService_serviceDesc, srv)
}

func _VersionService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListVersionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersionServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.k8s.v1.VersionService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersionServiceServer).List(ctx, req.(*ListVersionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VersionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yandex.cloud.k8s.v1.VersionService",
	HandlerType: (*VersionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _VersionService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yandex/cloud/k8s/v1/version_service.proto",
}
