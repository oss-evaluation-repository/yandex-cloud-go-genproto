// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.17.3
// source: yandex/cloud/datasphere/v2/jobs/jobs.proto

package datasphere

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JobStatus int32

const (
	JobStatus_JOB_STATUS_UNSPECIFIED JobStatus = 0
	JobStatus_CREATING               JobStatus = 1
	JobStatus_EXECUTING              JobStatus = 2
	JobStatus_UPLOADING_OUTPUT       JobStatus = 3
	JobStatus_SUCCESS                JobStatus = 4
	JobStatus_ERROR                  JobStatus = 5
	JobStatus_CANCELLED              JobStatus = 6
)

// Enum value maps for JobStatus.
var (
	JobStatus_name = map[int32]string{
		0: "JOB_STATUS_UNSPECIFIED",
		1: "CREATING",
		2: "EXECUTING",
		3: "UPLOADING_OUTPUT",
		4: "SUCCESS",
		5: "ERROR",
		6: "CANCELLED",
	}
	JobStatus_value = map[string]int32{
		"JOB_STATUS_UNSPECIFIED": 0,
		"CREATING":               1,
		"EXECUTING":              2,
		"UPLOADING_OUTPUT":       3,
		"SUCCESS":                4,
		"ERROR":                  5,
		"CANCELLED":              6,
	}
)

func (x JobStatus) Enum() *JobStatus {
	p := new(JobStatus)
	*p = x
	return p
}

func (x JobStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_datasphere_v2_jobs_jobs_proto_enumTypes[0].Descriptor()
}

func (JobStatus) Type() protoreflect.EnumType {
	return &file_yandex_cloud_datasphere_v2_jobs_jobs_proto_enumTypes[0]
}

func (x JobStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobStatus.Descriptor instead.
func (JobStatus) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDescGZIP(), []int{0}
}

// Job parameters.
type JobParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of input files.
	InputFiles []*File `protobuf:"bytes,1,rep,name=input_files,json=inputFiles,proto3" json:"input_files,omitempty"`
	// List of output files descriptions.
	OutputFiles []*FileDesc `protobuf:"bytes,2,rep,name=output_files,json=outputFiles,proto3" json:"output_files,omitempty"`
	// List of DataSphere S3 mount ids.
	S3MountIds []string `protobuf:"bytes,3,rep,name=s3_mount_ids,json=s3MountIds,proto3" json:"s3_mount_ids,omitempty"`
	// List of DataSphere dataset ids.
	DatasetIds []string `protobuf:"bytes,4,rep,name=dataset_ids,json=datasetIds,proto3" json:"dataset_ids,omitempty"`
	// Job run command.
	Cmd string `protobuf:"bytes,5,opt,name=cmd,proto3" json:"cmd,omitempty"`
	// Job environment description.
	Env *Environment `protobuf:"bytes,6,opt,name=env,proto3" json:"env,omitempty"`
	// Should project disk be attached to VM.
	AttachProjectDisk bool `protobuf:"varint,7,opt,name=attach_project_disk,json=attachProjectDisk,proto3" json:"attach_project_disk,omitempty"`
	// VM specification.
	CloudInstanceType *CloudInstanceType `protobuf:"bytes,8,opt,name=cloud_instance_type,json=cloudInstanceType,proto3" json:"cloud_instance_type,omitempty"`
}

func (x *JobParameters) Reset() {
	*x = JobParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobParameters) ProtoMessage() {}

func (x *JobParameters) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobParameters.ProtoReflect.Descriptor instead.
func (*JobParameters) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDescGZIP(), []int{0}
}

func (x *JobParameters) GetInputFiles() []*File {
	if x != nil {
		return x.InputFiles
	}
	return nil
}

func (x *JobParameters) GetOutputFiles() []*FileDesc {
	if x != nil {
		return x.OutputFiles
	}
	return nil
}

func (x *JobParameters) GetS3MountIds() []string {
	if x != nil {
		return x.S3MountIds
	}
	return nil
}

func (x *JobParameters) GetDatasetIds() []string {
	if x != nil {
		return x.DatasetIds
	}
	return nil
}

func (x *JobParameters) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *JobParameters) GetEnv() *Environment {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *JobParameters) GetAttachProjectDisk() bool {
	if x != nil {
		return x.AttachProjectDisk
	}
	return false
}

func (x *JobParameters) GetCloudInstanceType() *CloudInstanceType {
	if x != nil {
		return x.CloudInstanceType
	}
	return nil
}

type CloudInstanceType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of DataSphere VM configuration.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CloudInstanceType) Reset() {
	*x = CloudInstanceType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudInstanceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudInstanceType) ProtoMessage() {}

func (x *CloudInstanceType) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudInstanceType.ProtoReflect.Descriptor instead.
func (*CloudInstanceType) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDescGZIP(), []int{1}
}

func (x *CloudInstanceType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desc *FileDesc `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc,omitempty"`
	// SHA256 of the file.
	Sha256 string `protobuf:"bytes,2,opt,name=sha256,proto3" json:"sha256,omitempty"`
	// File size in bytes.
	SizeBytes int64 `protobuf:"varint,3,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDescGZIP(), []int{2}
}

func (x *File) GetDesc() *FileDesc {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *File) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

func (x *File) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

type StorageFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File *File `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	// File URL.
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *StorageFile) Reset() {
	*x = StorageFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageFile) ProtoMessage() {}

func (x *StorageFile) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageFile.ProtoReflect.Descriptor instead.
func (*StorageFile) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDescGZIP(), []int{3}
}

func (x *StorageFile) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *StorageFile) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type FileDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Path of the file on filesystem.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Variable to use in cmd substitution.
	Var string `protobuf:"bytes,2,opt,name=var,proto3" json:"var,omitempty"`
}

func (x *FileDesc) Reset() {
	*x = FileDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDesc) ProtoMessage() {}

func (x *FileDesc) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDesc.ProtoReflect.Descriptor instead.
func (*FileDesc) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDescGZIP(), []int{4}
}

func (x *FileDesc) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileDesc) GetVar() string {
	if x != nil {
		return x.Var
	}
	return ""
}

type Environment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Environment variables.
	Vars map[string]string `protobuf:"bytes,1,rep,name=vars,proto3" json:"vars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Types that are assignable to DockerImage:
	//
	//	*Environment_DockerImageResourceId
	//	*Environment_DockerImageSpec
	DockerImage isEnvironment_DockerImage `protobuf_oneof:"docker_image"`
	PythonEnv   *PythonEnv                `protobuf:"bytes,4,opt,name=python_env,json=pythonEnv,proto3" json:"python_env,omitempty"`
}

func (x *Environment) Reset() {
	*x = Environment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Environment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Environment) ProtoMessage() {}

func (x *Environment) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Environment.ProtoReflect.Descriptor instead.
func (*Environment) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDescGZIP(), []int{5}
}

func (x *Environment) GetVars() map[string]string {
	if x != nil {
		return x.Vars
	}
	return nil
}

func (m *Environment) GetDockerImage() isEnvironment_DockerImage {
	if m != nil {
		return m.DockerImage
	}
	return nil
}

func (x *Environment) GetDockerImageResourceId() string {
	if x, ok := x.GetDockerImage().(*Environment_DockerImageResourceId); ok {
		return x.DockerImageResourceId
	}
	return ""
}

func (x *Environment) GetDockerImageSpec() *DockerImageSpec {
	if x, ok := x.GetDockerImage().(*Environment_DockerImageSpec); ok {
		return x.DockerImageSpec
	}
	return nil
}

func (x *Environment) GetPythonEnv() *PythonEnv {
	if x != nil {
		return x.PythonEnv
	}
	return nil
}

type isEnvironment_DockerImage interface {
	isEnvironment_DockerImage()
}

type Environment_DockerImageResourceId struct {
	// DS docker image id.
	DockerImageResourceId string `protobuf:"bytes,2,opt,name=docker_image_resource_id,json=dockerImageResourceId,proto3,oneof"`
}

type Environment_DockerImageSpec struct {
	DockerImageSpec *DockerImageSpec `protobuf:"bytes,3,opt,name=docker_image_spec,json=dockerImageSpec,proto3,oneof"`
}

func (*Environment_DockerImageResourceId) isEnvironment_DockerImage() {}

func (*Environment_DockerImageSpec) isEnvironment_DockerImage() {}

type DockerImageSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Docker image URL.
	ImageUrl string `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// Username for container registry.
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// Password for container registry.
	//
	// Types that are assignable to Password:
	//
	//	*DockerImageSpec_PasswordPlainText
	//	*DockerImageSpec_PasswordDsSecretName
	Password isDockerImageSpec_Password `protobuf_oneof:"password"`
}

func (x *DockerImageSpec) Reset() {
	*x = DockerImageSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerImageSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerImageSpec) ProtoMessage() {}

func (x *DockerImageSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerImageSpec.ProtoReflect.Descriptor instead.
func (*DockerImageSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDescGZIP(), []int{6}
}

func (x *DockerImageSpec) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *DockerImageSpec) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (m *DockerImageSpec) GetPassword() isDockerImageSpec_Password {
	if m != nil {
		return m.Password
	}
	return nil
}

func (x *DockerImageSpec) GetPasswordPlainText() string {
	if x, ok := x.GetPassword().(*DockerImageSpec_PasswordPlainText); ok {
		return x.PasswordPlainText
	}
	return ""
}

func (x *DockerImageSpec) GetPasswordDsSecretName() string {
	if x, ok := x.GetPassword().(*DockerImageSpec_PasswordDsSecretName); ok {
		return x.PasswordDsSecretName
	}
	return ""
}

type isDockerImageSpec_Password interface {
	isDockerImageSpec_Password()
}

type DockerImageSpec_PasswordPlainText struct {
	// Plaintext password.
	PasswordPlainText string `protobuf:"bytes,3,opt,name=password_plain_text,json=passwordPlainText,proto3,oneof"`
}

type DockerImageSpec_PasswordDsSecretName struct {
	// ID of DataSphere secret containing password.
	PasswordDsSecretName string `protobuf:"bytes,4,opt,name=password_ds_secret_name,json=passwordDsSecretName,proto3,oneof"`
}

func (*DockerImageSpec_PasswordPlainText) isDockerImageSpec_Password() {}

func (*DockerImageSpec_PasswordDsSecretName) isDockerImageSpec_Password() {}

type PythonEnv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Conda YAML.
	CondaYaml string `protobuf:"bytes,1,opt,name=conda_yaml,json=condaYaml,proto3" json:"conda_yaml,omitempty"`
	// List of local modules descriptions.
	LocalModules []*File `protobuf:"bytes,2,rep,name=local_modules,json=localModules,proto3" json:"local_modules,omitempty"`
}

func (x *PythonEnv) Reset() {
	*x = PythonEnv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PythonEnv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PythonEnv) ProtoMessage() {}

func (x *PythonEnv) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PythonEnv.ProtoReflect.Descriptor instead.
func (*PythonEnv) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDescGZIP(), []int{7}
}

func (x *PythonEnv) GetCondaYaml() string {
	if x != nil {
		return x.CondaYaml
	}
	return ""
}

func (x *PythonEnv) GetLocalModules() []*File {
	if x != nil {
		return x.LocalModules
	}
	return nil
}

// Instance of the job.
type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the job.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the job.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the job.
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	// Creation timestamp of the job.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Finish timestamp of the job.
	FinishedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	// Status of the job.
	Status JobStatus `protobuf:"varint,6,opt,name=status,proto3,enum=yandex.cloud.datasphere.v2.jobs.JobStatus" json:"status,omitempty"`
	// Config of the job, copied from configuration file.
	Config string `protobuf:"bytes,7,opt,name=config,proto3" json:"config,omitempty"`
	// ID of the user who created the job.
	CreatedById string `protobuf:"bytes,8,opt,name=created_by_id,json=createdById,proto3" json:"created_by_id,omitempty"`
	// ID of the project.
	ProjectId     string         `protobuf:"bytes,9,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	JobParameters *JobParameters `protobuf:"bytes,10,opt,name=job_parameters,json=jobParameters,proto3" json:"job_parameters,omitempty"`
	// Job data expiration timestamp.
	DataExpiresAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=data_expires_at,json=dataExpiresAt,proto3" json:"data_expires_at,omitempty"`
	// Marks if the job data has been cleared.
	DataCleared bool `protobuf:"varint,12,opt,name=data_cleared,json=dataCleared,proto3" json:"data_cleared,omitempty"`
	// Output files of the job.
	OutputFiles []*File `protobuf:"bytes,13,rep,name=output_files,json=outputFiles,proto3" json:"output_files,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDescGZIP(), []int{8}
}

func (x *Job) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Job) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Job) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Job) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Job) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

func (x *Job) GetStatus() JobStatus {
	if x != nil {
		return x.Status
	}
	return JobStatus_JOB_STATUS_UNSPECIFIED
}

func (x *Job) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *Job) GetCreatedById() string {
	if x != nil {
		return x.CreatedById
	}
	return ""
}

func (x *Job) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Job) GetJobParameters() *JobParameters {
	if x != nil {
		return x.JobParameters
	}
	return nil
}

func (x *Job) GetDataExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DataExpiresAt
	}
	return nil
}

func (x *Job) GetDataCleared() bool {
	if x != nil {
		return x.DataCleared
	}
	return false
}

func (x *Job) GetOutputFiles() []*File {
	if x != nil {
		return x.OutputFiles
	}
	return nil
}

type JobResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Execution return code.
	ReturnCode int64 `protobuf:"varint,1,opt,name=return_code,json=returnCode,proto3" json:"return_code,omitempty"`
}

func (x *JobResult) Reset() {
	*x = JobResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobResult) ProtoMessage() {}

func (x *JobResult) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobResult.ProtoReflect.Descriptor instead.
func (*JobResult) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDescGZIP(), []int{9}
}

func (x *JobResult) GetReturnCode() int64 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

var File_yandex_cloud_datasphere_v2_jobs_jobs_proto protoreflect.FileDescriptor

var file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x6a, 0x6f, 0x62,
	0x73, 0x2f, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xce,
	0x03, 0x0a, 0x0d, 0x4a, 0x6f, 0x62, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x46, 0x0a, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e,
	0x76, 0x32, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0a, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x6a, 0x6f, 0x62, 0x73,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x33, 0x5f, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x33,
	0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3e, 0x0a, 0x03, 0x65,
	0x6e, 0x76, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x70, 0x68, 0x65,
	0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x2e, 0x0a, 0x13, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x69,
	0x73, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x62, 0x0a, 0x13, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x70, 0x68, 0x65,
	0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x11, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x27, 0x0a, 0x11, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7c, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x3d, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x6a, 0x6f, 0x62, 0x73,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x69, 0x7a,
	0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x5a, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x76, 0x32,
	0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x22, 0x30, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x76, 0x61, 0x72, 0x22, 0x88, 0x03, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e,
	0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73,
	0x12, 0x39, 0x0a, 0x18, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x15, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x5e, 0x0a, 0x11, 0x64,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65,
	0x2e, 0x76, 0x32, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x6f, 0x63, 0x6b,
	0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x49, 0x0a, 0x0a, 0x70,
	0x79, 0x74, 0x68, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x6a, 0x6f, 0x62,
	0x73, 0x2e, 0x50, 0x79, 0x74, 0x68, 0x6f, 0x6e, 0x45, 0x6e, 0x76, 0x52, 0x09, 0x70, 0x79, 0x74,
	0x68, 0x6f, 0x6e, 0x45, 0x6e, 0x76, 0x1a, 0x37, 0x0a, 0x09, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42,
	0x0e, 0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22,
	0xc1, 0x01, 0x0a, 0x0f, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x11, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x37,
	0x0a, 0x17, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x64, 0x73, 0x5f, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x14, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x44, 0x73, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0x76, 0x0a, 0x09, 0x50, 0x79, 0x74, 0x68, 0x6f, 0x6e, 0x45, 0x6e, 0x76,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x59, 0x61, 0x6d, 0x6c, 0x12,
	0x4a, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65,
	0x2e, 0x76, 0x32, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0c, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x22, 0xdc, 0x04, 0x0a, 0x03,
	0x4a, 0x6f, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x42, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x76, 0x32,
	0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x22, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x55, 0x0a, 0x0e, 0x6a, 0x6f, 0x62, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x70,
	0x68, 0x65, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4a, 0x6f, 0x62,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0d, 0x6a, 0x6f, 0x62, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x42, 0x0a, 0x0f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d,
	0x64, 0x61, 0x74, 0x61, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64,
	0x12, 0x48, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65,
	0x2e, 0x76, 0x32, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x2c, 0x0a, 0x09, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x2a, 0x81, 0x01, 0x0a, 0x09, 0x4a, 0x6f, 0x62,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x16, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12,
	0x14, 0x0a, 0x10, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x55, 0x54,
	0x50, 0x55, 0x54, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x0d, 0x0a,
	0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x42, 0x7b, 0x0a, 0x23,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x6a,
	0x6f, 0x62, 0x73, 0x42, 0x04, 0x4a, 0x6f, 0x62, 0x73, 0x5a, 0x4e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x6a, 0x6f, 0x62, 0x73, 0x3b, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDescOnce sync.Once
	file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDescData = file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDesc
)

func file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDescGZIP() []byte {
	file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDescData)
	})
	return file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDescData
}

var file_yandex_cloud_datasphere_v2_jobs_jobs_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_yandex_cloud_datasphere_v2_jobs_jobs_proto_goTypes = []interface{}{
	(JobStatus)(0),                // 0: yandex.cloud.datasphere.v2.jobs.JobStatus
	(*JobParameters)(nil),         // 1: yandex.cloud.datasphere.v2.jobs.JobParameters
	(*CloudInstanceType)(nil),     // 2: yandex.cloud.datasphere.v2.jobs.CloudInstanceType
	(*File)(nil),                  // 3: yandex.cloud.datasphere.v2.jobs.File
	(*StorageFile)(nil),           // 4: yandex.cloud.datasphere.v2.jobs.StorageFile
	(*FileDesc)(nil),              // 5: yandex.cloud.datasphere.v2.jobs.FileDesc
	(*Environment)(nil),           // 6: yandex.cloud.datasphere.v2.jobs.Environment
	(*DockerImageSpec)(nil),       // 7: yandex.cloud.datasphere.v2.jobs.DockerImageSpec
	(*PythonEnv)(nil),             // 8: yandex.cloud.datasphere.v2.jobs.PythonEnv
	(*Job)(nil),                   // 9: yandex.cloud.datasphere.v2.jobs.Job
	(*JobResult)(nil),             // 10: yandex.cloud.datasphere.v2.jobs.JobResult
	nil,                           // 11: yandex.cloud.datasphere.v2.jobs.Environment.VarsEntry
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
}
var file_yandex_cloud_datasphere_v2_jobs_jobs_proto_depIdxs = []int32{
	3,  // 0: yandex.cloud.datasphere.v2.jobs.JobParameters.input_files:type_name -> yandex.cloud.datasphere.v2.jobs.File
	5,  // 1: yandex.cloud.datasphere.v2.jobs.JobParameters.output_files:type_name -> yandex.cloud.datasphere.v2.jobs.FileDesc
	6,  // 2: yandex.cloud.datasphere.v2.jobs.JobParameters.env:type_name -> yandex.cloud.datasphere.v2.jobs.Environment
	2,  // 3: yandex.cloud.datasphere.v2.jobs.JobParameters.cloud_instance_type:type_name -> yandex.cloud.datasphere.v2.jobs.CloudInstanceType
	5,  // 4: yandex.cloud.datasphere.v2.jobs.File.desc:type_name -> yandex.cloud.datasphere.v2.jobs.FileDesc
	3,  // 5: yandex.cloud.datasphere.v2.jobs.StorageFile.file:type_name -> yandex.cloud.datasphere.v2.jobs.File
	11, // 6: yandex.cloud.datasphere.v2.jobs.Environment.vars:type_name -> yandex.cloud.datasphere.v2.jobs.Environment.VarsEntry
	7,  // 7: yandex.cloud.datasphere.v2.jobs.Environment.docker_image_spec:type_name -> yandex.cloud.datasphere.v2.jobs.DockerImageSpec
	8,  // 8: yandex.cloud.datasphere.v2.jobs.Environment.python_env:type_name -> yandex.cloud.datasphere.v2.jobs.PythonEnv
	3,  // 9: yandex.cloud.datasphere.v2.jobs.PythonEnv.local_modules:type_name -> yandex.cloud.datasphere.v2.jobs.File
	12, // 10: yandex.cloud.datasphere.v2.jobs.Job.created_at:type_name -> google.protobuf.Timestamp
	12, // 11: yandex.cloud.datasphere.v2.jobs.Job.finished_at:type_name -> google.protobuf.Timestamp
	0,  // 12: yandex.cloud.datasphere.v2.jobs.Job.status:type_name -> yandex.cloud.datasphere.v2.jobs.JobStatus
	1,  // 13: yandex.cloud.datasphere.v2.jobs.Job.job_parameters:type_name -> yandex.cloud.datasphere.v2.jobs.JobParameters
	12, // 14: yandex.cloud.datasphere.v2.jobs.Job.data_expires_at:type_name -> google.protobuf.Timestamp
	3,  // 15: yandex.cloud.datasphere.v2.jobs.Job.output_files:type_name -> yandex.cloud.datasphere.v2.jobs.File
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_yandex_cloud_datasphere_v2_jobs_jobs_proto_init() }
func file_yandex_cloud_datasphere_v2_jobs_jobs_proto_init() {
	if File_yandex_cloud_datasphere_v2_jobs_jobs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudInstanceType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Environment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerImageSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PythonEnv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Environment_DockerImageResourceId)(nil),
		(*Environment_DockerImageSpec)(nil),
	}
	file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*DockerImageSpec_PasswordPlainText)(nil),
		(*DockerImageSpec_PasswordDsSecretName)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_datasphere_v2_jobs_jobs_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_datasphere_v2_jobs_jobs_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_datasphere_v2_jobs_jobs_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_datasphere_v2_jobs_jobs_proto_msgTypes,
	}.Build()
	File_yandex_cloud_datasphere_v2_jobs_jobs_proto = out.File
	file_yandex_cloud_datasphere_v2_jobs_jobs_proto_rawDesc = nil
	file_yandex_cloud_datasphere_v2_jobs_jobs_proto_goTypes = nil
	file_yandex_cloud_datasphere_v2_jobs_jobs_proto_depIdxs = nil
}
