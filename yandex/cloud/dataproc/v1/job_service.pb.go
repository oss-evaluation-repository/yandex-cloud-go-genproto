// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/dataproc/v1/job_service.proto

package dataproc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetJobRequest struct {
	// Required. ID of the Dataproc cluster.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Required. ID of the Dataproc job to return.
	JobId                string   `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJobRequest) Reset()         { *m = GetJobRequest{} }
func (m *GetJobRequest) String() string { return proto.CompactTextString(m) }
func (*GetJobRequest) ProtoMessage()    {}
func (*GetJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17500a3fdd75bbf9, []int{0}
}

func (m *GetJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobRequest.Unmarshal(m, b)
}
func (m *GetJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobRequest.Marshal(b, m, deterministic)
}
func (m *GetJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobRequest.Merge(m, src)
}
func (m *GetJobRequest) XXX_Size() int {
	return xxx_messageInfo_GetJobRequest.Size(m)
}
func (m *GetJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobRequest proto.InternalMessageInfo

func (m *GetJobRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *GetJobRequest) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type ListJobsRequest struct {
	// Required. ID of the cluster to list Dataproc jobs of.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The maximum number of results per page that should be returned. If the number of available
	// results is larger than `page_size`, the service returns a `next_page_token` that can be used
	// to get the next page of results in subsequent ListJobs requests.
	// Acceptable values are 0 to 1000, inclusive. Default value: 100.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. Set `page_token` to the `next_page_token` returned by a previous ListJobs
	// request to get the next page of results.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// String that describes a display filter.
	Filter               string   `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListJobsRequest) Reset()         { *m = ListJobsRequest{} }
func (m *ListJobsRequest) String() string { return proto.CompactTextString(m) }
func (*ListJobsRequest) ProtoMessage()    {}
func (*ListJobsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17500a3fdd75bbf9, []int{1}
}

func (m *ListJobsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListJobsRequest.Unmarshal(m, b)
}
func (m *ListJobsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListJobsRequest.Marshal(b, m, deterministic)
}
func (m *ListJobsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListJobsRequest.Merge(m, src)
}
func (m *ListJobsRequest) XXX_Size() int {
	return xxx_messageInfo_ListJobsRequest.Size(m)
}
func (m *ListJobsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListJobsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListJobsRequest proto.InternalMessageInfo

func (m *ListJobsRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *ListJobsRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListJobsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListJobsRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

type ListJobsResponse struct {
	// Requested list of Dataproc jobs.
	Jobs []*Job `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	// This token allows you to get the next page of results for ListJobs requests,
	// if the number of results is larger than `page_size` specified in the request.
	// To get the next page, specify the value of `next_page_token` as a value for
	// the `page_token` parameter in the next ListClusters request. Subsequent ListClusters
	// requests will have their own `next_page_token` to continue paging through the results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListJobsResponse) Reset()         { *m = ListJobsResponse{} }
func (m *ListJobsResponse) String() string { return proto.CompactTextString(m) }
func (*ListJobsResponse) ProtoMessage()    {}
func (*ListJobsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_17500a3fdd75bbf9, []int{2}
}

func (m *ListJobsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListJobsResponse.Unmarshal(m, b)
}
func (m *ListJobsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListJobsResponse.Marshal(b, m, deterministic)
}
func (m *ListJobsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListJobsResponse.Merge(m, src)
}
func (m *ListJobsResponse) XXX_Size() int {
	return xxx_messageInfo_ListJobsResponse.Size(m)
}
func (m *ListJobsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListJobsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListJobsResponse proto.InternalMessageInfo

func (m *ListJobsResponse) GetJobs() []*Job {
	if m != nil {
		return m.Jobs
	}
	return nil
}

func (m *ListJobsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type CreateJobRequest struct {
	// Required. ID of the cluster to create Dataproc job in.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Optional. Name of the job.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to JobSpec:
	//	*CreateJobRequest_MapreduceJob
	//	*CreateJobRequest_SparkJob
	//	*CreateJobRequest_PysparkJob
	//	*CreateJobRequest_HiveJob
	JobSpec              isCreateJobRequest_JobSpec `protobuf_oneof:"job_spec"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CreateJobRequest) Reset()         { *m = CreateJobRequest{} }
func (m *CreateJobRequest) String() string { return proto.CompactTextString(m) }
func (*CreateJobRequest) ProtoMessage()    {}
func (*CreateJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17500a3fdd75bbf9, []int{3}
}

func (m *CreateJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateJobRequest.Unmarshal(m, b)
}
func (m *CreateJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateJobRequest.Marshal(b, m, deterministic)
}
func (m *CreateJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateJobRequest.Merge(m, src)
}
func (m *CreateJobRequest) XXX_Size() int {
	return xxx_messageInfo_CreateJobRequest.Size(m)
}
func (m *CreateJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateJobRequest proto.InternalMessageInfo

func (m *CreateJobRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *CreateJobRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type isCreateJobRequest_JobSpec interface {
	isCreateJobRequest_JobSpec()
}

type CreateJobRequest_MapreduceJob struct {
	MapreduceJob *MapreduceJob `protobuf:"bytes,3,opt,name=mapreduce_job,json=mapreduceJob,proto3,oneof"`
}

type CreateJobRequest_SparkJob struct {
	SparkJob *SparkJob `protobuf:"bytes,4,opt,name=spark_job,json=sparkJob,proto3,oneof"`
}

type CreateJobRequest_PysparkJob struct {
	PysparkJob *PysparkJob `protobuf:"bytes,5,opt,name=pyspark_job,json=pysparkJob,proto3,oneof"`
}

type CreateJobRequest_HiveJob struct {
	HiveJob *HiveJob `protobuf:"bytes,6,opt,name=hive_job,json=hiveJob,proto3,oneof"`
}

func (*CreateJobRequest_MapreduceJob) isCreateJobRequest_JobSpec() {}

func (*CreateJobRequest_SparkJob) isCreateJobRequest_JobSpec() {}

func (*CreateJobRequest_PysparkJob) isCreateJobRequest_JobSpec() {}

func (*CreateJobRequest_HiveJob) isCreateJobRequest_JobSpec() {}

func (m *CreateJobRequest) GetJobSpec() isCreateJobRequest_JobSpec {
	if m != nil {
		return m.JobSpec
	}
	return nil
}

func (m *CreateJobRequest) GetMapreduceJob() *MapreduceJob {
	if x, ok := m.GetJobSpec().(*CreateJobRequest_MapreduceJob); ok {
		return x.MapreduceJob
	}
	return nil
}

func (m *CreateJobRequest) GetSparkJob() *SparkJob {
	if x, ok := m.GetJobSpec().(*CreateJobRequest_SparkJob); ok {
		return x.SparkJob
	}
	return nil
}

func (m *CreateJobRequest) GetPysparkJob() *PysparkJob {
	if x, ok := m.GetJobSpec().(*CreateJobRequest_PysparkJob); ok {
		return x.PysparkJob
	}
	return nil
}

func (m *CreateJobRequest) GetHiveJob() *HiveJob {
	if x, ok := m.GetJobSpec().(*CreateJobRequest_HiveJob); ok {
		return x.HiveJob
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CreateJobRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CreateJobRequest_MapreduceJob)(nil),
		(*CreateJobRequest_SparkJob)(nil),
		(*CreateJobRequest_PysparkJob)(nil),
		(*CreateJobRequest_HiveJob)(nil),
	}
}

type CreateJobMetadata struct {
	// ID of the Dataproc cluster.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// ID of the Dataproc job.
	JobId                string   `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateJobMetadata) Reset()         { *m = CreateJobMetadata{} }
func (m *CreateJobMetadata) String() string { return proto.CompactTextString(m) }
func (*CreateJobMetadata) ProtoMessage()    {}
func (*CreateJobMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_17500a3fdd75bbf9, []int{4}
}

func (m *CreateJobMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateJobMetadata.Unmarshal(m, b)
}
func (m *CreateJobMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateJobMetadata.Marshal(b, m, deterministic)
}
func (m *CreateJobMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateJobMetadata.Merge(m, src)
}
func (m *CreateJobMetadata) XXX_Size() int {
	return xxx_messageInfo_CreateJobMetadata.Size(m)
}
func (m *CreateJobMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateJobMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_CreateJobMetadata proto.InternalMessageInfo

func (m *CreateJobMetadata) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *CreateJobMetadata) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func init() {
	proto.RegisterType((*GetJobRequest)(nil), "yandex.cloud.dataproc.v1.GetJobRequest")
	proto.RegisterType((*ListJobsRequest)(nil), "yandex.cloud.dataproc.v1.ListJobsRequest")
	proto.RegisterType((*ListJobsResponse)(nil), "yandex.cloud.dataproc.v1.ListJobsResponse")
	proto.RegisterType((*CreateJobRequest)(nil), "yandex.cloud.dataproc.v1.CreateJobRequest")
	proto.RegisterType((*CreateJobMetadata)(nil), "yandex.cloud.dataproc.v1.CreateJobMetadata")
}

func init() {
	proto.RegisterFile("yandex/cloud/dataproc/v1/job_service.proto", fileDescriptor_17500a3fdd75bbf9)
}

var fileDescriptor_17500a3fdd75bbf9 = []byte{
	// 733 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0x4d, 0x6f, 0xd3, 0x4a,
	0x14, 0x7d, 0x6e, 0xd2, 0xbc, 0xe4, 0xb6, 0x55, 0xfb, 0x66, 0x15, 0x45, 0xaf, 0x7a, 0xad, 0x1f,
	0x6a, 0xda, 0xd0, 0xd8, 0x71, 0x50, 0x11, 0x1f, 0x2d, 0x12, 0x41, 0xa8, 0x6d, 0x44, 0xa0, 0x72,
	0x58, 0x51, 0x55, 0xd1, 0xd8, 0x1e, 0x52, 0xa7, 0x89, 0xc7, 0x78, 0x26, 0x51, 0x9b, 0xd2, 0x0d,
	0x1b, 0xa4, 0x2e, 0xd8, 0xb0, 0xe2, 0x17, 0xb0, 0x86, 0x3f, 0xd1, 0x6e, 0x81, 0xbf, 0xc0, 0x82,
	0x35, 0x4b, 0x56, 0xc8, 0x63, 0xa7, 0xf9, 0x50, 0x5c, 0x85, 0xdd, 0x9d, 0xdc, 0xe3, 0x73, 0xcf,
	0x9c, 0x3b, 0xf7, 0x06, 0x72, 0x27, 0xd8, 0xb1, 0xc8, 0xb1, 0x6a, 0x36, 0x69, 0xdb, 0x52, 0x2d,
	0xcc, 0xb1, 0xeb, 0x51, 0x53, 0xed, 0x68, 0x6a, 0x83, 0x1a, 0x35, 0x46, 0xbc, 0x8e, 0x6d, 0x12,
	0xc5, 0xf5, 0x28, 0xa7, 0x28, 0x1d, 0x60, 0x15, 0x81, 0x55, 0x7a, 0x58, 0xa5, 0xa3, 0x65, 0xfe,
	0xad, 0x53, 0x5a, 0x6f, 0x12, 0x15, 0xbb, 0xb6, 0x8a, 0x1d, 0x87, 0x72, 0xcc, 0x6d, 0xea, 0xb0,
	0xe0, 0xbb, 0x8c, 0x7c, 0x5d, 0x8d, 0x10, 0xb3, 0x32, 0x84, 0xa1, 0x2e, 0xf1, 0x04, 0x45, 0x3f,
	0x0a, 0x71, 0x8b, 0x43, 0xb8, 0x0e, 0x6e, 0xda, 0xd6, 0x60, 0x7a, 0x69, 0x28, 0xed, 0xcb, 0x19,
	0x21, 0x90, 0x31, 0xcc, 0x6d, 0x13, 0x5e, 0xa6, 0x86, 0x4e, 0x5e, 0xb5, 0x09, 0xe3, 0xe8, 0x26,
	0x80, 0xd9, 0x6c, 0x33, 0x4e, 0xbc, 0x9a, 0x6d, 0xa5, 0xa5, 0x25, 0x69, 0x35, 0x55, 0x9a, 0xfd,
	0x71, 0xa1, 0x49, 0xe7, 0x97, 0x5a, 0x7c, 0x73, 0x6b, 0xa3, 0xa0, 0xa7, 0xc2, 0xfc, 0xae, 0x85,
	0xfe, 0x87, 0x84, 0xef, 0x8b, 0x6d, 0xa5, 0xa7, 0xc6, 0x00, 0xa7, 0x1b, 0xd4, 0xd8, 0xb5, 0xe4,
	0x4f, 0x12, 0xcc, 0x3f, 0xb1, 0x99, 0x5f, 0x84, 0xf5, 0xaa, 0x64, 0xc7, 0x54, 0x49, 0x8e, 0xab,
	0x90, 0x85, 0x94, 0x8b, 0xeb, 0xa4, 0xc6, 0xec, 0x2e, 0x11, 0x45, 0x62, 0x25, 0xf8, 0x75, 0xa1,
	0x25, 0x36, 0xb7, 0xb4, 0x42, 0xa1, 0xa0, 0x27, 0xfd, 0x64, 0xd5, 0xee, 0x12, 0xb4, 0x0a, 0x20,
	0x80, 0x9c, 0x1e, 0x11, 0x27, 0x1d, 0x13, 0x8c, 0xa9, 0xf3, 0x4b, 0x6d, 0x5a, 0x20, 0x75, 0xc1,
	0xf2, 0xdc, 0xcf, 0x21, 0x19, 0x12, 0x2f, 0xed, 0x26, 0x27, 0x5e, 0x3a, 0x2e, 0x50, 0x70, 0x7e,
	0x79, 0xc5, 0x17, 0x66, 0xe4, 0x16, 0x2c, 0xf4, 0x25, 0x33, 0x97, 0x3a, 0x8c, 0x20, 0x0d, 0xe2,
	0x0d, 0x6a, 0xb0, 0xb4, 0xb4, 0x14, 0x5b, 0x9d, 0x29, 0x2e, 0x2a, 0x51, 0xed, 0x57, 0x7c, 0x37,
	0x05, 0x14, 0xad, 0xc0, 0xbc, 0x43, 0x8e, 0x79, 0x6d, 0x40, 0x99, 0x30, 0x4a, 0x9f, 0xf3, 0x7f,
	0xde, 0xeb, 0x49, 0x92, 0x3f, 0xc4, 0x60, 0xe1, 0x91, 0x47, 0x30, 0x27, 0x03, 0x9d, 0x98, 0xd8,
	0xa3, 0x0d, 0x88, 0x3b, 0xb8, 0x45, 0xc2, 0x1e, 0x2c, 0xff, 0xbc, 0xd0, 0x16, 0x5f, 0xef, 0xe3,
	0x7c, 0xf7, 0x60, 0x3f, 0x8f, 0xf3, 0xdd, 0x42, 0xfe, 0xee, 0xc1, 0xa9, 0xb6, 0x7e, 0x5b, 0x3b,
	0xdb, 0x0f, 0x4f, 0xba, 0x80, 0xa3, 0x0a, 0xcc, 0xb5, 0xb0, 0xeb, 0x11, 0xab, 0x6d, 0x92, 0x5a,
	0x83, 0x1a, 0xc2, 0xb4, 0x99, 0xe2, 0x4a, 0xf4, 0xc5, 0x2a, 0x3d, 0x78, 0x99, 0x1a, 0x3b, 0x7f,
	0xe9, 0xb3, 0xad, 0x81, 0x33, 0x7a, 0x08, 0x29, 0xe6, 0x62, 0xef, 0x48, 0x50, 0xc5, 0x05, 0x95,
	0x1c, 0x4d, 0x55, 0xf5, 0xa1, 0x01, 0x4d, 0x92, 0x85, 0x31, 0xda, 0x86, 0x19, 0xf7, 0xa4, 0x4f,
	0x32, 0x2d, 0x48, 0x6e, 0x44, 0x93, 0xec, 0x9d, 0xb0, 0x3e, 0x0d, 0xb8, 0x57, 0x27, 0xf4, 0x00,
	0x92, 0x87, 0x76, 0x27, 0xb8, 0x55, 0x42, 0xb0, 0x2c, 0x47, 0xb3, 0xec, 0xd8, 0x9d, 0xf0, 0x42,
	0x7f, 0x1f, 0x06, 0x61, 0x09, 0x20, 0x29, 0xe6, 0xdd, 0x25, 0xa6, 0x8c, 0xe1, 0x9f, 0xab, 0xd6,
	0x54, 0x08, 0xc7, 0xfe, 0xa7, 0x7f, 0x36, 0x25, 0xff, 0x8d, 0x4c, 0x49, 0x72, 0x64, 0x42, 0x8a,
	0x5f, 0x62, 0x00, 0x65, 0x6a, 0x54, 0x83, 0xf5, 0x82, 0xde, 0x49, 0x10, 0xf7, 0x5f, 0x1f, 0x5a,
	0x8b, 0x16, 0x3d, 0x32, 0x50, 0x99, 0xdc, 0x24, 0xd0, 0xe0, 0x21, 0xcb, 0xea, 0x9b, 0x6f, 0xdf,
	0xdf, 0x4f, 0xad, 0xa1, 0xec, 0xd0, 0xf2, 0x09, 0xf5, 0x32, 0xf5, 0xb4, 0x7f, 0xb3, 0x33, 0x55,
	0x3c, 0xe3, 0x8f, 0x12, 0x24, 0x02, 0x0f, 0xd0, 0x35, 0x75, 0x46, 0x1f, 0x70, 0x66, 0xc4, 0xf3,
	0xfe, 0xea, 0x79, 0xd6, 0x8b, 0xe4, 0xa7, 0x9f, 0xbf, 0xe6, 0xd2, 0xe3, 0x0c, 0x8e, 0x95, 0xa9,
	0x21, 0x64, 0xae, 0xcb, 0x93, 0xca, 0xbc, 0x27, 0xe5, 0xd0, 0x5b, 0x09, 0x62, 0xdb, 0x84, 0xa3,
	0x6c, 0xb4, 0xcc, 0xa1, 0x75, 0x97, 0xb9, 0x7e, 0x8c, 0xe5, 0x3b, 0x42, 0x43, 0x11, 0x15, 0x26,
	0xd4, 0xa0, 0x9e, 0x06, 0x9d, 0x3e, 0x2b, 0x55, 0x4a, 0xf1, 0xbd, 0x9d, 0x72, 0xf5, 0xc5, 0xe3,
	0xba, 0xcd, 0x0f, 0xdb, 0x86, 0x62, 0xd2, 0x96, 0x1a, 0x94, 0xca, 0x07, 0xdb, 0xb8, 0x4e, 0xf3,
	0x75, 0xe2, 0x88, 0x2d, 0xac, 0x46, 0xfd, 0x23, 0xdc, 0xef, 0xc5, 0x46, 0x42, 0x00, 0x6f, 0xfd,
	0x0e, 0x00, 0x00, 0xff, 0xff, 0xcf, 0xe8, 0x3b, 0x7d, 0xa1, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JobServiceClient is the client API for JobService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JobServiceClient interface {
	// Retrieves a list of jobs for Dataproc cluster.
	List(ctx context.Context, in *ListJobsRequest, opts ...grpc.CallOption) (*ListJobsResponse, error)
	// Creates a job for Dataproc cluster.
	Create(ctx context.Context, in *CreateJobRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	// Returns the specified Dataproc cluster.
	Get(ctx context.Context, in *GetJobRequest, opts ...grpc.CallOption) (*Job, error)
}

type jobServiceClient struct {
	cc *grpc.ClientConn
}

func NewJobServiceClient(cc *grpc.ClientConn) JobServiceClient {
	return &jobServiceClient{cc}
}

func (c *jobServiceClient) List(ctx context.Context, in *ListJobsRequest, opts ...grpc.CallOption) (*ListJobsResponse, error) {
	out := new(ListJobsResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.dataproc.v1.JobService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) Create(ctx context.Context, in *CreateJobRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.dataproc.v1.JobService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) Get(ctx context.Context, in *GetJobRequest, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := c.cc.Invoke(ctx, "/yandex.cloud.dataproc.v1.JobService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobServiceServer is the server API for JobService service.
type JobServiceServer interface {
	// Retrieves a list of jobs for Dataproc cluster.
	List(context.Context, *ListJobsRequest) (*ListJobsResponse, error)
	// Creates a job for Dataproc cluster.
	Create(context.Context, *CreateJobRequest) (*operation.Operation, error)
	// Returns the specified Dataproc cluster.
	Get(context.Context, *GetJobRequest) (*Job, error)
}

// UnimplementedJobServiceServer can be embedded to have forward compatible implementations.
type UnimplementedJobServiceServer struct {
}

func (*UnimplementedJobServiceServer) List(ctx context.Context, req *ListJobsRequest) (*ListJobsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedJobServiceServer) Create(ctx context.Context, req *CreateJobRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedJobServiceServer) Get(ctx context.Context, req *GetJobRequest) (*Job, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterJobServiceServer(s *grpc.Server, srv JobServiceServer) {
	s.RegisterService(&_JobService_serviceDesc, srv)
}

func _JobService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListJobsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.dataproc.v1.JobService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).List(ctx, req.(*ListJobsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.dataproc.v1.JobService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).Create(ctx, req.(*CreateJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.dataproc.v1.JobService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).Get(ctx, req.(*GetJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _JobService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yandex.cloud.dataproc.v1.JobService",
	HandlerType: (*JobServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _JobService_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _JobService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _JobService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yandex/cloud/dataproc/v1/job_service.proto",
}
