// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/dataproc/v1/cluster.proto

package dataproc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Cluster_Status int32

const (
	// Cluster state is unknown.
	Cluster_STATUS_UNKNOWN Cluster_Status = 0
	// Cluster is being created.
	Cluster_CREATING Cluster_Status = 1
	// Cluster is running normally.
	Cluster_RUNNING Cluster_Status = 2
	// Cluster encountered a problem and cannot operate.
	Cluster_ERROR Cluster_Status = 3
	// Cluster is stopping.
	Cluster_STOPPING Cluster_Status = 4
	// Cluster stopped.
	Cluster_STOPPED Cluster_Status = 5
	// Cluster is starting.
	Cluster_STARTING Cluster_Status = 6
)

var Cluster_Status_name = map[int32]string{
	0: "STATUS_UNKNOWN",
	1: "CREATING",
	2: "RUNNING",
	3: "ERROR",
	4: "STOPPING",
	5: "STOPPED",
	6: "STARTING",
}

var Cluster_Status_value = map[string]int32{
	"STATUS_UNKNOWN": 0,
	"CREATING":       1,
	"RUNNING":        2,
	"ERROR":          3,
	"STOPPING":       4,
	"STOPPED":        5,
	"STARTING":       6,
}

func (x Cluster_Status) String() string {
	return proto.EnumName(Cluster_Status_name, int32(x))
}

func (Cluster_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_62f0592e5d92313c, []int{0, 0}
}

type HadoopConfig_Service int32

const (
	HadoopConfig_SERVICE_UNSPECIFIED HadoopConfig_Service = 0
	HadoopConfig_HDFS                HadoopConfig_Service = 1
	HadoopConfig_YARN                HadoopConfig_Service = 2
	HadoopConfig_MAPREDUCE           HadoopConfig_Service = 3
	HadoopConfig_HIVE                HadoopConfig_Service = 4
	HadoopConfig_TEZ                 HadoopConfig_Service = 5
	HadoopConfig_ZOOKEEPER           HadoopConfig_Service = 6
	HadoopConfig_HBASE               HadoopConfig_Service = 7
	HadoopConfig_SQOOP               HadoopConfig_Service = 8
	HadoopConfig_FLUME               HadoopConfig_Service = 9
	HadoopConfig_SPARK               HadoopConfig_Service = 10
	HadoopConfig_ZEPPELIN            HadoopConfig_Service = 11
	HadoopConfig_OOZIE               HadoopConfig_Service = 12
)

var HadoopConfig_Service_name = map[int32]string{
	0:  "SERVICE_UNSPECIFIED",
	1:  "HDFS",
	2:  "YARN",
	3:  "MAPREDUCE",
	4:  "HIVE",
	5:  "TEZ",
	6:  "ZOOKEEPER",
	7:  "HBASE",
	8:  "SQOOP",
	9:  "FLUME",
	10: "SPARK",
	11: "ZEPPELIN",
	12: "OOZIE",
}

var HadoopConfig_Service_value = map[string]int32{
	"SERVICE_UNSPECIFIED": 0,
	"HDFS":                1,
	"YARN":                2,
	"MAPREDUCE":           3,
	"HIVE":                4,
	"TEZ":                 5,
	"ZOOKEEPER":           6,
	"HBASE":               7,
	"SQOOP":               8,
	"FLUME":               9,
	"SPARK":               10,
	"ZEPPELIN":            11,
	"OOZIE":               12,
}

func (x HadoopConfig_Service) String() string {
	return proto.EnumName(HadoopConfig_Service_name, int32(x))
}

func (HadoopConfig_Service) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_62f0592e5d92313c, []int{2, 0}
}

// Description of a Dataproc cluster. For more information, see
// the Yandex Dataproc [documentation](/docs/data-proc/concepts/).
type Cluster struct {
	// ID of the Dataproc cluster.
	// This ID is assigned by Dataproc at creation time.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the folder that the Dataproc cluster belongs to.
	FolderId string `protobuf:"bytes,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Name of the Dataproc cluster.
	// The name is unique within the folder. 1-64 characters long.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the Dataproc cluster. 0-256 characters long.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Custom labels for the Dataproc cluster as `` key:value `` pairs.
	// Maximum 64 per resource.
	Labels map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Monitoring systems relevant to the Dataproc cluster.
	Monitoring []*Monitoring `protobuf:"bytes,7,rep,name=monitoring,proto3" json:"monitoring,omitempty"`
	// Configuration of the Dataproc cluster.
	Config *ClusterConfig `protobuf:"bytes,8,opt,name=config,proto3" json:"config,omitempty"`
	// Aggregated cluster health.
	Health Health `protobuf:"varint,9,opt,name=health,proto3,enum=yandex.cloud.dataproc.v1.Health" json:"health,omitempty"`
	// Cluster status.
	Status Cluster_Status `protobuf:"varint,10,opt,name=status,proto3,enum=yandex.cloud.dataproc.v1.Cluster_Status" json:"status,omitempty"`
	// ID of the availability zone.
	ZoneId string `protobuf:"bytes,11,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// ID of service account for Dataproc manager agent.
	ServiceAccountId string `protobuf:"bytes,12,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Object storage bucket name for Dataproc jobs.
	Bucket               string   `protobuf:"bytes,13,opt,name=bucket,proto3" json:"bucket,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cluster) Reset()         { *m = Cluster{} }
func (m *Cluster) String() string { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()    {}
func (*Cluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_62f0592e5d92313c, []int{0}
}

func (m *Cluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cluster.Unmarshal(m, b)
}
func (m *Cluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cluster.Marshal(b, m, deterministic)
}
func (m *Cluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cluster.Merge(m, src)
}
func (m *Cluster) XXX_Size() int {
	return xxx_messageInfo_Cluster.Size(m)
}
func (m *Cluster) XXX_DiscardUnknown() {
	xxx_messageInfo_Cluster.DiscardUnknown(m)
}

var xxx_messageInfo_Cluster proto.InternalMessageInfo

func (m *Cluster) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Cluster) GetFolderId() string {
	if m != nil {
		return m.FolderId
	}
	return ""
}

func (m *Cluster) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Cluster) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Cluster) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Cluster) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Cluster) GetMonitoring() []*Monitoring {
	if m != nil {
		return m.Monitoring
	}
	return nil
}

func (m *Cluster) GetConfig() *ClusterConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *Cluster) GetHealth() Health {
	if m != nil {
		return m.Health
	}
	return Health_HEALTH_UNKNOWN
}

func (m *Cluster) GetStatus() Cluster_Status {
	if m != nil {
		return m.Status
	}
	return Cluster_STATUS_UNKNOWN
}

func (m *Cluster) GetZoneId() string {
	if m != nil {
		return m.ZoneId
	}
	return ""
}

func (m *Cluster) GetServiceAccountId() string {
	if m != nil {
		return m.ServiceAccountId
	}
	return ""
}

func (m *Cluster) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

// Monitoring system.
type Monitoring struct {
	// Name of the monitoring system.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the monitoring system.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Link to the monitoring system.
	Link                 string   `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Monitoring) Reset()         { *m = Monitoring{} }
func (m *Monitoring) String() string { return proto.CompactTextString(m) }
func (*Monitoring) ProtoMessage()    {}
func (*Monitoring) Descriptor() ([]byte, []int) {
	return fileDescriptor_62f0592e5d92313c, []int{1}
}

func (m *Monitoring) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Monitoring.Unmarshal(m, b)
}
func (m *Monitoring) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Monitoring.Marshal(b, m, deterministic)
}
func (m *Monitoring) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Monitoring.Merge(m, src)
}
func (m *Monitoring) XXX_Size() int {
	return xxx_messageInfo_Monitoring.Size(m)
}
func (m *Monitoring) XXX_DiscardUnknown() {
	xxx_messageInfo_Monitoring.DiscardUnknown(m)
}

var xxx_messageInfo_Monitoring proto.InternalMessageInfo

func (m *Monitoring) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Monitoring) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Monitoring) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

// Configuration, that describes application logic of installed services,
// their properties and settings.
type HadoopConfig struct {
	// List of used services in cluster (for default use empty)
	Services []HadoopConfig_Service `protobuf:"varint,1,rep,packed,name=services,proto3,enum=yandex.cloud.dataproc.v1.HadoopConfig_Service" json:"services,omitempty"`
	// Properties passed to all hosts *-site.xml configurations.
	// In key you need to use prefix 'hdfs:dfs.replication' for setting
	// property 'dfs.replication' in /etc/hadoop/conf/hdfs-site.xml
	Properties map[string]string `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// List of ssh public keys to access to cluster hosts.
	SshPublicKeys        []string `protobuf:"bytes,3,rep,name=ssh_public_keys,json=sshPublicKeys,proto3" json:"ssh_public_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HadoopConfig) Reset()         { *m = HadoopConfig{} }
func (m *HadoopConfig) String() string { return proto.CompactTextString(m) }
func (*HadoopConfig) ProtoMessage()    {}
func (*HadoopConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_62f0592e5d92313c, []int{2}
}

func (m *HadoopConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HadoopConfig.Unmarshal(m, b)
}
func (m *HadoopConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HadoopConfig.Marshal(b, m, deterministic)
}
func (m *HadoopConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HadoopConfig.Merge(m, src)
}
func (m *HadoopConfig) XXX_Size() int {
	return xxx_messageInfo_HadoopConfig.Size(m)
}
func (m *HadoopConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_HadoopConfig.DiscardUnknown(m)
}

var xxx_messageInfo_HadoopConfig proto.InternalMessageInfo

func (m *HadoopConfig) GetServices() []HadoopConfig_Service {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *HadoopConfig) GetProperties() map[string]string {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *HadoopConfig) GetSshPublicKeys() []string {
	if m != nil {
		return m.SshPublicKeys
	}
	return nil
}

type ClusterConfig struct {
	// Version of image for cluster provisioning.
	// All available versions are listed in the [documentation](/docs/managed-hadoop/concepts/image-versions).
	VersionId string `protobuf:"bytes,1,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	// Dataproc specific options
	Hadoop               *HadoopConfig `protobuf:"bytes,2,opt,name=hadoop,proto3" json:"hadoop,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ClusterConfig) Reset()         { *m = ClusterConfig{} }
func (m *ClusterConfig) String() string { return proto.CompactTextString(m) }
func (*ClusterConfig) ProtoMessage()    {}
func (*ClusterConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_62f0592e5d92313c, []int{3}
}

func (m *ClusterConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterConfig.Unmarshal(m, b)
}
func (m *ClusterConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterConfig.Marshal(b, m, deterministic)
}
func (m *ClusterConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterConfig.Merge(m, src)
}
func (m *ClusterConfig) XXX_Size() int {
	return xxx_messageInfo_ClusterConfig.Size(m)
}
func (m *ClusterConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterConfig proto.InternalMessageInfo

func (m *ClusterConfig) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

func (m *ClusterConfig) GetHadoop() *HadoopConfig {
	if m != nil {
		return m.Hadoop
	}
	return nil
}

func init() {
	proto.RegisterEnum("yandex.cloud.dataproc.v1.Cluster_Status", Cluster_Status_name, Cluster_Status_value)
	proto.RegisterEnum("yandex.cloud.dataproc.v1.HadoopConfig_Service", HadoopConfig_Service_name, HadoopConfig_Service_value)
	proto.RegisterType((*Cluster)(nil), "yandex.cloud.dataproc.v1.Cluster")
	proto.RegisterMapType((map[string]string)(nil), "yandex.cloud.dataproc.v1.Cluster.LabelsEntry")
	proto.RegisterType((*Monitoring)(nil), "yandex.cloud.dataproc.v1.Monitoring")
	proto.RegisterType((*HadoopConfig)(nil), "yandex.cloud.dataproc.v1.HadoopConfig")
	proto.RegisterMapType((map[string]string)(nil), "yandex.cloud.dataproc.v1.HadoopConfig.PropertiesEntry")
	proto.RegisterType((*ClusterConfig)(nil), "yandex.cloud.dataproc.v1.ClusterConfig")
}

func init() {
	proto.RegisterFile("yandex/cloud/dataproc/v1/cluster.proto", fileDescriptor_62f0592e5d92313c)
}

var fileDescriptor_62f0592e5d92313c = []byte{
	// 847 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xdf, 0x6f, 0xe3, 0x44,
	0x10, 0xc7, 0xcf, 0x71, 0xe2, 0xc4, 0x93, 0xb6, 0xb7, 0x5a, 0x10, 0x67, 0x15, 0x10, 0x51, 0x04,
	0x25, 0x0f, 0xd4, 0xd1, 0x05, 0x09, 0xdd, 0x81, 0xf8, 0x91, 0x4b, 0xb6, 0xd4, 0xb4, 0x4d, 0xcc,
	0x3a, 0x29, 0x22, 0x2f, 0x91, 0x63, 0x6f, 0x13, 0x2b, 0x8e, 0xd7, 0xb2, 0xd7, 0x11, 0xe1, 0x6f,
	0xe2, 0x0f, 0xe1, 0x4f, 0xe2, 0x11, 0x79, 0xed, 0x86, 0x1c, 0x28, 0xdc, 0xdd, 0xdb, 0xec, 0xcc,
	0xe7, 0x3b, 0x9e, 0x9d, 0x19, 0x2f, 0x5c, 0xec, 0xdc, 0xc8, 0x67, 0xbf, 0x75, 0xbd, 0x90, 0x67,
	0x7e, 0xd7, 0x77, 0x85, 0x1b, 0x27, 0xdc, 0xeb, 0x6e, 0x9f, 0x77, 0xbd, 0x30, 0x4b, 0x05, 0x4b,
	0xcc, 0x38, 0xe1, 0x82, 0x63, 0xa3, 0xe0, 0x4c, 0xc9, 0x99, 0x8f, 0x9c, 0xb9, 0x7d, 0x7e, 0xfe,
	0xc9, 0x92, 0xf3, 0x65, 0xc8, 0xba, 0x92, 0x5b, 0x64, 0x0f, 0x5d, 0x11, 0x6c, 0x58, 0x2a, 0xdc,
	0x4d, 0x5c, 0x48, 0xcf, 0x3f, 0x3b, 0xfe, 0x09, 0xbe, 0xd9, 0xf0, 0xa8, 0xc0, 0xda, 0x7f, 0xd5,
	0xa0, 0x3e, 0x28, 0xbe, 0x89, 0xcf, 0xa0, 0x12, 0xf8, 0x86, 0xd2, 0x52, 0x3a, 0x3a, 0xad, 0x04,
	0x3e, 0xfe, 0x10, 0xf4, 0x07, 0x1e, 0xfa, 0x2c, 0x99, 0x07, 0xbe, 0x51, 0x91, 0xee, 0x46, 0xe1,
	0xb0, 0x7c, 0xfc, 0x12, 0xc0, 0x4b, 0x98, 0x2b, 0x98, 0x3f, 0x77, 0x85, 0xa1, 0xb6, 0x94, 0x4e,
	0xb3, 0x77, 0x6e, 0x16, 0x55, 0x99, 0x8f, 0x55, 0x99, 0x93, 0xc7, 0xaa, 0xa8, 0x5e, 0xd2, 0x7d,
	0x81, 0x31, 0x54, 0x23, 0x77, 0xc3, 0x8c, 0xaa, 0x4c, 0x29, 0x6d, 0xdc, 0x82, 0xa6, 0xcf, 0x52,
	0x2f, 0x09, 0x62, 0x11, 0xf0, 0xc8, 0xa8, 0xc9, 0xd0, 0xa1, 0x0b, 0x13, 0xd0, 0x42, 0x77, 0xc1,
	0xc2, 0xd4, 0xd0, 0x5a, 0x6a, 0xa7, 0xd9, 0xbb, 0x34, 0x8f, 0x35, 0xc7, 0x2c, 0x2f, 0x64, 0xde,
	0x4a, 0x9e, 0x44, 0x22, 0xd9, 0xd1, 0x52, 0x8c, 0x87, 0x00, 0x1b, 0x1e, 0x05, 0x82, 0x27, 0x41,
	0xb4, 0x34, 0xea, 0x32, 0xd5, 0xa7, 0xc7, 0x53, 0xdd, 0xed, 0x59, 0x7a, 0xa0, 0xc3, 0xdf, 0x83,
	0xe6, 0xf1, 0xe8, 0x21, 0x58, 0x1a, 0x0d, 0x79, 0xf3, 0xcf, 0xdf, 0x58, 0xcc, 0x40, 0xe2, 0xb4,
	0x94, 0xe1, 0x17, 0xa0, 0xad, 0x98, 0x1b, 0x8a, 0x95, 0xa1, 0xb7, 0x94, 0xce, 0x59, 0xaf, 0x75,
	0x3c, 0xc1, 0xb5, 0xe4, 0x68, 0xc9, 0xe3, 0x1f, 0x40, 0x4b, 0x85, 0x2b, 0xb2, 0xd4, 0x00, 0xa9,
	0xec, 0xbc, 0xb9, 0x0f, 0x8e, 0xe4, 0x69, 0xa9, 0xc3, 0xcf, 0xa0, 0xfe, 0x3b, 0x8f, 0x58, 0x3e,
	0xd5, 0xa6, 0xec, 0xb3, 0x96, 0x1f, 0x2d, 0x1f, 0x7f, 0x01, 0x38, 0x65, 0xc9, 0x36, 0xf0, 0xd8,
	0xdc, 0xf5, 0x3c, 0x9e, 0x45, 0x22, 0x67, 0x4e, 0x24, 0x83, 0xca, 0x48, 0xbf, 0x08, 0x58, 0x3e,
	0xfe, 0x00, 0xb4, 0x45, 0xe6, 0xad, 0x99, 0x30, 0x4e, 0x8b, 0x2c, 0xc5, 0xe9, 0xfc, 0x25, 0x34,
	0x0f, 0x1a, 0x8f, 0x11, 0xa8, 0x6b, 0xb6, 0x2b, 0xd7, 0x2a, 0x37, 0xf1, 0xfb, 0x50, 0xdb, 0xba,
	0x61, 0xc6, 0xca, 0x9d, 0x2a, 0x0e, 0x5f, 0x57, 0x5e, 0x28, 0xed, 0x35, 0x68, 0x45, 0xad, 0x18,
	0xc3, 0x99, 0x33, 0xe9, 0x4f, 0xa6, 0xce, 0x7c, 0x3a, 0xba, 0x19, 0x8d, 0x7f, 0x19, 0xa1, 0x27,
	0xf8, 0x04, 0x1a, 0x03, 0x4a, 0xfa, 0x13, 0x6b, 0xf4, 0x23, 0x52, 0x70, 0x13, 0xea, 0x74, 0x3a,
	0x1a, 0xe5, 0x87, 0x0a, 0xd6, 0xa1, 0x46, 0x28, 0x1d, 0x53, 0xa4, 0xe6, 0x94, 0x33, 0x19, 0xdb,
	0x76, 0x1e, 0xa8, 0xe6, 0x94, 0x3c, 0x91, 0x21, 0xaa, 0x15, 0xa1, 0x3e, 0x95, 0x09, 0xb4, 0xf6,
	0x3d, 0xc0, 0x3f, 0xd3, 0xdd, 0x2f, 0xa5, 0x72, 0x7c, 0x29, 0x2b, 0xff, 0x5d, 0x4a, 0x0c, 0xd5,
	0x30, 0x88, 0xd6, 0x72, 0xff, 0x75, 0x2a, 0xed, 0xf6, 0x9f, 0x2a, 0x9c, 0x5c, 0xbb, 0x3e, 0xe7,
	0x71, 0x31, 0x73, 0xfc, 0x13, 0x34, 0xca, 0xe6, 0xa5, 0x86, 0xd2, 0x52, 0x3b, 0x67, 0x3d, 0xf3,
	0x7f, 0xa6, 0x7d, 0xa0, 0x34, 0x9d, 0x42, 0x46, 0xf7, 0x7a, 0x7c, 0x0f, 0x10, 0x27, 0x3c, 0x66,
	0x89, 0x08, 0x58, 0x6a, 0x54, 0xe4, 0xfa, 0x7e, 0xf5, 0x96, 0xd9, 0xec, 0xbd, 0xb0, 0xf8, 0x25,
	0x0e, 0x32, 0xe1, 0x0b, 0x78, 0x9a, 0xa6, 0xab, 0x79, 0x9c, 0x2d, 0xc2, 0xc0, 0x9b, 0xaf, 0xd9,
	0x2e, 0x35, 0xd4, 0x96, 0xda, 0xd1, 0xe9, 0x69, 0x9a, 0xae, 0x6c, 0xe9, 0xbd, 0x61, 0xbb, 0xf4,
	0xfc, 0x5b, 0x78, 0xfa, 0xaf, 0x34, 0xef, 0x34, 0xe0, 0x3f, 0x14, 0xa8, 0x97, 0x97, 0xc2, 0xcf,
	0xe0, 0x3d, 0x87, 0xd0, 0x7b, 0x6b, 0x40, 0xe6, 0xd3, 0x91, 0x63, 0x93, 0x81, 0x75, 0x65, 0x91,
	0x21, 0x7a, 0x82, 0x1b, 0x50, 0xbd, 0x1e, 0x5e, 0x39, 0x48, 0xc9, 0xad, 0x5f, 0xfb, 0x74, 0x84,
	0x2a, 0xf8, 0x14, 0xf4, 0xbb, 0xbe, 0x4d, 0xc9, 0x70, 0x3a, 0x20, 0x48, 0x95, 0x88, 0x75, 0x4f,
	0x50, 0x15, 0xd7, 0x41, 0x9d, 0x90, 0x19, 0xaa, 0xe5, 0xc4, 0x6c, 0x3c, 0xbe, 0x21, 0xc4, 0x26,
	0x14, 0x69, 0xf9, 0x46, 0x5c, 0xbf, 0xea, 0x3b, 0x04, 0xd5, 0x73, 0xd3, 0xf9, 0x79, 0x3c, 0xb6,
	0x51, 0x23, 0x37, 0xaf, 0x6e, 0xa7, 0x77, 0x04, 0xe9, 0xd2, 0x6b, 0xf7, 0xe9, 0x0d, 0x82, 0x7c,
	0x2f, 0x66, 0xc4, 0xb6, 0xc9, 0xad, 0x35, 0x42, 0xcd, 0x3c, 0x30, 0x1e, 0xcf, 0x2c, 0x82, 0x4e,
	0xda, 0x11, 0x9c, 0xbe, 0xf6, 0xfb, 0xe2, 0x8f, 0x01, 0xb6, 0x2c, 0x49, 0x03, 0x1e, 0xcd, 0xf7,
	0x4f, 0xa5, 0x5e, 0x7a, 0x2c, 0x1f, 0x7f, 0x07, 0xda, 0x4a, 0x76, 0x5c, 0xde, 0xbc, 0xd9, 0xbb,
	0x78, 0xbb, 0xc9, 0xd0, 0x52, 0xf5, 0x8a, 0xc1, 0x47, 0xaf, 0x09, 0xdc, 0x38, 0x38, 0x14, 0xcd,
	0xc8, 0x32, 0x10, 0xab, 0x6c, 0x61, 0x7a, 0x7c, 0xd3, 0x2d, 0xc0, 0xcb, 0xe2, 0x7d, 0x5f, 0xf2,
	0xcb, 0x25, 0x8b, 0xe4, 0xb3, 0xdb, 0x3d, 0xf6, 0xf0, 0x7f, 0xf3, 0x68, 0x2f, 0x34, 0x09, 0x7e,
	0xf9, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5c, 0xf2, 0x01, 0x31, 0x87, 0x06, 0x00, 0x00,
}
